(()=>{var __webpack_modules__={7351:function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){if(n===undefined)n=s;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,n){if(n===undefined)n=s;e[n]=t[s]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(s!=="default"&&Object.hasOwnProperty.call(e,s))n(t,e,s);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.issue=t.issueCommand=void 0;const o=r(s(2087));const a=s(5278);function issueCommand(e,t,s){const n=new Command(e,t,s);process.stdout.write(n.toString()+o.EOL)}t.issueCommand=issueCommand;function issue(e,t=""){issueCommand(e,{},t)}t.issue=issue;const l="::";class Command{constructor(e,t,s){if(!e){e="missing.command"}this.command=e;this.properties=t;this.message=s}toString(){let e=l+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let t=true;for(const s in this.properties){if(this.properties.hasOwnProperty(s)){const n=this.properties[s];if(n){if(t){t=false}else{e+=","}e+=`${s}=${escapeProperty(n)}`}}}}e+=`${l}${escapeData(this.message)}`;return e}}function escapeData(e){return a.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return a.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},2186:function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){if(n===undefined)n=s;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,n){if(n===undefined)n=s;e[n]=t[s]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(s!=="default"&&Object.hasOwnProperty.call(e,s))n(t,e,s);i(t,e);return t};var o=this&&this.__awaiter||function(e,t,s,n){function adopt(e){return e instanceof s?e:new s((function(t){t(e)}))}return new(s||(s=Promise))((function(s,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?s(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.getState=t.saveState=t.group=t.endGroup=t.startGroup=t.info=t.notice=t.warning=t.error=t.debug=t.isDebug=t.setFailed=t.setCommandEcho=t.setOutput=t.getBooleanInput=t.getMultilineInput=t.getInput=t.addPath=t.setSecret=t.exportVariable=t.ExitCode=void 0;const a=s(7351);const l=s(717);const c=s(5278);const u=r(s(2087));const d=r(s(5622));var p;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(p=t.ExitCode||(t.ExitCode={}));function exportVariable(e,t){const s=c.toCommandValue(t);process.env[e]=s;const n=process.env["GITHUB_ENV"]||"";if(n){const t="_GitHubActionsFileCommandDelimeter_";const n=`${e}<<${t}${u.EOL}${s}${u.EOL}${t}`;l.issueCommand("ENV",n)}else{a.issueCommand("set-env",{name:e},s)}}t.exportVariable=exportVariable;function setSecret(e){a.issueCommand("add-mask",{},e)}t.setSecret=setSecret;function addPath(e){const t=process.env["GITHUB_PATH"]||"";if(t){l.issueCommand("PATH",e)}else{a.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${d.delimiter}${process.env["PATH"]}`}t.addPath=addPath;function getInput(e,t){const s=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(t&&t.required&&!s){throw new Error(`Input required and not supplied: ${e}`)}if(t&&t.trimWhitespace===false){return s}return s.trim()}t.getInput=getInput;function getMultilineInput(e,t){const s=getInput(e,t).split("\n").filter((e=>e!==""));return s}t.getMultilineInput=getMultilineInput;function getBooleanInput(e,t){const s=["true","True","TRUE"];const n=["false","False","FALSE"];const i=getInput(e,t);if(s.includes(i))return true;if(n.includes(i))return false;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n`+`Support boolean input list: \`true | True | TRUE | false | False | FALSE\``)}t.getBooleanInput=getBooleanInput;function setOutput(e,t){process.stdout.write(u.EOL);a.issueCommand("set-output",{name:e},t)}t.setOutput=setOutput;function setCommandEcho(e){a.issue("echo",e?"on":"off")}t.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=p.Failure;error(e)}t.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}t.isDebug=isDebug;function debug(e){a.issueCommand("debug",{},e)}t.debug=debug;function error(e,t={}){a.issueCommand("error",c.toCommandProperties(t),e instanceof Error?e.toString():e)}t.error=error;function warning(e,t={}){a.issueCommand("warning",c.toCommandProperties(t),e instanceof Error?e.toString():e)}t.warning=warning;function notice(e,t={}){a.issueCommand("notice",c.toCommandProperties(t),e instanceof Error?e.toString():e)}t.notice=notice;function info(e){process.stdout.write(e+u.EOL)}t.info=info;function startGroup(e){a.issue("group",e)}t.startGroup=startGroup;function endGroup(){a.issue("endgroup")}t.endGroup=endGroup;function group(e,t){return o(this,void 0,void 0,(function*(){startGroup(e);let s;try{s=yield t()}finally{endGroup()}return s}))}t.group=group;function saveState(e,t){a.issueCommand("save-state",{name:e},t)}t.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}t.getState=getState},717:function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){if(n===undefined)n=s;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,n){if(n===undefined)n=s;e[n]=t[s]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(s!=="default"&&Object.hasOwnProperty.call(e,s))n(t,e,s);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.issueCommand=void 0;const o=r(s(5747));const a=r(s(2087));const l=s(5278);function issueCommand(e,t){const s=process.env[`GITHUB_${e}`];if(!s){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!o.existsSync(s)){throw new Error(`Missing file at path: ${s}`)}o.appendFileSync(s,`${l.toCommandValue(t)}${a.EOL}`,{encoding:"utf8"})}t.issueCommand=issueCommand},5278:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toCommandProperties=t.toCommandValue=void 0;function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}t.toCommandValue=toCommandValue;function toCommandProperties(e){if(!Object.keys(e).length){return{}}return{title:e.title,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}}t.toCommandProperties=toCommandProperties},4087:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Context=void 0;const n=s(5747);const i=s(2087);class Context{constructor(){var e,t,s;this.payload={};if(process.env.GITHUB_EVENT_PATH){if(n.existsSync(process.env.GITHUB_EVENT_PATH)){this.payload=JSON.parse(n.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}))}else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${i.EOL}`)}}this.eventName=process.env.GITHUB_EVENT_NAME;this.sha=process.env.GITHUB_SHA;this.ref=process.env.GITHUB_REF;this.workflow=process.env.GITHUB_WORKFLOW;this.action=process.env.GITHUB_ACTION;this.actor=process.env.GITHUB_ACTOR;this.job=process.env.GITHUB_JOB;this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10);this.runId=parseInt(process.env.GITHUB_RUN_ID,10);this.apiUrl=(e=process.env.GITHUB_API_URL)!==null&&e!==void 0?e:`https://api.github.com`;this.serverUrl=(t=process.env.GITHUB_SERVER_URL)!==null&&t!==void 0?t:`https://github.com`;this.graphqlUrl=(s=process.env.GITHUB_GRAPHQL_URL)!==null&&s!==void 0?s:`https://api.github.com/graphql`}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,t]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:t}}if(this.payload.repository){return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name}}throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}t.Context=Context},5438:function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){if(n===undefined)n=s;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,n){if(n===undefined)n=s;e[n]=t[s]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(s!=="default"&&Object.hasOwnProperty.call(e,s))n(t,e,s);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokit=t.context=void 0;const o=r(s(4087));const a=s(3030);t.context=new o.Context;function getOctokit(e,t){return new a.GitHub(a.getOctokitOptions(e,t))}t.getOctokit=getOctokit},7914:function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){if(n===undefined)n=s;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,n){if(n===undefined)n=s;e[n]=t[s]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(s!=="default"&&Object.hasOwnProperty.call(e,s))n(t,e,s);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getApiBaseUrl=t.getProxyAgent=t.getAuthString=void 0;const o=r(s(9925));function getAuthString(e,t){if(!e&&!t.auth){throw new Error("Parameter token or opts.auth is required")}else if(e&&t.auth){throw new Error("Parameters token and opts.auth may not both be specified")}return typeof t.auth==="string"?t.auth:`token ${e}`}t.getAuthString=getAuthString;function getProxyAgent(e){const t=new o.HttpClient;return t.getAgent(e)}t.getProxyAgent=getProxyAgent;function getApiBaseUrl(){return process.env["GITHUB_API_URL"]||"https://api.github.com"}t.getApiBaseUrl=getApiBaseUrl},3030:function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){if(n===undefined)n=s;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,n){if(n===undefined)n=s;e[n]=t[s]});var i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(s!=="default"&&Object.hasOwnProperty.call(e,s))n(t,e,s);i(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokitOptions=t.GitHub=t.context=void 0;const o=r(s(4087));const a=r(s(7914));const l=s(6762);const c=s(3044);const u=s(4193);t.context=new o.Context;const d=a.getApiBaseUrl();const p={baseUrl:d,request:{agent:a.getProxyAgent(d)}};t.GitHub=l.Octokit.plugin(c.restEndpointMethods,u.paginateRest).defaults(p);function getOctokitOptions(e,t){const s=Object.assign({},t||{});const n=a.getAuthString(e,s);if(n){s.auth=n}return s}t.getOctokitOptions=getOctokitOptions},9925:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const n=s(8605);const i=s(7211);const r=s(6443);let o;var a;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(a=t.HttpCodes||(t.HttpCodes={}));var l;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(l=t.Headers||(t.Headers={}));var c;(function(e){e["ApplicationJson"]="application/json"})(c=t.MediaTypes||(t.MediaTypes={}));function getProxyUrl(e){let t=r.getProxyUrl(new URL(e));return t?t.href:""}t.getProxyUrl=getProxyUrl;const u=[a.MovedPermanently,a.ResourceMoved,a.SeeOther,a.TemporaryRedirect,a.PermanentRedirect];const d=[a.BadGateway,a.ServiceUnavailable,a.GatewayTimeout];const p=["OPTIONS","GET","DELETE","HEAD"];const _=10;const m=5;class HttpClientError extends Error{constructor(e,t){super(e);this.name="HttpClientError";this.statusCode=t;Object.setPrototypeOf(this,HttpClientError.prototype)}}t.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return new Promise((async(e,t)=>{let s=Buffer.alloc(0);this.message.on("data",(e=>{s=Buffer.concat([s,e])}));this.message.on("end",(()=>{e(s.toString())}))}))}}t.HttpClientResponse=HttpClientResponse;function isHttps(e){let t=new URL(e);return t.protocol==="https:"}t.isHttps=isHttps;class HttpClient{constructor(e,t,s){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=t||[];this.requestOptions=s;if(s){if(s.ignoreSslError!=null){this._ignoreSslError=s.ignoreSslError}this._socketTimeout=s.socketTimeout;if(s.allowRedirects!=null){this._allowRedirects=s.allowRedirects}if(s.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=s.allowRedirectDowngrade}if(s.maxRedirects!=null){this._maxRedirects=Math.max(s.maxRedirects,0)}if(s.keepAlive!=null){this._keepAlive=s.keepAlive}if(s.allowRetries!=null){this._allowRetries=s.allowRetries}if(s.maxRetries!=null){this._maxRetries=s.maxRetries}}}options(e,t){return this.request("OPTIONS",e,null,t||{})}get(e,t){return this.request("GET",e,null,t||{})}del(e,t){return this.request("DELETE",e,null,t||{})}post(e,t,s){return this.request("POST",e,t,s||{})}patch(e,t,s){return this.request("PATCH",e,t,s||{})}put(e,t,s){return this.request("PUT",e,t,s||{})}head(e,t){return this.request("HEAD",e,null,t||{})}sendStream(e,t,s,n){return this.request(e,t,s,n)}async getJson(e,t={}){t[l.Accept]=this._getExistingOrDefaultHeader(t,l.Accept,c.ApplicationJson);let s=await this.get(e,t);return this._processResponse(s,this.requestOptions)}async postJson(e,t,s={}){let n=JSON.stringify(t,null,2);s[l.Accept]=this._getExistingOrDefaultHeader(s,l.Accept,c.ApplicationJson);s[l.ContentType]=this._getExistingOrDefaultHeader(s,l.ContentType,c.ApplicationJson);let i=await this.post(e,n,s);return this._processResponse(i,this.requestOptions)}async putJson(e,t,s={}){let n=JSON.stringify(t,null,2);s[l.Accept]=this._getExistingOrDefaultHeader(s,l.Accept,c.ApplicationJson);s[l.ContentType]=this._getExistingOrDefaultHeader(s,l.ContentType,c.ApplicationJson);let i=await this.put(e,n,s);return this._processResponse(i,this.requestOptions)}async patchJson(e,t,s={}){let n=JSON.stringify(t,null,2);s[l.Accept]=this._getExistingOrDefaultHeader(s,l.Accept,c.ApplicationJson);s[l.ContentType]=this._getExistingOrDefaultHeader(s,l.ContentType,c.ApplicationJson);let i=await this.patch(e,n,s);return this._processResponse(i,this.requestOptions)}async request(e,t,s,n){if(this._disposed){throw new Error("Client has already been disposed.")}let i=new URL(t);let r=this._prepareRequest(e,i,n);let o=this._allowRetries&&p.indexOf(e)!=-1?this._maxRetries+1:1;let l=0;let c;while(l<o){c=await this.requestRaw(r,s);if(c&&c.message&&c.message.statusCode===a.Unauthorized){let e;for(let t=0;t<this.handlers.length;t++){if(this.handlers[t].canHandleAuthentication(c)){e=this.handlers[t];break}}if(e){return e.handleAuthentication(this,r,s)}else{return c}}let t=this._maxRedirects;while(u.indexOf(c.message.statusCode)!=-1&&this._allowRedirects&&t>0){const o=c.message.headers["location"];if(!o){break}let a=new URL(o);if(i.protocol=="https:"&&i.protocol!=a.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}await c.readBody();if(a.hostname!==i.hostname){for(let e in n){if(e.toLowerCase()==="authorization"){delete n[e]}}}r=this._prepareRequest(e,a,n);c=await this.requestRaw(r,s);t--}if(d.indexOf(c.message.statusCode)==-1){return c}l+=1;if(l<o){await c.readBody();await this._performExponentialBackoff(l)}}return c}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,t){return new Promise(((s,n)=>{let callbackForResult=function(e,t){if(e){n(e)}s(t)};this.requestRawWithCallback(e,t,callbackForResult)}))}requestRawWithCallback(e,t,s){let n;if(typeof t==="string"){e.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8")}let i=false;let handleResult=(e,t)=>{if(!i){i=true;s(e,t)}};let r=e.httpModule.request(e.options,(e=>{let t=new HttpClientResponse(e);handleResult(null,t)}));r.on("socket",(e=>{n=e}));r.setTimeout(this._socketTimeout||3*6e4,(()=>{if(n){n.end()}handleResult(new Error("Request timeout: "+e.options.path),null)}));r.on("error",(function(e){handleResult(e,null)}));if(t&&typeof t==="string"){r.write(t,"utf8")}if(t&&typeof t!=="string"){t.on("close",(function(){r.end()}));t.pipe(r)}else{r.end()}}getAgent(e){let t=new URL(e);return this._getAgent(t)}_prepareRequest(e,t,s){const r={};r.parsedUrl=t;const o=r.parsedUrl.protocol==="https:";r.httpModule=o?i:n;const a=o?443:80;r.options={};r.options.host=r.parsedUrl.hostname;r.options.port=r.parsedUrl.port?parseInt(r.parsedUrl.port):a;r.options.path=(r.parsedUrl.pathname||"")+(r.parsedUrl.search||"");r.options.method=e;r.options.headers=this._mergeHeaders(s);if(this.userAgent!=null){r.options.headers["user-agent"]=this.userAgent}r.options.agent=this._getAgent(r.parsedUrl);if(this.handlers){this.handlers.forEach((e=>{e.prepareRequest(r.options)}))}return r}_mergeHeaders(e){const lowercaseKeys=e=>Object.keys(e).reduce(((t,s)=>(t[s.toLowerCase()]=e[s],t)),{});if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(e))}return lowercaseKeys(e||{})}_getExistingOrDefaultHeader(e,t,s){const lowercaseKeys=e=>Object.keys(e).reduce(((t,s)=>(t[s.toLowerCase()]=e[s],t)),{});let n;if(this.requestOptions&&this.requestOptions.headers){n=lowercaseKeys(this.requestOptions.headers)[t]}return e[t]||n||s}_getAgent(e){let t;let a=r.getProxyUrl(e);let l=a&&a.hostname;if(this._keepAlive&&l){t=this._proxyAgent}if(this._keepAlive&&!l){t=this._agent}if(!!t){return t}const c=e.protocol==="https:";let u=100;if(!!this.requestOptions){u=this.requestOptions.maxSockets||n.globalAgent.maxSockets}if(l){if(!o){o=s(4294)}const e={maxSockets:u,keepAlive:this._keepAlive,proxy:{...(a.username||a.password)&&{proxyAuth:`${a.username}:${a.password}`},host:a.hostname,port:a.port}};let n;const i=a.protocol==="https:";if(c){n=i?o.httpsOverHttps:o.httpsOverHttp}else{n=i?o.httpOverHttps:o.httpOverHttp}t=n(e);this._proxyAgent=t}if(this._keepAlive&&!t){const e={keepAlive:this._keepAlive,maxSockets:u};t=c?new i.Agent(e):new n.Agent(e);this._agent=t}if(!t){t=c?i.globalAgent:n.globalAgent}if(c&&this._ignoreSslError){t.options=Object.assign(t.options||{},{rejectUnauthorized:false})}return t}_performExponentialBackoff(e){e=Math.min(_,e);const t=m*Math.pow(2,e);return new Promise((e=>setTimeout((()=>e()),t)))}static dateTimeDeserializer(e,t){if(typeof t==="string"){let e=new Date(t);if(!isNaN(e.valueOf())){return e}}return t}async _processResponse(e,t){return new Promise((async(s,n)=>{const i=e.message.statusCode;const r={statusCode:i,result:null,headers:{}};if(i==a.NotFound){s(r)}let o;let l;try{l=await e.readBody();if(l&&l.length>0){if(t&&t.deserializeDates){o=JSON.parse(l,HttpClient.dateTimeDeserializer)}else{o=JSON.parse(l)}r.result=o}r.headers=e.message.headers}catch(e){}if(i>299){let e;if(o&&o.message){e=o.message}else if(l&&l.length>0){e=l}else{e="Failed request: ("+i+")"}let t=new HttpClientError(e,i);t.result=r.result;n(t)}else{s(r)}}))}}t.HttpClient=HttpClient},6443:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function getProxyUrl(e){let t=e.protocol==="https:";let s;if(checkBypass(e)){return s}let n;if(t){n=process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{n=process.env["http_proxy"]||process.env["HTTP_PROXY"]}if(n){s=new URL(n)}return s}t.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}let t=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!t){return false}let s;if(e.port){s=Number(e.port)}else if(e.protocol==="http:"){s=80}else if(e.protocol==="https:"){s=443}let n=[e.hostname.toUpperCase()];if(typeof s==="number"){n.push(`${n[0]}:${s}`)}for(let e of t.split(",").map((e=>e.trim().toUpperCase())).filter((e=>e))){if(n.some((t=>t===e))){return true}}return false}t.checkBypass=checkBypass},1231:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var n=s(6762);var i=s(20);var r=s(4193);var o=s(3044);var a=s(7219);function ownKeys(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t){n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))}s.push.apply(s,n)}return s}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var s=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(s),true).forEach((function(t){_defineProperty(e,t,s[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(s))}else{ownKeys(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}}return e}function _defineProperty(e,t,s){if(t in e){Object.defineProperty(e,t,{value:s,enumerable:true,configurable:true,writable:true})}else{e[t]=s}return e}const l="3.15.1";const c={authStrategy:i.createActionAuth,baseUrl:getApiBaseUrl(),userAgent:`octokit-action.js/${l}`};const u=n.Octokit.plugin(r.paginateRest,o.legacyRestEndpointMethods).defaults((function buildDefaults(e){return _objectSpread2(_objectSpread2(_objectSpread2({},c),e),{},{request:_objectSpread2({agent:getHttpsProxyAgent()},e.request)})}));function getApiBaseUrl(){return process.env["GITHUB_API_URL"]||"https://api.github.com"}function getHttpsProxyAgent(){const e=process.env["HTTPS_PROXY"]||process.env["https_proxy"];if(!e)return undefined;return new a.HttpsProxyAgent(e)}t.Octokit=u},20:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var n=s(334);const i=function createActionAuth(){if(!process.env.GITHUB_ACTION){throw new Error("[@octokit/auth-action] `GITHUB_ACTION` environment variable is not set. @octokit/auth-action is meant to be used in GitHub Actions only.")}const e=[process.env.GITHUB_TOKEN,process.env.INPUT_GITHUB_TOKEN,process.env.INPUT_TOKEN].filter(Boolean);if(e.length===0){throw new Error("[@octokit/auth-action] `GITHUB_TOKEN` variable is not set. It must be set on either `env:` or `with:`. See https://github.com/octokit/auth-action.js#createactionauth")}if(e.length>1){throw new Error("[@octokit/auth-action] The token variable is specified more than once. Use either `with.token`, `with.GITHUB_TOKEN`, or `env.GITHUB_TOKEN`. See https://github.com/octokit/auth-action.js#createactionauth")}const t=e.pop();return n.createTokenAuth(t)};t.createActionAuth=i},334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});async function auth(e){const t=e.split(/\./).length===3?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:t}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,t,s,n){const i=t.endpoint.merge(s,n);i.headers.authorization=withAuthorizationPrefix(e);return t(i)}const s=function createTokenAuth(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};t.createTokenAuth=s},6762:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var n=s(5030);var i=s(3682);var r=s(6234);var o=s(8467);var a=s(334);function _objectWithoutPropertiesLoose(e,t){if(e==null)return{};var s={};var n=Object.keys(e);var i,r;for(r=0;r<n.length;r++){i=n[r];if(t.indexOf(i)>=0)continue;s[i]=e[i]}return s}function _objectWithoutProperties(e,t){if(e==null)return{};var s=_objectWithoutPropertiesLoose(e,t);var n,i;if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++){n=r[i];if(t.indexOf(n)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(e,n))continue;s[n]=e[n]}}return s}const l="3.5.1";const c=["authStrategy"];class Octokit{constructor(e={}){const t=new i.Collection;const s={baseUrl:r.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};s.headers["user-agent"]=[e.userAgent,`octokit-core.js/${l} ${n.getUserAgent()}`].filter(Boolean).join(" ");if(e.baseUrl){s.baseUrl=e.baseUrl}if(e.previews){s.mediaType.previews=e.previews}if(e.timeZone){s.headers["time-zone"]=e.timeZone}this.request=r.request.defaults(s);this.graphql=o.withCustomRequest(this.request).defaults(s);this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log);this.hook=t;if(!e.authStrategy){if(!e.auth){this.auth=async()=>({type:"unauthenticated"})}else{const s=a.createTokenAuth(e.auth);t.wrap("request",s.hook);this.auth=s}}else{const{authStrategy:s}=e,n=_objectWithoutProperties(e,c);const i=s(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:n},e.auth));t.wrap("request",i.hook);this.auth=i}const u=this.constructor;u.plugins.forEach((t=>{Object.assign(this,t(this,e))}))}static defaults(e){const t=class extends(this){constructor(...t){const s=t[0]||{};if(typeof e==="function"){super(e(s));return}super(Object.assign({},e,s,s.userAgent&&e.userAgent?{userAgent:`${s.userAgent} ${e.userAgent}`}:null))}};return t}static plugin(...e){var t;const s=this.plugins;const n=(t=class extends(this){},t.plugins=s.concat(e.filter((e=>!s.includes(e)))),t);return n}}Octokit.VERSION=l;Octokit.plugins=[];t.Octokit=Octokit},9440:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var n=s(3287);var i=s(5030);function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce(((t,s)=>{t[s.toLowerCase()]=e[s];return t}),{})}function mergeDeep(e,t){const s=Object.assign({},e);Object.keys(t).forEach((i=>{if(n.isPlainObject(t[i])){if(!(i in e))Object.assign(s,{[i]:t[i]});else s[i]=mergeDeep(e[i],t[i])}else{Object.assign(s,{[i]:t[i]})}}));return s}function removeUndefinedProperties(e){for(const t in e){if(e[t]===undefined){delete e[t]}}return e}function merge(e,t,s){if(typeof t==="string"){let[e,n]=t.split(" ");s=Object.assign(n?{method:e,url:n}:{url:e},s)}else{s=Object.assign({},t)}s.headers=lowercaseKeys(s.headers);removeUndefinedProperties(s);removeUndefinedProperties(s.headers);const n=mergeDeep(e||{},s);if(e&&e.mediaType.previews.length){n.mediaType.previews=e.mediaType.previews.filter((e=>!n.mediaType.previews.includes(e))).concat(n.mediaType.previews)}n.mediaType.previews=n.mediaType.previews.map((e=>e.replace(/-preview/,"")));return n}function addQueryParameters(e,t){const s=/\?/.test(e)?"&":"?";const n=Object.keys(t);if(n.length===0){return e}return e+s+n.map((e=>{if(e==="q"){return"q="+t.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(t[e])}`})).join("&")}const r=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const t=e.match(r);if(!t){return[]}return t.map(removeNonChars).reduce(((e,t)=>e.concat(t)),[])}function omit(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,s)=>{t[s]=e[s];return t}),{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e})).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(e,t,s){t=e==="+"||e==="#"?encodeReserved(t):encodeUnreserved(t);if(s){return encodeUnreserved(s)+"="+t}else{return t}}function isDefined(e){return e!==undefined&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,t,s,n){var i=e[s],r=[];if(isDefined(i)&&i!==""){if(typeof i==="string"||typeof i==="number"||typeof i==="boolean"){i=i.toString();if(n&&n!=="*"){i=i.substring(0,parseInt(n,10))}r.push(encodeValue(t,i,isKeyOperator(t)?s:""))}else{if(n==="*"){if(Array.isArray(i)){i.filter(isDefined).forEach((function(e){r.push(encodeValue(t,e,isKeyOperator(t)?s:""))}))}else{Object.keys(i).forEach((function(e){if(isDefined(i[e])){r.push(encodeValue(t,i[e],e))}}))}}else{const e=[];if(Array.isArray(i)){i.filter(isDefined).forEach((function(s){e.push(encodeValue(t,s))}))}else{Object.keys(i).forEach((function(s){if(isDefined(i[s])){e.push(encodeUnreserved(s));e.push(encodeValue(t,i[s].toString()))}}))}if(isKeyOperator(t)){r.push(encodeUnreserved(s)+"="+e.join(","))}else if(e.length!==0){r.push(e.join(","))}}}}else{if(t===";"){if(isDefined(i)){r.push(encodeUnreserved(s))}}else if(i===""&&(t==="&"||t==="?")){r.push(encodeUnreserved(s)+"=")}else if(i===""){r.push("")}}return r}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var s=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,n,i){if(n){let e="";const i=[];if(s.indexOf(n.charAt(0))!==-1){e=n.charAt(0);n=n.substr(1)}n.split(/,/g).forEach((function(s){var n=/([^:\*]*)(?::(\d+)|(\*))?/.exec(s);i.push(getValues(t,e,n[1],n[2]||n[3]))}));if(e&&e!=="+"){var r=",";if(e==="?"){r="&"}else if(e!=="#"){r=e}return(i.length!==0?e:"")+i.join(r)}else{return i.join(",")}}else{return encodeReserved(i)}}))}function parse(e){let t=e.method.toUpperCase();let s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let n=Object.assign({},e.headers);let i;let r=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const o=extractUrlVariableNames(s);s=parseUrl(s).expand(r);if(!/^http/.test(s)){s=e.baseUrl+s}const a=Object.keys(e).filter((e=>o.includes(e))).concat("baseUrl");const l=omit(r,a);const c=/application\/octet-stream/i.test(n.accept);if(!c){if(e.mediaType.format){n.accept=n.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")}if(e.mediaType.previews.length){const t=n.accept.match(/[\w-]+(?=-preview)/g)||[];n.accept=t.concat(e.mediaType.previews).map((t=>{const s=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${t}-preview${s}`})).join(",")}}if(["GET","HEAD"].includes(t)){s=addQueryParameters(s,l)}else{if("data"in l){i=l.data}else{if(Object.keys(l).length){i=l}else{n["content-length"]=0}}}if(!n["content-type"]&&typeof i!=="undefined"){n["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(t)&&typeof i==="undefined"){i=""}return Object.assign({method:t,url:s,headers:n},typeof i!=="undefined"?{body:i}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,s){return parse(merge(e,t,s))}function withDefaults(e,t){const s=merge(e,t);const n=endpointWithDefaults.bind(null,s);return Object.assign(n,{DEFAULTS:s,defaults:withDefaults.bind(null,s),merge:merge.bind(null,s),parse:parse})}const o="6.0.12";const a=`octokit-endpoint.js/${o} ${i.getUserAgent()}`;const l={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":a},mediaType:{format:"",previews:[]}};const c=withDefaults(null,l);t.endpoint=c},8467:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var n=s(6234);var i=s(5030);const r="4.8.0";function _buildMessageForResponseErrors(e){return`Request failed due to following response errors:\n`+e.errors.map((e=>` - ${e.message}`)).join("\n")}class GraphqlResponseError extends Error{constructor(e,t,s){super(_buildMessageForResponseErrors(s));this.request=e;this.headers=t;this.response=s;this.name="GraphqlResponseError";this.errors=s.errors;this.data=s.data;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}}const o=["method","baseUrl","url","headers","request","query","mediaType"];const a=["query","method","url"];const l=/\/api\/v3\/?$/;function graphql(e,t,s){if(s){if(typeof t==="string"&&"query"in s){return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`))}for(const e in s){if(!a.includes(e))continue;return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}}const n=typeof t==="string"?Object.assign({query:t},s):t;const i=Object.keys(n).reduce(((e,t)=>{if(o.includes(t)){e[t]=n[t];return e}if(!e.variables){e.variables={}}e.variables[t]=n[t];return e}),{});const r=n.baseUrl||e.endpoint.DEFAULTS.baseUrl;if(l.test(r)){i.url=r.replace(l,"/api/graphql")}return e(i).then((e=>{if(e.data.errors){const t={};for(const s of Object.keys(e.headers)){t[s]=e.headers[s]}throw new GraphqlResponseError(i,t,e.data)}return e.data.data}))}function withDefaults(e,t){const s=e.defaults(t);const newApi=(e,t)=>graphql(s,e,t);return Object.assign(newApi,{defaults:withDefaults.bind(null,s),endpoint:n.request.endpoint})}const c=withDefaults(n.request,{headers:{"user-agent":`octokit-graphql.js/${r} ${i.getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}t.GraphqlResponseError=GraphqlResponseError;t.graphql=c;t.withCustomRequest=withCustomRequest},4193:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const s="2.16.0";function ownKeys(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t){n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))}s.push.apply(s,n)}return s}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var s=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(s),true).forEach((function(t){_defineProperty(e,t,s[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(s))}else{ownKeys(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}}return e}function _defineProperty(e,t,s){if(t in e){Object.defineProperty(e,t,{value:s,enumerable:true,configurable:true,writable:true})}else{e[t]=s}return e}function normalizePaginatedListResponse(e){if(!e.data){return _objectSpread2(_objectSpread2({},e),{},{data:[]})}const t="total_count"in e.data&&!("url"in e.data);if(!t)return e;const s=e.data.incomplete_results;const n=e.data.repository_selection;const i=e.data.total_count;delete e.data.incomplete_results;delete e.data.repository_selection;delete e.data.total_count;const r=Object.keys(e.data)[0];const o=e.data[r];e.data=o;if(typeof s!=="undefined"){e.data.incomplete_results=s}if(typeof n!=="undefined"){e.data.repository_selection=n}e.data.total_count=i;return e}function iterator(e,t,s){const n=typeof t==="function"?t.endpoint(s):e.request.endpoint(t,s);const i=typeof t==="function"?t:e.request;const r=n.method;const o=n.headers;let a=n.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:true};try{const e=await i({method:r,url:a,headers:o});const t=normalizePaginatedListResponse(e);a=((t.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1];return{value:t}}catch(e){if(e.status!==409)throw e;a="";return{value:{status:200,headers:{},data:[]}}}}})}}function paginate(e,t,s,n){if(typeof s==="function"){n=s;s=undefined}return gather(e,[],iterator(e,t,s)[Symbol.asyncIterator](),n)}function gather(e,t,s,n){return s.next().then((i=>{if(i.done){return t}let r=false;function done(){r=true}t=t.concat(n?n(i.value,done):i.value.data);if(r){return t}return gather(e,t,s,n)}))}const n=Object.assign(paginate,{iterator:iterator});const i=["GET /app/hook/deliveries","GET /app/installations","GET /applications/grants","GET /authorizations","GET /enterprises/{enterprise}/actions/permissions/organizations","GET /enterprises/{enterprise}/actions/runner-groups","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners","GET /enterprises/{enterprise}/actions/runners","GET /enterprises/{enterprise}/actions/runners/downloads","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/runner-groups","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/runners/downloads","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/blocks","GET /orgs/{org}/credential-authorizations","GET /orgs/{org}/events","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/packages","GET /orgs/{org}/projects","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/secret-scanning/alerts","GET /orgs/{org}/team-sync/groups","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/team-sync/group-mappings","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runners/downloads","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/autolinks","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/git/matching-refs/{ref}","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repositories","GET /repositories/{repository_id}/environments/{environment_name}/secrets","GET /scim/v2/enterprises/{enterprise}/Groups","GET /scim/v2/enterprises/{enterprise}/Users","GET /scim/v2/organizations/{org}/Users","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/team-sync/group-mappings","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/packages","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /user/{username}/packages","GET /users","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/starred","GET /users/{username}/subscriptions"];function isPaginatingEndpoint(e){if(typeof e==="string"){return i.includes(e)}else{return false}}function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=s;t.composePaginateRest=n;t.isPaginatingEndpoint=isPaginatingEndpoint;t.paginateRest=paginateRest;t.paginatingEndpoints=i},3044:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function ownKeys(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t){n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))}s.push.apply(s,n)}return s}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var s=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(s),true).forEach((function(t){_defineProperty(e,t,s[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(s))}else{ownKeys(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}}return e}function _defineProperty(e,t,s){if(t in e){Object.defineProperty(e,t,{value:s,enumerable:true,configurable:true,writable:true})}else{e[t]=s}return e}const s={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createContentAttachmentForRepo:["POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /user/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.rest.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const n="5.9.0";function endpointsToMethods(e,t){const s={};for(const[n,i]of Object.entries(t)){for(const[t,r]of Object.entries(i)){const[i,o,a]=r;const[l,c]=i.split(/ /);const u=Object.assign({method:l,url:c},o);if(!s[n]){s[n]={}}const d=s[n];if(a){d[t]=decorate(e,n,t,u,a);continue}d[t]=e.request.defaults(u)}}return s}function decorate(e,t,s,n,i){const r=e.request.defaults(n);function withDecorations(...n){let o=r.endpoint.merge(...n);if(i.mapToData){o=Object.assign({},o,{data:o[i.mapToData],[i.mapToData]:undefined});return r(o)}if(i.renamed){const[n,r]=i.renamed;e.log.warn(`octokit.${t}.${s}() has been renamed to octokit.${n}.${r}()`)}if(i.deprecated){e.log.warn(i.deprecated)}if(i.renamedParameters){const o=r.endpoint.merge(...n);for(const[n,r]of Object.entries(i.renamedParameters)){if(n in o){e.log.warn(`"${n}" parameter is deprecated for "octokit.${t}.${s}()". Use "${r}" instead`);if(!(r in o)){o[r]=o[n]}delete o[n]}}return r(o)}return r(...n)}return Object.assign(withDecorations,r)}function restEndpointMethods(e){const t=endpointsToMethods(e,s);return{rest:t}}restEndpointMethods.VERSION=n;function legacyRestEndpointMethods(e){const t=endpointsToMethods(e,s);return _objectSpread2(_objectSpread2({},t),{},{rest:t})}legacyRestEndpointMethods.VERSION=n;t.legacyRestEndpointMethods=legacyRestEndpointMethods;t.restEndpointMethods=restEndpointMethods},537:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var n=s(8932);var i=_interopDefault(s(1223));const r=i((e=>console.warn(e)));const o=i((e=>console.warn(e)));class RequestError extends Error{constructor(e,t,s){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=t;let i;if("headers"in s&&typeof s.headers!=="undefined"){i=s.headers}if("response"in s){this.response=s.response;i=s.response.headers}const a=Object.assign({},s.request);if(s.request.headers.authorization){a.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})}a.url=a.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=a;Object.defineProperty(this,"code",{get(){r(new n.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return t}});Object.defineProperty(this,"headers",{get(){o(new n.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));return i||{}}})}}t.RequestError=RequestError},6234:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var n=s(9440);var i=s(5030);var r=s(3287);var o=_interopDefault(s(1768));var a=s(537);const l="5.6.1";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){const t=e.request&&e.request.log?e.request.log:console;if(r.isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let s={};let n;let i;const l=e.request&&e.request.fetch||o;return l(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((async r=>{i=r.url;n=r.status;for(const e of r.headers){s[e[0]]=e[1]}if("deprecation"in s){const n=s.link&&s.link.match(/<([^>]+)>; rel="deprecation"/);const i=n&&n.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${i?`. See ${i}`:""}`)}if(n===204||n===205){return}if(e.method==="HEAD"){if(n<400){return}throw new a.RequestError(r.statusText,n,{response:{url:i,status:n,headers:s,data:undefined},request:e})}if(n===304){throw new a.RequestError("Not modified",n,{response:{url:i,status:n,headers:s,data:await getResponseData(r)},request:e})}if(n>=400){const t=await getResponseData(r);const o=new a.RequestError(toErrorMessage(t),n,{response:{url:i,status:n,headers:s,data:t},request:e});throw o}return getResponseData(r)})).then((e=>({status:n,url:i,headers:s,data:e}))).catch((t=>{if(t instanceof a.RequestError)throw t;throw new a.RequestError(t.message,500,{request:e})}))}async function getResponseData(e){const t=e.headers.get("content-type");if(/application\/json/.test(t)){return e.json()}if(!t||/^text\/|charset=utf-8$/.test(t)){return e.text()}return getBufferResponse(e)}function toErrorMessage(e){if(typeof e==="string")return e;if("message"in e){if(Array.isArray(e.errors)){return`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`}return e.message}return`Unknown error: ${JSON.stringify(e)}`}function withDefaults(e,t){const s=e.defaults(t);const newApi=function(e,t){const n=s.merge(e,t);if(!n.request||!n.request.hook){return fetchWrapper(s.parse(n))}const request=(e,t)=>fetchWrapper(s.parse(s.merge(e,t)));Object.assign(request,{endpoint:s,defaults:withDefaults.bind(null,s)});return n.request.hook(request,n)};return Object.assign(newApi,{endpoint:s,defaults:withDefaults.bind(null,s)})}const c=withDefaults(n.endpoint,{headers:{"user-agent":`octokit-request.js/${l} ${i.getUserAgent()}`}});t.request=c},1768:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var n=_interopDefault(s(2413));var i=_interopDefault(s(8605));var r=_interopDefault(s(8835));var o=_interopDefault(s(7211));var a=_interopDefault(s(8761));const l=n.Readable;const c=Symbol("buffer");const u=Symbol("type");class Blob{constructor(){this[u]="";const e=arguments[0];const t=arguments[1];const s=[];let n=0;if(e){const t=e;const i=Number(t.length);for(let e=0;e<i;e++){const i=t[e];let r;if(i instanceof Buffer){r=i}else if(ArrayBuffer.isView(i)){r=Buffer.from(i.buffer,i.byteOffset,i.byteLength)}else if(i instanceof ArrayBuffer){r=Buffer.from(i)}else if(i instanceof Blob){r=i[c]}else{r=Buffer.from(typeof i==="string"?i:String(i))}n+=r.length;s.push(r)}}this[c]=Buffer.concat(s);let i=t&&t.type!==undefined&&String(t.type).toLowerCase();if(i&&!/[^\u0020-\u007E]/.test(i)){this[u]=i}}get size(){return this[c].length}get type(){return this[u]}text(){return Promise.resolve(this[c].toString())}arrayBuffer(){const e=this[c];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new l;e._read=function(){};e.push(this[c]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const s=arguments[1];let n,i;if(t===undefined){n=0}else if(t<0){n=Math.max(e+t,0)}else{n=Math.min(t,e)}if(s===undefined){i=e}else if(s<0){i=Math.max(e+s,0)}else{i=Math.min(s,e)}const r=Math.max(i-n,0);const o=this[c];const a=o.slice(n,n+r);const l=new Blob([],{type:arguments[2]});l[c]=a;return l}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,s){Error.call(this,e);this.message=e;this.type=t;if(s){this.code=this.errno=s.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let d;try{d=s(2877).convert}catch(e){}const p=Symbol("Body internals");const _=n.PassThrough;function Body(e){var t=this;var s=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},i=s.size;let r=i===undefined?0:i;var o=s.timeout;let a=o===undefined?0:o;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof n);else{e=Buffer.from(String(e))}this[p]={body:e,disturbed:false,error:null};this.size=r;this.timeout=a;if(e instanceof n){e.on("error",(function(e){const s=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[p].error=s}))}}Body.prototype={get body(){return this[p].body},get bodyUsed(){return this[p].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[c]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const s=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,s)}}};function consumeBody(){var e=this;if(this[p].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[p].disturbed=true;if(this[p].error){return Body.Promise.reject(this[p].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof n)){return Body.Promise.resolve(Buffer.alloc(0))}let s=[];let i=0;let r=false;return new Body.Promise((function(n,o){let a;if(e.timeout){a=setTimeout((function(){r=true;o(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){r=true;o(t)}else{o(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(r||t===null){return}if(e.size&&i+t.length>e.size){r=true;o(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}i+=t.length;s.push(t)}));t.on("end",(function(){if(r){return}clearTimeout(a);try{n(Buffer.concat(s,i))}catch(t){o(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof d!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const s=t.get("content-type");let n="utf-8";let i,r;if(s){i=/charset=([^;]*)/i.exec(s)}r=e.slice(0,1024).toString();if(!i&&r){i=/<meta.+?charset=(['"])(.+?)\1/i.exec(r)}if(!i&&r){i=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r);if(!i){i=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(r);if(i){i.pop()}}if(i){i=/charset=(.*)/i.exec(i.pop())}}if(!i&&r){i=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r)}if(i){n=i.pop();if(n==="gb2312"||n==="gbk"){n="gb18030"}}return d(e,"UTF-8",n).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,s;let i=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(i instanceof n&&typeof i.getBoundary!=="function"){t=new _;s=new _;i.pipe(t);i.pipe(s);e[p].body=t;i=s}return i}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof n){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const s=t.body;if(s===null){e.end()}else if(isBlob(s)){s.stream().pipe(e)}else if(Buffer.isBuffer(s)){e.write(s);e.end()}else{s.pipe(e)}}Body.Promise=global.Promise;const m=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const b=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(m.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(b.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const s in e){if(s.toLowerCase()===t){return s}}return undefined}const g=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[g]=Object.create(null);if(e instanceof Headers){const t=e.raw();const s=Object.keys(t);for(const e of s){for(const s of t[e]){this.append(e,s)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const s=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}s.push(Array.from(t))}for(const e of s){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const s=e[t];this.append(t,s)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[g],e);if(t===undefined){return null}return this[g][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let s=getHeaders(this);let n=0;while(n<s.length){var i=s[n];const r=i[0],o=i[1];e.call(t,o,r,this);s=getHeaders(this);n++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const s=find(this[g],e);this[g][s!==undefined?s:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const s=find(this[g],e);if(s!==undefined){this[g][s].push(t)}else{this[g][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[g],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[g],e);if(t!==undefined){delete this[g][t]}}raw(){return this[g]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const s=Object.keys(e[g]).sort();return s.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[g][t].join(", ")}:function(t){return[t.toLowerCase(),e[g][t].join(", ")]})}const h=Symbol("internal");function createHeadersIterator(e,t){const s=Object.create(y);s[h]={target:e,kind:t,index:0};return s}const y=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==y){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[h];const t=e.target,s=e.kind,n=e.index;const i=getHeaders(t,s);const r=i.length;if(n>=r){return{value:undefined,done:true}}this[h].index=n+1;return{value:i[n],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(y,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[g]);const s=find(e[g],"Host");if(s!==undefined){t[s]=t[s][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const s of Object.keys(e)){if(m.test(s)){continue}if(Array.isArray(e[s])){for(const n of e[s]){if(b.test(n)){continue}if(t[g][s]===undefined){t[g][s]=[n]}else{t[g][s].push(n)}}}else if(!b.test(e[s])){t[g][s]=[e[s]]}}return t}const w=Symbol("Response internals");const x=i.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const s=t.status||200;const n=new Headers(t.headers);if(e!=null&&!n.has("Content-Type")){const t=extractContentType(e);if(t){n.append("Content-Type",t)}}this[w]={url:t.url,status:s,statusText:t.statusText||x[s],headers:n,counter:t.counter}}get url(){return this[w].url||""}get status(){return this[w].status}get ok(){return this[w].status>=200&&this[w].status<300}get redirected(){return this[w].counter>0}get statusText(){return this[w].statusText}get headers(){return this[w].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const k=Symbol("Request internals");const E=r.parse;const C=r.format;const v="destroy"in n.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[k]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let s;if(!isRequest(e)){if(e&&e.href){s=E(e.href)}else{s=E(`${e}`)}e={}}else{s=E(e.url)}let n=t.method||e.method||"GET";n=n.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(n==="GET"||n==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let i=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,i,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const r=new Headers(t.headers||e.headers||{});if(i!=null&&!r.has("Content-Type")){const e=extractContentType(i);if(e){r.append("Content-Type",e)}}let o=isRequest(e)?e.signal:null;if("signal"in t)o=t.signal;if(o!=null&&!isAbortSignal(o)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[k]={method:n,redirect:t.redirect||e.redirect||"follow",headers:r,parsedURL:s,signal:o};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[k].method}get url(){return C(this[k].parsedURL)}get headers(){return this[k].headers}get redirect(){return this[k].redirect}get signal(){return this[k].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[k].parsedURL;const s=new Headers(e[k].headers);if(!s.has("Accept")){s.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof n.Readable&&!v){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let i=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){i="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){i=String(t)}}if(i){s.set("Content-Length",i)}if(!s.has("User-Agent")){s.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!s.has("Accept-Encoding")){s.set("Accept-Encoding","gzip,deflate")}let r=e.agent;if(typeof r==="function"){r=r(t)}if(!s.has("Connection")&&!r){s.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(s),agent:r})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const D=n.PassThrough;const S=r.resolve;function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(s,r){const l=new Request(e,t);const c=getNodeRequestOptions(l);const u=(c.protocol==="https:"?o:i).request;const d=l.signal;let p=null;const _=function abort(){let e=new AbortError("The user aborted a request.");r(e);if(l.body&&l.body instanceof n.Readable){l.body.destroy(e)}if(!p||!p.body)return;p.body.emit("error",e)};if(d&&d.aborted){_();return}const m=function abortAndFinalize(){_();finalize()};const b=u(c);let g;if(d){d.addEventListener("abort",m)}function finalize(){b.abort();if(d)d.removeEventListener("abort",m);clearTimeout(g)}if(l.timeout){b.once("socket",(function(e){g=setTimeout((function(){r(new FetchError(`network timeout at: ${l.url}`,"request-timeout"));finalize()}),l.timeout)}))}b.on("error",(function(e){r(new FetchError(`request to ${l.url} failed, reason: ${e.message}`,"system",e));finalize()}));b.on("response",(function(e){clearTimeout(g);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const n=t.get("Location");const i=n===null?null:S(l.url,n);switch(l.redirect){case"error":r(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${l.url}`,"no-redirect"));finalize();return;case"manual":if(i!==null){try{t.set("Location",i)}catch(e){r(e)}}break;case"follow":if(i===null){break}if(l.counter>=l.follow){r(new FetchError(`maximum redirect reached at: ${l.url}`,"max-redirect"));finalize();return}const n={headers:new Headers(l.headers),follow:l.follow,counter:l.counter+1,agent:l.agent,compress:l.compress,method:l.method,body:l.body,signal:l.signal,timeout:l.timeout,size:l.size};if(e.statusCode!==303&&l.body&&getTotalBytes(l)===null){r(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&l.method==="POST"){n.method="GET";n.body=undefined;n.headers.delete("content-length")}s(fetch(new Request(i,n)));finalize();return}}e.once("end",(function(){if(d)d.removeEventListener("abort",m)}));let n=e.pipe(new D);const i={url:l.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:l.size,timeout:l.timeout,counter:l.counter};const o=t.get("Content-Encoding");if(!l.compress||l.method==="HEAD"||o===null||e.statusCode===204||e.statusCode===304){p=new Response(n,i);s(p);return}const c={flush:a.Z_SYNC_FLUSH,finishFlush:a.Z_SYNC_FLUSH};if(o=="gzip"||o=="x-gzip"){n=n.pipe(a.createGunzip(c));p=new Response(n,i);s(p);return}if(o=="deflate"||o=="x-deflate"){const t=e.pipe(new D);t.once("data",(function(e){if((e[0]&15)===8){n=n.pipe(a.createInflate())}else{n=n.pipe(a.createInflateRaw())}p=new Response(n,i);s(p)}));return}if(o=="br"&&typeof a.createBrotliDecompress==="function"){n=n.pipe(a.createBrotliDecompress());p=new Response(n,i);s(p);return}p=new Response(n,i);s(p)}));writeToStream(b,l)}))}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t.default=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},9690:function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};const i=s(8614);const r=n(s(8237));const o=n(s(6570));const a=r.default("agent-base");function isAgent(e){return Boolean(e)&&typeof e.addRequest==="function"}function isSecureEndpoint(){const{stack:e}=new Error;if(typeof e!=="string")return false;return e.split("\n").some((e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1))}function createAgent(e,t){return new createAgent.Agent(e,t)}(function(e){class Agent extends i.EventEmitter{constructor(e,t){super();let s=t;if(typeof e==="function"){this.callback=e}else if(e){s=e}this.timeout=null;if(s&&typeof s.timeout==="number"){this.timeout=s.timeout}this.maxFreeSockets=1;this.maxSockets=1;this.maxTotalSockets=Infinity;this.sockets={};this.freeSockets={};this.requests={};this.options={}}get defaultPort(){if(typeof this.explicitDefaultPort==="number"){return this.explicitDefaultPort}return isSecureEndpoint()?443:80}set defaultPort(e){this.explicitDefaultPort=e}get protocol(){if(typeof this.explicitProtocol==="string"){return this.explicitProtocol}return isSecureEndpoint()?"https:":"http:"}set protocol(e){this.explicitProtocol=e}callback(e,t,s){throw new Error('"agent-base" has no default implementation, you must subclass and override `callback()`')}addRequest(e,t){const s=Object.assign({},t);if(typeof s.secureEndpoint!=="boolean"){s.secureEndpoint=isSecureEndpoint()}if(s.host==null){s.host="localhost"}if(s.port==null){s.port=s.secureEndpoint?443:80}if(s.protocol==null){s.protocol=s.secureEndpoint?"https:":"http:"}if(s.host&&s.path){delete s.path}delete s.agent;delete s.hostname;delete s._defaultAgent;delete s.defaultPort;delete s.createConnection;e._last=true;e.shouldKeepAlive=false;let n=false;let i=null;const r=s.timeout||this.timeout;const onerror=t=>{if(e._hadError)return;e.emit("error",t);e._hadError=true};const ontimeout=()=>{i=null;n=true;const e=new Error(`A "socket" was not created for HTTP request before ${r}ms`);e.code="ETIMEOUT";onerror(e)};const callbackError=e=>{if(n)return;if(i!==null){clearTimeout(i);i=null}onerror(e)};const onsocket=t=>{if(n)return;if(i!=null){clearTimeout(i);i=null}if(isAgent(t)){a("Callback returned another Agent instance %o",t.constructor.name);t.addRequest(e,s);return}if(t){t.once("free",(()=>{this.freeSocket(t,s)}));e.onSocket(t);return}const r=new Error(`no Duplex stream was returned to agent-base for \`${e.method} ${e.path}\``);onerror(r)};if(typeof this.callback!=="function"){onerror(new Error("`callback` is not defined"));return}if(!this.promisifiedCallback){if(this.callback.length>=3){a("Converting legacy callback function to promise");this.promisifiedCallback=o.default(this.callback)}else{this.promisifiedCallback=this.callback}}if(typeof r==="number"&&r>0){i=setTimeout(ontimeout,r)}if("port"in s&&typeof s.port!=="number"){s.port=Number(s.port)}try{a("Resolving socket for %o request: %o",s.protocol,`${e.method} ${e.path}`);Promise.resolve(this.promisifiedCallback(e,s)).then(onsocket,callbackError)}catch(e){Promise.reject(e).catch(callbackError)}}freeSocket(e,t){a("Freeing socket %o %o",e.constructor.name,t);e.destroy()}destroy(){a("Destroying agent %o",this.constructor.name)}}e.Agent=Agent;e.prototype=e.Agent.prototype})(createAgent||(createAgent={}));e.exports=createAgent},6570:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function promisify(e){return function(t,s){return new Promise(((n,i)=>{e.call(this,t,s,((e,t)=>{if(e){i(e)}else{n(t)}}))}))}}t.default=promisify},9417:e=>{"use strict";e.exports=balanced;function balanced(e,t,s){if(e instanceof RegExp)e=maybeMatch(e,s);if(t instanceof RegExp)t=maybeMatch(t,s);var n=range(e,t,s);return n&&{start:n[0],end:n[1],pre:s.slice(0,n[0]),body:s.slice(n[0]+e.length,n[1]),post:s.slice(n[1]+t.length)}}function maybeMatch(e,t){var s=t.match(e);return s?s[0]:null}balanced.range=range;function range(e,t,s){var n,i,r,o,a;var l=s.indexOf(e);var c=s.indexOf(t,l+1);var u=l;if(l>=0&&c>0){if(e===t){return[l,c]}n=[];r=s.length;while(u>=0&&!a){if(u==l){n.push(u);l=s.indexOf(e,u+1)}else if(n.length==1){a=[n.pop(),c]}else{i=n.pop();if(i<r){r=i;o=c}c=s.indexOf(t,u+1)}u=l<c&&l>=0?l:c}if(n.length){a=[r,o]}}return a}},3682:(e,t,s)=>{var n=s(4670);var i=s(5549);var r=s(6819);var o=Function.bind;var a=o.bind(o);function bindApi(e,t,s){var n=a(r,null).apply(null,s?[t,s]:[t]);e.api={remove:n};e.remove=n;["before","error","after","wrap"].forEach((function(n){var r=s?[t,n,s]:[t,n];e[n]=e.api[n]=a(i,null).apply(null,r)}))}function HookSingular(){var e="h";var t={registry:{}};var s=n.bind(null,t,e);bindApi(s,t,e);return s}function HookCollection(){var e={registry:{}};var t=n.bind(null,e);bindApi(t,e);return t}var l=false;function Hook(){if(!l){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');l=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},5549:e=>{e.exports=addHook;function addHook(e,t,s,n){var i=n;if(!e.registry[s]){e.registry[s]=[]}if(t==="before"){n=function(e,t){return Promise.resolve().then(i.bind(null,t)).then(e.bind(null,t))}}if(t==="after"){n=function(e,t){var s;return Promise.resolve().then(e.bind(null,t)).then((function(e){s=e;return i(s,t)})).then((function(){return s}))}}if(t==="error"){n=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return i(e,t)}))}}e.registry[s].push({hook:n,orig:i})}},4670:e=>{e.exports=register;function register(e,t,s,n){if(typeof s!=="function"){throw new Error("method for before hook must be a function")}if(!n){n={}}if(Array.isArray(t)){return t.reverse().reduce((function(t,s){return register.bind(null,e,s,t,n)}),s)()}return Promise.resolve().then((function(){if(!e.registry[t]){return s(n)}return e.registry[t].reduce((function(e,t){return t.hook.bind(null,e,n)}),s)()}))}},6819:e=>{e.exports=removeHook;function removeHook(e,t,s){if(!e.registry[t]){return}var n=e.registry[t].map((function(e){return e.orig})).indexOf(s);if(n===-1){return}e.registry[t].splice(n,1)}},3717:(e,t,s)=>{var n=s(6891);var i=s(9417);e.exports=expandTop;var r="\0SLASH"+Math.random()+"\0";var o="\0OPEN"+Math.random()+"\0";var a="\0CLOSE"+Math.random()+"\0";var l="\0COMMA"+Math.random()+"\0";var c="\0PERIOD"+Math.random()+"\0";function numeric(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function escapeBraces(e){return e.split("\\\\").join(r).split("\\{").join(o).split("\\}").join(a).split("\\,").join(l).split("\\.").join(c)}function unescapeBraces(e){return e.split(r).join("\\").split(o).join("{").split(a).join("}").split(l).join(",").split(c).join(".")}function parseCommaParts(e){if(!e)return[""];var t=[];var s=i("{","}",e);if(!s)return e.split(",");var n=s.pre;var r=s.body;var o=s.post;var a=n.split(",");a[a.length-1]+="{"+r+"}";var l=parseCommaParts(o);if(o.length){a[a.length-1]+=l.shift();a.push.apply(a,l)}t.push.apply(t,a);return t}function expandTop(e){if(!e)return[];if(e.substr(0,2)==="{}"){e="\\{\\}"+e.substr(2)}return expand(escapeBraces(e),true).map(unescapeBraces)}function identity(e){return e}function embrace(e){return"{"+e+"}"}function isPadded(e){return/^-?0\d/.test(e)}function lte(e,t){return e<=t}function gte(e,t){return e>=t}function expand(e,t){var s=[];var r=i("{","}",e);if(!r||/\$$/.test(r.pre))return[e];var o=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(r.body);var l=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(r.body);var c=o||l;var u=r.body.indexOf(",")>=0;if(!c&&!u){if(r.post.match(/,.*\}/)){e=r.pre+"{"+r.body+a+r.post;return expand(e)}return[e]}var d;if(c){d=r.body.split(/\.\./)}else{d=parseCommaParts(r.body);if(d.length===1){d=expand(d[0],false).map(embrace);if(d.length===1){var p=r.post.length?expand(r.post,false):[""];return p.map((function(e){return r.pre+d[0]+e}))}}}var _=r.pre;var p=r.post.length?expand(r.post,false):[""];var m;if(c){var b=numeric(d[0]);var g=numeric(d[1]);var h=Math.max(d[0].length,d[1].length);var y=d.length==3?Math.abs(numeric(d[2])):1;var w=lte;var x=g<b;if(x){y*=-1;w=gte}var k=d.some(isPadded);m=[];for(var E=b;w(E,g);E+=y){var C;if(l){C=String.fromCharCode(E);if(C==="\\")C=""}else{C=String(E);if(k){var v=h-C.length;if(v>0){var D=new Array(v+1).join("0");if(E<0)C="-"+D+C.slice(1);else C=D+C}}}m.push(C)}}else{m=n(d,(function(e){return expand(e,false)}))}for(var S=0;S<m.length;S++){for(var T=0;T<p.length;T++){var A=_+m[S]+p[T];if(!t||c||A)s.push(A)}}return s}},6891:e=>{e.exports=function(e,s){var n=[];for(var i=0;i<e.length;i++){var r=s(e[i],i);if(t(r))n.push.apply(n,r);else n.push(r)}return n};var t=Array.isArray||function(e){return Object.prototype.toString.call(e)==="[object Array]"}},2371:e=>{"use strict";function dataUriToBuffer(e){if(!/^data:/i.test(e)){throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")')}e=e.replace(/\r?\n/g,"");const t=e.indexOf(",");if(t===-1||t<=4){throw new TypeError("malformed data: URI")}const s=e.substring(5,t).split(";");let n="";let i=false;const r=s[0]||"text/plain";let o=r;for(let e=1;e<s.length;e++){if(s[e]==="base64"){i=true}else{o+=`;${s[e]}`;if(s[e].indexOf("charset=")===0){n=s[e].substring(8)}}}if(!s[0]&&!n.length){o+=";charset=US-ASCII";n="US-ASCII"}const a=i?"base64":"ascii";const l=unescape(e.substring(t+1));const c=Buffer.from(l,a);c.type=r;c.typeFull=o;c.charset=n;return c}e.exports=dataUriToBuffer},8222:(e,t,s)=>{t.formatArgs=formatArgs;t.save=save;t.load=load;t.useColors=useColors;t.storage=localstorage();t.destroy=(()=>{let e=false;return()=>{if(!e){e=true;console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}}})();t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function useColors(){if(typeof window!=="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)){return true}if(typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)){return false}return typeof document!=="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!=="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function formatArgs(t){t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff);if(!this.useColors){return}const s="color: "+this.color;t.splice(1,0,s,"color: inherit");let n=0;let i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{if(e==="%%"){return}n++;if(e==="%c"){i=n}}));t.splice(i,0,s)}t.log=console.debug||console.log||(()=>{});function save(e){try{if(e){t.storage.setItem("debug",e)}else{t.storage.removeItem("debug")}}catch(e){}}function load(){let e;try{e=t.storage.getItem("debug")}catch(e){}if(!e&&typeof process!=="undefined"&&"env"in process){e=process.env.DEBUG}return e}function localstorage(){try{return localStorage}catch(e){}}e.exports=s(6243)(t);const{formatters:n}=e.exports;n.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},6243:(e,t,s)=>{function setup(e){createDebug.debug=createDebug;createDebug.default=createDebug;createDebug.coerce=coerce;createDebug.disable=disable;createDebug.enable=enable;createDebug.enabled=enabled;createDebug.humanize=s(900);createDebug.destroy=destroy;Object.keys(e).forEach((t=>{createDebug[t]=e[t]}));createDebug.names=[];createDebug.skips=[];createDebug.formatters={};function selectColor(e){let t=0;for(let s=0;s<e.length;s++){t=(t<<5)-t+e.charCodeAt(s);t|=0}return createDebug.colors[Math.abs(t)%createDebug.colors.length]}createDebug.selectColor=selectColor;function createDebug(e){let t;let s=null;let n;let i;function debug(...e){if(!debug.enabled){return}const s=debug;const n=Number(new Date);const i=n-(t||n);s.diff=i;s.prev=t;s.curr=n;t=n;e[0]=createDebug.coerce(e[0]);if(typeof e[0]!=="string"){e.unshift("%O")}let r=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((t,n)=>{if(t==="%%"){return"%"}r++;const i=createDebug.formatters[n];if(typeof i==="function"){const n=e[r];t=i.call(s,n);e.splice(r,1);r--}return t}));createDebug.formatArgs.call(s,e);const o=s.log||createDebug.log;o.apply(s,e)}debug.namespace=e;debug.useColors=createDebug.useColors();debug.color=createDebug.selectColor(e);debug.extend=extend;debug.destroy=createDebug.destroy;Object.defineProperty(debug,"enabled",{enumerable:true,configurable:false,get:()=>{if(s!==null){return s}if(n!==createDebug.namespaces){n=createDebug.namespaces;i=createDebug.enabled(e)}return i},set:e=>{s=e}});if(typeof createDebug.init==="function"){createDebug.init(debug)}return debug}function extend(e,t){const s=createDebug(this.namespace+(typeof t==="undefined"?":":t)+e);s.log=this.log;return s}function enable(e){createDebug.save(e);createDebug.namespaces=e;createDebug.names=[];createDebug.skips=[];let t;const s=(typeof e==="string"?e:"").split(/[\s,]+/);const n=s.length;for(t=0;t<n;t++){if(!s[t]){continue}e=s[t].replace(/\*/g,".*?");if(e[0]==="-"){createDebug.skips.push(new RegExp("^"+e.substr(1)+"$"))}else{createDebug.names.push(new RegExp("^"+e+"$"))}}}function disable(){const e=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map((e=>"-"+e))].join(",");createDebug.enable("");return e}function enabled(e){if(e[e.length-1]==="*"){return true}let t;let s;for(t=0,s=createDebug.skips.length;t<s;t++){if(createDebug.skips[t].test(e)){return false}}for(t=0,s=createDebug.names.length;t<s;t++){if(createDebug.names[t].test(e)){return true}}return false}function toNamespace(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}function coerce(e){if(e instanceof Error){return e.stack||e.message}return e}function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}createDebug.enable(createDebug.load());return createDebug}e.exports=setup},8237:(e,t,s)=>{if(typeof process==="undefined"||process.type==="renderer"||process.browser===true||process.__nwjs){e.exports=s(8222)}else{e.exports=s(5332)}},5332:(e,t,s)=>{const n=s(3867);const i=s(1669);t.init=init;t.log=log;t.formatArgs=formatArgs;t.save=save;t.load=load;t.useColors=useColors;t.destroy=i.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");t.colors=[6,2,3,4,5,1];try{const e=s(9318);if(e&&(e.stderr||e).level>=2){t.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]}}catch(e){}t.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const s=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let n=process.env[t];if(/^(yes|on|true|enabled)$/i.test(n)){n=true}else if(/^(no|off|false|disabled)$/i.test(n)){n=false}else if(n==="null"){n=null}else{n=Number(n)}e[s]=n;return e}),{});function useColors(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):n.isatty(process.stderr.fd)}function formatArgs(t){const{namespace:s,useColors:n}=this;if(n){const n=this.color;const i="[3"+(n<8?n:"8;5;"+n);const r=`  ${i};1m${s} [0m`;t[0]=r+t[0].split("\n").join("\n"+r);t.push(i+"m+"+e.exports.humanize(this.diff)+"[0m")}else{t[0]=getDate()+s+" "+t[0]}}function getDate(){if(t.inspectOpts.hideDate){return""}return(new Date).toISOString()+" "}function log(...e){return process.stderr.write(i.format(...e)+"\n")}function save(e){if(e){process.env.DEBUG=e}else{delete process.env.DEBUG}}function load(){return process.env.DEBUG}function init(e){e.inspectOpts={};const s=Object.keys(t.inspectOpts);for(let n=0;n<s.length;n++){e.inspectOpts[s[n]]=t.inspectOpts[s[n]]}}e.exports=s(6243)(t);const{formatters:r}=e.exports;r.o=function(e){this.inspectOpts.colors=this.useColors;return i.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")};r.O=function(e){this.inspectOpts.colors=this.useColors;return i.inspect(e,this.inspectOpts)}},8932:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}t.Deprecation=Deprecation},6863:(e,t,s)=>{e.exports=realpath;realpath.realpath=realpath;realpath.sync=realpathSync;realpath.realpathSync=realpathSync;realpath.monkeypatch=monkeypatch;realpath.unmonkeypatch=unmonkeypatch;var n=s(5747);var i=n.realpath;var r=n.realpathSync;var o=process.version;var a=/^v[0-5]\./.test(o);var l=s(1734);function newError(e){return e&&e.syscall==="realpath"&&(e.code==="ELOOP"||e.code==="ENOMEM"||e.code==="ENAMETOOLONG")}function realpath(e,t,s){if(a){return i(e,t,s)}if(typeof t==="function"){s=t;t=null}i(e,t,(function(n,i){if(newError(n)){l.realpath(e,t,s)}else{s(n,i)}}))}function realpathSync(e,t){if(a){return r(e,t)}try{return r(e,t)}catch(s){if(newError(s)){return l.realpathSync(e,t)}else{throw s}}}function monkeypatch(){n.realpath=realpath;n.realpathSync=realpathSync}function unmonkeypatch(){n.realpath=i;n.realpathSync=r}},1734:(e,t,s)=>{var n=s(5622);var i=process.platform==="win32";var r=s(5747);var o=process.env.NODE_DEBUG&&/fs/.test(process.env.NODE_DEBUG);function rethrow(){var e;if(o){var t=new Error;e=debugCallback}else e=missingCallback;return e;function debugCallback(e){if(e){t.message=e.message;e=t;missingCallback(e)}}function missingCallback(e){if(e){if(process.throwDeprecation)throw e;else if(!process.noDeprecation){var t="fs: missing callback "+(e.stack||e.message);if(process.traceDeprecation)console.trace(t);else console.error(t)}}}}function maybeCallback(e){return typeof e==="function"?e:rethrow()}var a=n.normalize;if(i){var l=/(.*?)(?:[\/\\]+|$)/g}else{var l=/(.*?)(?:[\/]+|$)/g}if(i){var c=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/}else{var c=/^[\/]*/}t.realpathSync=function realpathSync(e,t){e=n.resolve(e);if(t&&Object.prototype.hasOwnProperty.call(t,e)){return t[e]}var s=e,o={},a={};var u;var d;var p;var _;start();function start(){var t=c.exec(e);u=t[0].length;d=t[0];p=t[0];_="";if(i&&!a[p]){r.lstatSync(p);a[p]=true}}while(u<e.length){l.lastIndex=u;var m=l.exec(e);_=d;d+=m[0];p=_+m[1];u=l.lastIndex;if(a[p]||t&&t[p]===p){continue}var b;if(t&&Object.prototype.hasOwnProperty.call(t,p)){b=t[p]}else{var g=r.lstatSync(p);if(!g.isSymbolicLink()){a[p]=true;if(t)t[p]=p;continue}var h=null;if(!i){var y=g.dev.toString(32)+":"+g.ino.toString(32);if(o.hasOwnProperty(y)){h=o[y]}}if(h===null){r.statSync(p);h=r.readlinkSync(p)}b=n.resolve(_,h);if(t)t[p]=b;if(!i)o[y]=h}e=n.resolve(b,e.slice(u));start()}if(t)t[s]=e;return e};t.realpath=function realpath(e,t,s){if(typeof s!=="function"){s=maybeCallback(t);t=null}e=n.resolve(e);if(t&&Object.prototype.hasOwnProperty.call(t,e)){return process.nextTick(s.bind(null,null,t[e]))}var o=e,a={},u={};var d;var p;var _;var m;start();function start(){var t=c.exec(e);d=t[0].length;p=t[0];_=t[0];m="";if(i&&!u[_]){r.lstat(_,(function(e){if(e)return s(e);u[_]=true;LOOP()}))}else{process.nextTick(LOOP)}}function LOOP(){if(d>=e.length){if(t)t[o]=e;return s(null,e)}l.lastIndex=d;var n=l.exec(e);m=p;p+=n[0];_=m+n[1];d=l.lastIndex;if(u[_]||t&&t[_]===_){return process.nextTick(LOOP)}if(t&&Object.prototype.hasOwnProperty.call(t,_)){return gotResolvedLink(t[_])}return r.lstat(_,gotStat)}function gotStat(e,n){if(e)return s(e);if(!n.isSymbolicLink()){u[_]=true;if(t)t[_]=_;return process.nextTick(LOOP)}if(!i){var o=n.dev.toString(32)+":"+n.ino.toString(32);if(a.hasOwnProperty(o)){return gotTarget(null,a[o],_)}}r.stat(_,(function(e){if(e)return s(e);r.readlink(_,(function(e,t){if(!i)a[o]=t;gotTarget(e,t)}))}))}function gotTarget(e,i,r){if(e)return s(e);var o=n.resolve(m,i);if(t)t[r]=o;gotResolvedLink(o)}function gotResolvedLink(t){e=n.resolve(t,e.slice(d));start()}}},7625:(e,t,s)=>{t.setopts=setopts;t.ownProp=ownProp;t.makeAbs=makeAbs;t.finish=finish;t.mark=mark;t.isIgnored=isIgnored;t.childrenIgnored=childrenIgnored;function ownProp(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var n=s(5622);var i=s(3973);var r=s(8714);var o=i.Minimatch;function alphasort(e,t){return e.localeCompare(t,"en")}function setupIgnores(e,t){e.ignore=t.ignore||[];if(!Array.isArray(e.ignore))e.ignore=[e.ignore];if(e.ignore.length){e.ignore=e.ignore.map(ignoreMap)}}function ignoreMap(e){var t=null;if(e.slice(-3)==="/**"){var s=e.replace(/(\/\*\*)+$/,"");t=new o(s,{dot:true})}return{matcher:new o(e,{dot:true}),gmatcher:t}}function setopts(e,t,s){if(!s)s={};if(s.matchBase&&-1===t.indexOf("/")){if(s.noglobstar){throw new Error("base matching requires globstar")}t="**/"+t}e.silent=!!s.silent;e.pattern=t;e.strict=s.strict!==false;e.realpath=!!s.realpath;e.realpathCache=s.realpathCache||Object.create(null);e.follow=!!s.follow;e.dot=!!s.dot;e.mark=!!s.mark;e.nodir=!!s.nodir;if(e.nodir)e.mark=true;e.sync=!!s.sync;e.nounique=!!s.nounique;e.nonull=!!s.nonull;e.nosort=!!s.nosort;e.nocase=!!s.nocase;e.stat=!!s.stat;e.noprocess=!!s.noprocess;e.absolute=!!s.absolute;e.maxLength=s.maxLength||Infinity;e.cache=s.cache||Object.create(null);e.statCache=s.statCache||Object.create(null);e.symlinks=s.symlinks||Object.create(null);setupIgnores(e,s);e.changedCwd=false;var i=process.cwd();if(!ownProp(s,"cwd"))e.cwd=i;else{e.cwd=n.resolve(s.cwd);e.changedCwd=e.cwd!==i}e.root=s.root||n.resolve(e.cwd,"/");e.root=n.resolve(e.root);if(process.platform==="win32")e.root=e.root.replace(/\\/g,"/");e.cwdAbs=r(e.cwd)?e.cwd:makeAbs(e,e.cwd);if(process.platform==="win32")e.cwdAbs=e.cwdAbs.replace(/\\/g,"/");e.nomount=!!s.nomount;s.nonegate=true;s.nocomment=true;e.minimatch=new o(t,s);e.options=e.minimatch.options}function finish(e){var t=e.nounique;var s=t?[]:Object.create(null);for(var n=0,i=e.matches.length;n<i;n++){var r=e.matches[n];if(!r||Object.keys(r).length===0){if(e.nonull){var o=e.minimatch.globSet[n];if(t)s.push(o);else s[o]=true}}else{var a=Object.keys(r);if(t)s.push.apply(s,a);else a.forEach((function(e){s[e]=true}))}}if(!t)s=Object.keys(s);if(!e.nosort)s=s.sort(alphasort);if(e.mark){for(var n=0;n<s.length;n++){s[n]=e._mark(s[n])}if(e.nodir){s=s.filter((function(t){var s=!/\/$/.test(t);var n=e.cache[t]||e.cache[makeAbs(e,t)];if(s&&n)s=n!=="DIR"&&!Array.isArray(n);return s}))}}if(e.ignore.length)s=s.filter((function(t){return!isIgnored(e,t)}));e.found=s}function mark(e,t){var s=makeAbs(e,t);var n=e.cache[s];var i=t;if(n){var r=n==="DIR"||Array.isArray(n);var o=t.slice(-1)==="/";if(r&&!o)i+="/";else if(!r&&o)i=i.slice(0,-1);if(i!==t){var a=makeAbs(e,i);e.statCache[a]=e.statCache[s];e.cache[a]=e.cache[s]}}return i}function makeAbs(e,t){var s=t;if(t.charAt(0)==="/"){s=n.join(e.root,t)}else if(r(t)||t===""){s=t}else if(e.changedCwd){s=n.resolve(e.cwd,t)}else{s=n.resolve(t)}if(process.platform==="win32")s=s.replace(/\\/g,"/");return s}function isIgnored(e,t){if(!e.ignore.length)return false;return e.ignore.some((function(e){return e.matcher.match(t)||!!(e.gmatcher&&e.gmatcher.match(t))}))}function childrenIgnored(e,t){if(!e.ignore.length)return false;return e.ignore.some((function(e){return!!(e.gmatcher&&e.gmatcher.match(t))}))}},1957:(e,t,s)=>{e.exports=glob;var n=s(5747);var i=s(6863);var r=s(3973);var o=r.Minimatch;var a=s(4124);var l=s(8614).EventEmitter;var c=s(5622);var u=s(2357);var d=s(8714);var p=s(9010);var _=s(7625);var m=_.setopts;var b=_.ownProp;var g=s(2492);var h=s(1669);var y=_.childrenIgnored;var w=_.isIgnored;var x=s(1223);function glob(e,t,s){if(typeof t==="function")s=t,t={};if(!t)t={};if(t.sync){if(s)throw new TypeError("callback provided to sync glob");return p(e,t)}return new Glob(e,t,s)}glob.sync=p;var k=glob.GlobSync=p.GlobSync;glob.glob=glob;function extend(e,t){if(t===null||typeof t!=="object"){return e}var s=Object.keys(t);var n=s.length;while(n--){e[s[n]]=t[s[n]]}return e}glob.hasMagic=function(e,t){var s=extend({},t);s.noprocess=true;var n=new Glob(e,s);var i=n.minimatch.set;if(!e)return false;if(i.length>1)return true;for(var r=0;r<i[0].length;r++){if(typeof i[0][r]!=="string")return true}return false};glob.Glob=Glob;a(Glob,l);function Glob(e,t,s){if(typeof t==="function"){s=t;t=null}if(t&&t.sync){if(s)throw new TypeError("callback provided to sync glob");return new k(e,t)}if(!(this instanceof Glob))return new Glob(e,t,s);m(this,e,t);this._didRealPath=false;var n=this.minimatch.set.length;this.matches=new Array(n);if(typeof s==="function"){s=x(s);this.on("error",s);this.on("end",(function(e){s(null,e)}))}var i=this;this._processing=0;this._emitQueue=[];this._processQueue=[];this.paused=false;if(this.noprocess)return this;if(n===0)return done();var r=true;for(var o=0;o<n;o++){this._process(this.minimatch.set[o],o,false,done)}r=false;function done(){--i._processing;if(i._processing<=0){if(r){process.nextTick((function(){i._finish()}))}else{i._finish()}}}}Glob.prototype._finish=function(){u(this instanceof Glob);if(this.aborted)return;if(this.realpath&&!this._didRealpath)return this._realpath();_.finish(this);this.emit("end",this.found)};Glob.prototype._realpath=function(){if(this._didRealpath)return;this._didRealpath=true;var e=this.matches.length;if(e===0)return this._finish();var t=this;for(var s=0;s<this.matches.length;s++)this._realpathSet(s,next);function next(){if(--e===0)t._finish()}};Glob.prototype._realpathSet=function(e,t){var s=this.matches[e];if(!s)return t();var n=Object.keys(s);var r=this;var o=n.length;if(o===0)return t();var a=this.matches[e]=Object.create(null);n.forEach((function(s,n){s=r._makeAbs(s);i.realpath(s,r.realpathCache,(function(n,i){if(!n)a[i]=true;else if(n.syscall==="stat")a[s]=true;else r.emit("error",n);if(--o===0){r.matches[e]=a;t()}}))}))};Glob.prototype._mark=function(e){return _.mark(this,e)};Glob.prototype._makeAbs=function(e){return _.makeAbs(this,e)};Glob.prototype.abort=function(){this.aborted=true;this.emit("abort")};Glob.prototype.pause=function(){if(!this.paused){this.paused=true;this.emit("pause")}};Glob.prototype.resume=function(){if(this.paused){this.emit("resume");this.paused=false;if(this._emitQueue.length){var e=this._emitQueue.slice(0);this._emitQueue.length=0;for(var t=0;t<e.length;t++){var s=e[t];this._emitMatch(s[0],s[1])}}if(this._processQueue.length){var n=this._processQueue.slice(0);this._processQueue.length=0;for(var t=0;t<n.length;t++){var i=n[t];this._processing--;this._process(i[0],i[1],i[2],i[3])}}}};Glob.prototype._process=function(e,t,s,n){u(this instanceof Glob);u(typeof n==="function");if(this.aborted)return;this._processing++;if(this.paused){this._processQueue.push([e,t,s,n]);return}var i=0;while(typeof e[i]==="string"){i++}var o;switch(i){case e.length:this._processSimple(e.join("/"),t,n);return;case 0:o=null;break;default:o=e.slice(0,i).join("/");break}var a=e.slice(i);var l;if(o===null)l=".";else if(d(o)||d(e.join("/"))){if(!o||!d(o))o="/"+o;l=o}else l=o;var c=this._makeAbs(l);if(y(this,l))return n();var p=a[0]===r.GLOBSTAR;if(p)this._processGlobStar(o,l,c,a,t,s,n);else this._processReaddir(o,l,c,a,t,s,n)};Glob.prototype._processReaddir=function(e,t,s,n,i,r,o){var a=this;this._readdir(s,r,(function(l,c){return a._processReaddir2(e,t,s,n,i,r,c,o)}))};Glob.prototype._processReaddir2=function(e,t,s,n,i,r,o,a){if(!o)return a();var l=n[0];var u=!!this.minimatch.negate;var d=l._glob;var p=this.dot||d.charAt(0)===".";var _=[];for(var m=0;m<o.length;m++){var b=o[m];if(b.charAt(0)!=="."||p){var g;if(u&&!e){g=!b.match(l)}else{g=b.match(l)}if(g)_.push(b)}}var h=_.length;if(h===0)return a();if(n.length===1&&!this.mark&&!this.stat){if(!this.matches[i])this.matches[i]=Object.create(null);for(var m=0;m<h;m++){var b=_[m];if(e){if(e!=="/")b=e+"/"+b;else b=e+b}if(b.charAt(0)==="/"&&!this.nomount){b=c.join(this.root,b)}this._emitMatch(i,b)}return a()}n.shift();for(var m=0;m<h;m++){var b=_[m];var y;if(e){if(e!=="/")b=e+"/"+b;else b=e+b}this._process([b].concat(n),i,r,a)}a()};Glob.prototype._emitMatch=function(e,t){if(this.aborted)return;if(w(this,t))return;if(this.paused){this._emitQueue.push([e,t]);return}var s=d(t)?t:this._makeAbs(t);if(this.mark)t=this._mark(t);if(this.absolute)t=s;if(this.matches[e][t])return;if(this.nodir){var n=this.cache[s];if(n==="DIR"||Array.isArray(n))return}this.matches[e][t]=true;var i=this.statCache[s];if(i)this.emit("stat",t,i);this.emit("match",t)};Glob.prototype._readdirInGlobStar=function(e,t){if(this.aborted)return;if(this.follow)return this._readdir(e,false,t);var s="lstat\0"+e;var i=this;var r=g(s,lstatcb_);if(r)n.lstat(e,r);function lstatcb_(s,n){if(s&&s.code==="ENOENT")return t();var r=n&&n.isSymbolicLink();i.symlinks[e]=r;if(!r&&n&&!n.isDirectory()){i.cache[e]="FILE";t()}else i._readdir(e,false,t)}};Glob.prototype._readdir=function(e,t,s){if(this.aborted)return;s=g("readdir\0"+e+"\0"+t,s);if(!s)return;if(t&&!b(this.symlinks,e))return this._readdirInGlobStar(e,s);if(b(this.cache,e)){var i=this.cache[e];if(!i||i==="FILE")return s();if(Array.isArray(i))return s(null,i)}var r=this;n.readdir(e,readdirCb(this,e,s))};function readdirCb(e,t,s){return function(n,i){if(n)e._readdirError(t,n,s);else e._readdirEntries(t,i,s)}}Glob.prototype._readdirEntries=function(e,t,s){if(this.aborted)return;if(!this.mark&&!this.stat){for(var n=0;n<t.length;n++){var i=t[n];if(e==="/")i=e+i;else i=e+"/"+i;this.cache[i]=true}}this.cache[e]=t;return s(null,t)};Glob.prototype._readdirError=function(e,t,s){if(this.aborted)return;switch(t.code){case"ENOTSUP":case"ENOTDIR":var n=this._makeAbs(e);this.cache[n]="FILE";if(n===this.cwdAbs){var i=new Error(t.code+" invalid cwd "+this.cwd);i.path=this.cwd;i.code=t.code;this.emit("error",i);this.abort()}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=false;break;default:this.cache[this._makeAbs(e)]=false;if(this.strict){this.emit("error",t);this.abort()}if(!this.silent)console.error("glob error",t);break}return s()};Glob.prototype._processGlobStar=function(e,t,s,n,i,r,o){var a=this;this._readdir(s,r,(function(l,c){a._processGlobStar2(e,t,s,n,i,r,c,o)}))};Glob.prototype._processGlobStar2=function(e,t,s,n,i,r,o,a){if(!o)return a();var l=n.slice(1);var c=e?[e]:[];var u=c.concat(l);this._process(u,i,false,a);var d=this.symlinks[s];var p=o.length;if(d&&r)return a();for(var _=0;_<p;_++){var m=o[_];if(m.charAt(0)==="."&&!this.dot)continue;var b=c.concat(o[_],l);this._process(b,i,true,a);var g=c.concat(o[_],n);this._process(g,i,true,a)}a()};Glob.prototype._processSimple=function(e,t,s){var n=this;this._stat(e,(function(i,r){n._processSimple2(e,t,i,r,s)}))};Glob.prototype._processSimple2=function(e,t,s,n,i){if(!this.matches[t])this.matches[t]=Object.create(null);if(!n)return i();if(e&&d(e)&&!this.nomount){var r=/[\/\\]$/.test(e);if(e.charAt(0)==="/"){e=c.join(this.root,e)}else{e=c.resolve(this.root,e);if(r)e+="/"}}if(process.platform==="win32")e=e.replace(/\\/g,"/");this._emitMatch(t,e);i()};Glob.prototype._stat=function(e,t){var s=this._makeAbs(e);var i=e.slice(-1)==="/";if(e.length>this.maxLength)return t();if(!this.stat&&b(this.cache,s)){var r=this.cache[s];if(Array.isArray(r))r="DIR";if(!i||r==="DIR")return t(null,r);if(i&&r==="FILE")return t()}var o;var a=this.statCache[s];if(a!==undefined){if(a===false)return t(null,a);else{var l=a.isDirectory()?"DIR":"FILE";if(i&&l==="FILE")return t();else return t(null,l,a)}}var c=this;var u=g("stat\0"+s,lstatcb_);if(u)n.lstat(s,u);function lstatcb_(i,r){if(r&&r.isSymbolicLink()){return n.stat(s,(function(n,i){if(n)c._stat2(e,s,null,r,t);else c._stat2(e,s,n,i,t)}))}else{c._stat2(e,s,i,r,t)}}};Glob.prototype._stat2=function(e,t,s,n,i){if(s&&(s.code==="ENOENT"||s.code==="ENOTDIR")){this.statCache[t]=false;return i()}var r=e.slice(-1)==="/";this.statCache[t]=n;if(t.slice(-1)==="/"&&n&&!n.isDirectory())return i(null,false,n);var o=true;if(n)o=n.isDirectory()?"DIR":"FILE";this.cache[t]=this.cache[t]||o;if(r&&o==="FILE")return i();return i(null,o,n)}},9010:(e,t,s)=>{e.exports=globSync;globSync.GlobSync=GlobSync;var n=s(5747);var i=s(6863);var r=s(3973);var o=r.Minimatch;var a=s(1957).Glob;var l=s(1669);var c=s(5622);var u=s(2357);var d=s(8714);var p=s(7625);var _=p.setopts;var m=p.ownProp;var b=p.childrenIgnored;var g=p.isIgnored;function globSync(e,t){if(typeof t==="function"||arguments.length===3)throw new TypeError("callback provided to sync glob\n"+"See: https://github.com/isaacs/node-glob/issues/167");return new GlobSync(e,t).found}function GlobSync(e,t){if(!e)throw new Error("must provide pattern");if(typeof t==="function"||arguments.length===3)throw new TypeError("callback provided to sync glob\n"+"See: https://github.com/isaacs/node-glob/issues/167");if(!(this instanceof GlobSync))return new GlobSync(e,t);_(this,e,t);if(this.noprocess)return this;var s=this.minimatch.set.length;this.matches=new Array(s);for(var n=0;n<s;n++){this._process(this.minimatch.set[n],n,false)}this._finish()}GlobSync.prototype._finish=function(){u(this instanceof GlobSync);if(this.realpath){var e=this;this.matches.forEach((function(t,s){var n=e.matches[s]=Object.create(null);for(var r in t){try{r=e._makeAbs(r);var o=i.realpathSync(r,e.realpathCache);n[o]=true}catch(t){if(t.syscall==="stat")n[e._makeAbs(r)]=true;else throw t}}}))}p.finish(this)};GlobSync.prototype._process=function(e,t,s){u(this instanceof GlobSync);var n=0;while(typeof e[n]==="string"){n++}var i;switch(n){case e.length:this._processSimple(e.join("/"),t);return;case 0:i=null;break;default:i=e.slice(0,n).join("/");break}var o=e.slice(n);var a;if(i===null)a=".";else if(d(i)||d(e.join("/"))){if(!i||!d(i))i="/"+i;a=i}else a=i;var l=this._makeAbs(a);if(b(this,a))return;var c=o[0]===r.GLOBSTAR;if(c)this._processGlobStar(i,a,l,o,t,s);else this._processReaddir(i,a,l,o,t,s)};GlobSync.prototype._processReaddir=function(e,t,s,n,i,r){var o=this._readdir(s,r);if(!o)return;var a=n[0];var l=!!this.minimatch.negate;var u=a._glob;var d=this.dot||u.charAt(0)===".";var p=[];for(var _=0;_<o.length;_++){var m=o[_];if(m.charAt(0)!=="."||d){var b;if(l&&!e){b=!m.match(a)}else{b=m.match(a)}if(b)p.push(m)}}var g=p.length;if(g===0)return;if(n.length===1&&!this.mark&&!this.stat){if(!this.matches[i])this.matches[i]=Object.create(null);for(var _=0;_<g;_++){var m=p[_];if(e){if(e.slice(-1)!=="/")m=e+"/"+m;else m=e+m}if(m.charAt(0)==="/"&&!this.nomount){m=c.join(this.root,m)}this._emitMatch(i,m)}return}n.shift();for(var _=0;_<g;_++){var m=p[_];var h;if(e)h=[e,m];else h=[m];this._process(h.concat(n),i,r)}};GlobSync.prototype._emitMatch=function(e,t){if(g(this,t))return;var s=this._makeAbs(t);if(this.mark)t=this._mark(t);if(this.absolute){t=s}if(this.matches[e][t])return;if(this.nodir){var n=this.cache[s];if(n==="DIR"||Array.isArray(n))return}this.matches[e][t]=true;if(this.stat)this._stat(t)};GlobSync.prototype._readdirInGlobStar=function(e){if(this.follow)return this._readdir(e,false);var t;var s;var i;try{s=n.lstatSync(e)}catch(e){if(e.code==="ENOENT"){return null}}var r=s&&s.isSymbolicLink();this.symlinks[e]=r;if(!r&&s&&!s.isDirectory())this.cache[e]="FILE";else t=this._readdir(e,false);return t};GlobSync.prototype._readdir=function(e,t){var s;if(t&&!m(this.symlinks,e))return this._readdirInGlobStar(e);if(m(this.cache,e)){var i=this.cache[e];if(!i||i==="FILE")return null;if(Array.isArray(i))return i}try{return this._readdirEntries(e,n.readdirSync(e))}catch(t){this._readdirError(e,t);return null}};GlobSync.prototype._readdirEntries=function(e,t){if(!this.mark&&!this.stat){for(var s=0;s<t.length;s++){var n=t[s];if(e==="/")n=e+n;else n=e+"/"+n;this.cache[n]=true}}this.cache[e]=t;return t};GlobSync.prototype._readdirError=function(e,t){switch(t.code){case"ENOTSUP":case"ENOTDIR":var s=this._makeAbs(e);this.cache[s]="FILE";if(s===this.cwdAbs){var n=new Error(t.code+" invalid cwd "+this.cwd);n.path=this.cwd;n.code=t.code;throw n}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=false;break;default:this.cache[this._makeAbs(e)]=false;if(this.strict)throw t;if(!this.silent)console.error("glob error",t);break}};GlobSync.prototype._processGlobStar=function(e,t,s,n,i,r){var o=this._readdir(s,r);if(!o)return;var a=n.slice(1);var l=e?[e]:[];var c=l.concat(a);this._process(c,i,false);var u=o.length;var d=this.symlinks[s];if(d&&r)return;for(var p=0;p<u;p++){var _=o[p];if(_.charAt(0)==="."&&!this.dot)continue;var m=l.concat(o[p],a);this._process(m,i,true);var b=l.concat(o[p],n);this._process(b,i,true)}};GlobSync.prototype._processSimple=function(e,t){var s=this._stat(e);if(!this.matches[t])this.matches[t]=Object.create(null);if(!s)return;if(e&&d(e)&&!this.nomount){var n=/[\/\\]$/.test(e);if(e.charAt(0)==="/"){e=c.join(this.root,e)}else{e=c.resolve(this.root,e);if(n)e+="/"}}if(process.platform==="win32")e=e.replace(/\\/g,"/");this._emitMatch(t,e)};GlobSync.prototype._stat=function(e){var t=this._makeAbs(e);var s=e.slice(-1)==="/";if(e.length>this.maxLength)return false;if(!this.stat&&m(this.cache,t)){var i=this.cache[t];if(Array.isArray(i))i="DIR";if(!s||i==="DIR")return i;if(s&&i==="FILE")return false}var r;var o=this.statCache[t];if(!o){var a;try{a=n.lstatSync(t)}catch(e){if(e&&(e.code==="ENOENT"||e.code==="ENOTDIR")){this.statCache[t]=false;return false}}if(a&&a.isSymbolicLink()){try{o=n.statSync(t)}catch(e){o=a}}else{o=a}}this.statCache[t]=o;var i=true;if(o)i=o.isDirectory()?"DIR":"FILE";this.cache[t]=this.cache[t]||i;if(s&&i==="FILE")return false;return i};GlobSync.prototype._mark=function(e){return p.mark(this,e)};GlobSync.prototype._makeAbs=function(e){return p.makeAbs(this,e)}},1621:e=>{"use strict";e.exports=(e,t=process.argv)=>{const s=e.startsWith("-")?"":e.length===1?"-":"--";const n=t.indexOf(s+e);const i=t.indexOf("--");return n!==-1&&(i===-1||n<i)}},5098:function(e,t,s){"use strict";var n=this&&this.__awaiter||function(e,t,s,n){function adopt(e){return e instanceof s?e:new s((function(t){t(e)}))}return new(s||(s=Promise))((function(s,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n["throw"](e))}catch(e){i(e)}}function step(e){e.done?s(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))};var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const r=i(s(1631));const o=i(s(4016));const a=i(s(8835));const l=i(s(2357));const c=i(s(8237));const u=s(9690);const d=i(s(595));const p=c.default("https-proxy-agent:agent");class HttpsProxyAgent extends u.Agent{constructor(e){let t;if(typeof e==="string"){t=a.default.parse(e)}else{t=e}if(!t){throw new Error("an HTTP(S) proxy server `host` and `port` must be specified!")}p("creating new HttpsProxyAgent instance: %o",t);super(t);const s=Object.assign({},t);this.secureProxy=t.secureProxy||isHTTPS(s.protocol);s.host=s.hostname||s.host;if(typeof s.port==="string"){s.port=parseInt(s.port,10)}if(!s.port&&s.host){s.port=this.secureProxy?443:80}if(this.secureProxy&&!("ALPNProtocols"in s)){s.ALPNProtocols=["http 1.1"]}if(s.host&&s.path){delete s.path;delete s.pathname}this.proxy=s}callback(e,t){return n(this,void 0,void 0,(function*(){const{proxy:s,secureProxy:n}=this;let i;if(n){p("Creating `tls.Socket`: %o",s);i=o.default.connect(s)}else{p("Creating `net.Socket`: %o",s);i=r.default.connect(s)}const a=Object.assign({},s.headers);const c=`${t.host}:${t.port}`;let u=`CONNECT ${c} HTTP/1.1\r\n`;if(s.auth){a["Proxy-Authorization"]=`Basic ${Buffer.from(s.auth).toString("base64")}`}let{host:_,port:m,secureEndpoint:b}=t;if(!isDefaultPort(m,b)){_+=`:${m}`}a.Host=_;a.Connection="close";for(const e of Object.keys(a)){u+=`${e}: ${a[e]}\r\n`}const g=d.default(i);i.write(`${u}\r\n`);const{statusCode:h,buffered:y}=yield g;if(h===200){e.once("socket",resume);if(t.secureEndpoint){const e=t.servername||t.host;if(!e){throw new Error('Could not determine "servername"')}p("Upgrading socket connection to TLS");return o.default.connect(Object.assign(Object.assign({},omit(t,"host","hostname","path","port")),{socket:i,servername:e}))}return i}i.destroy();const w=new r.default.Socket;w.readable=true;e.once("socket",(e=>{p("replaying proxy buffer for failed request");l.default(e.listenerCount("data")>0);e.push(y);e.push(null)}));return w}))}}t.default=HttpsProxyAgent;function resume(e){e.resume()}function isDefaultPort(e,t){return Boolean(!t&&e===80||t&&e===443)}function isHTTPS(e){return typeof e==="string"?/^https:?$/i.test(e):false}function omit(e,...t){const s={};let n;for(n in e){if(!t.includes(n)){s[n]=e[n]}}return s}},7219:function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};const i=n(s(5098));function createHttpsProxyAgent(e){return new i.default(e)}(function(e){e.HttpsProxyAgent=i.default;e.prototype=i.default.prototype})(createHttpsProxyAgent||(createHttpsProxyAgent={}));e.exports=createHttpsProxyAgent},595:function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const i=n(s(8237));const r=i.default("https-proxy-agent:parse-proxy-response");function parseProxyResponse(e){return new Promise(((t,s)=>{let n=0;const i=[];function read(){const t=e.read();if(t)ondata(t);else e.once("readable",read)}function cleanup(){e.removeListener("end",onend);e.removeListener("error",onerror);e.removeListener("close",onclose);e.removeListener("readable",read)}function onclose(e){r("onclose had error %o",e)}function onend(){r("onend")}function onerror(e){cleanup();r("onerror %o",e);s(e)}function ondata(e){i.push(e);n+=e.length;const s=Buffer.concat(i,n);const o=s.indexOf("\r\n\r\n");if(o===-1){r("have not received end of HTTP headers yet...");read();return}const a=s.toString("ascii",0,s.indexOf("\r\n"));const l=+a.split(" ")[1];r("got proxy server response: %o",a);t({statusCode:l,buffered:s})}e.on("error",onerror);e.on("close",onclose);e.on("end",onend);read()}))}t.default=parseProxyResponse},2492:(e,t,s)=>{var n=s(2940);var i=Object.create(null);var r=s(1223);e.exports=n(inflight);function inflight(e,t){if(i[e]){i[e].push(t);return null}else{i[e]=[t];return makeres(e)}}function makeres(e){return r((function RES(){var t=i[e];var s=t.length;var n=slice(arguments);try{for(var r=0;r<s;r++){t[r].apply(null,n)}}finally{if(t.length>s){t.splice(0,s);process.nextTick((function(){RES.apply(null,n)}))}else{delete i[e]}}}))}function slice(e){var t=e.length;var s=[];for(var n=0;n<t;n++)s[n]=e[n];return s}},4124:(e,t,s)=>{try{var n=s(1669);if(typeof n.inherits!=="function")throw"";e.exports=n.inherits}catch(t){e.exports=s(8544)}},8544:e=>{if(typeof Object.create==="function"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},3287:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var t,s;if(isObject(e)===false)return false;t=e.constructor;if(t===undefined)return true;s=t.prototype;if(isObject(s)===false)return false;if(s.hasOwnProperty("isPrototypeOf")===false){return false}return true}t.isPlainObject=isPlainObject},6904:(e,t,s)=>{const n=s(7583);const i=s(749);const r={parse:n,stringify:i};e.exports=r},7583:(e,t,s)=>{const n=s(7393);let i;let r;let o;let a;let l;let c;let u;let d;let p;e.exports=function parse(e,t){i=String(e);r="start";o=[];a=0;l=1;c=0;u=undefined;d=undefined;p=undefined;do{u=lex();w[r]()}while(u.type!=="eof");if(typeof t==="function"){return internalize({"":p},"",t)}return p};function internalize(e,t,s){const n=e[t];if(n!=null&&typeof n==="object"){for(const e in n){const t=internalize(n,e,s);if(t===undefined){delete n[e]}else{n[e]=t}}}return s.call(e,t,n)}let _;let m;let b;let g;let h;function lex(){_="default";m="";b=false;g=1;for(;;){h=peek();const e=y[_]();if(e){return e}}}function peek(){if(i[a]){return String.fromCodePoint(i.codePointAt(a))}}function read(){const e=peek();if(e==="\n"){l++;c=0}else if(e){c+=e.length}else{c++}if(e){a+=e.length}return e}const y={default(){switch(h){case"\t":case"\v":case"\f":case" ":case" ":case"\ufeff":case"\n":case"\r":case"\u2028":case"\u2029":read();return;case"/":read();_="comment";return;case undefined:read();return newToken("eof")}if(n.isSpaceSeparator(h)){read();return}return y[r]()},comment(){switch(h){case"*":read();_="multiLineComment";return;case"/":read();_="singleLineComment";return}throw invalidChar(read())},multiLineComment(){switch(h){case"*":read();_="multiLineCommentAsterisk";return;case undefined:throw invalidChar(read())}read()},multiLineCommentAsterisk(){switch(h){case"*":read();return;case"/":read();_="default";return;case undefined:throw invalidChar(read())}read();_="multiLineComment"},singleLineComment(){switch(h){case"\n":case"\r":case"\u2028":case"\u2029":read();_="default";return;case undefined:read();return newToken("eof")}read()},value(){switch(h){case"{":case"[":return newToken("punctuator",read());case"n":read();literal("ull");return newToken("null",null);case"t":read();literal("rue");return newToken("boolean",true);case"f":read();literal("alse");return newToken("boolean",false);case"-":case"+":if(read()==="-"){g=-1}_="sign";return;case".":m=read();_="decimalPointLeading";return;case"0":m=read();_="zero";return;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":m=read();_="decimalInteger";return;case"I":read();literal("nfinity");return newToken("numeric",Infinity);case"N":read();literal("aN");return newToken("numeric",NaN);case'"':case"'":b=read()==='"';m="";_="string";return}throw invalidChar(read())},identifierNameStartEscape(){if(h!=="u"){throw invalidChar(read())}read();const e=unicodeEscape();switch(e){case"$":case"_":break;default:if(!n.isIdStartChar(e)){throw invalidIdentifier()}break}m+=e;_="identifierName"},identifierName(){switch(h){case"$":case"_":case"‌":case"‍":m+=read();return;case"\\":read();_="identifierNameEscape";return}if(n.isIdContinueChar(h)){m+=read();return}return newToken("identifier",m)},identifierNameEscape(){if(h!=="u"){throw invalidChar(read())}read();const e=unicodeEscape();switch(e){case"$":case"_":case"‌":case"‍":break;default:if(!n.isIdContinueChar(e)){throw invalidIdentifier()}break}m+=e;_="identifierName"},sign(){switch(h){case".":m=read();_="decimalPointLeading";return;case"0":m=read();_="zero";return;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":m=read();_="decimalInteger";return;case"I":read();literal("nfinity");return newToken("numeric",g*Infinity);case"N":read();literal("aN");return newToken("numeric",NaN)}throw invalidChar(read())},zero(){switch(h){case".":m+=read();_="decimalPoint";return;case"e":case"E":m+=read();_="decimalExponent";return;case"x":case"X":m+=read();_="hexadecimal";return}return newToken("numeric",g*0)},decimalInteger(){switch(h){case".":m+=read();_="decimalPoint";return;case"e":case"E":m+=read();_="decimalExponent";return}if(n.isDigit(h)){m+=read();return}return newToken("numeric",g*Number(m))},decimalPointLeading(){if(n.isDigit(h)){m+=read();_="decimalFraction";return}throw invalidChar(read())},decimalPoint(){switch(h){case"e":case"E":m+=read();_="decimalExponent";return}if(n.isDigit(h)){m+=read();_="decimalFraction";return}return newToken("numeric",g*Number(m))},decimalFraction(){switch(h){case"e":case"E":m+=read();_="decimalExponent";return}if(n.isDigit(h)){m+=read();return}return newToken("numeric",g*Number(m))},decimalExponent(){switch(h){case"+":case"-":m+=read();_="decimalExponentSign";return}if(n.isDigit(h)){m+=read();_="decimalExponentInteger";return}throw invalidChar(read())},decimalExponentSign(){if(n.isDigit(h)){m+=read();_="decimalExponentInteger";return}throw invalidChar(read())},decimalExponentInteger(){if(n.isDigit(h)){m+=read();return}return newToken("numeric",g*Number(m))},hexadecimal(){if(n.isHexDigit(h)){m+=read();_="hexadecimalInteger";return}throw invalidChar(read())},hexadecimalInteger(){if(n.isHexDigit(h)){m+=read();return}return newToken("numeric",g*Number(m))},string(){switch(h){case"\\":read();m+=escape();return;case'"':if(b){read();return newToken("string",m)}m+=read();return;case"'":if(!b){read();return newToken("string",m)}m+=read();return;case"\n":case"\r":throw invalidChar(read());case"\u2028":case"\u2029":separatorChar(h);break;case undefined:throw invalidChar(read())}m+=read()},start(){switch(h){case"{":case"[":return newToken("punctuator",read())}_="value"},beforePropertyName(){switch(h){case"$":case"_":m=read();_="identifierName";return;case"\\":read();_="identifierNameStartEscape";return;case"}":return newToken("punctuator",read());case'"':case"'":b=read()==='"';_="string";return}if(n.isIdStartChar(h)){m+=read();_="identifierName";return}throw invalidChar(read())},afterPropertyName(){if(h===":"){return newToken("punctuator",read())}throw invalidChar(read())},beforePropertyValue(){_="value"},afterPropertyValue(){switch(h){case",":case"}":return newToken("punctuator",read())}throw invalidChar(read())},beforeArrayValue(){if(h==="]"){return newToken("punctuator",read())}_="value"},afterArrayValue(){switch(h){case",":case"]":return newToken("punctuator",read())}throw invalidChar(read())},end(){throw invalidChar(read())}};function newToken(e,t){return{type:e,value:t,line:l,column:c}}function literal(e){for(const t of e){const e=peek();if(e!==t){throw invalidChar(read())}read()}}function escape(){const e=peek();switch(e){case"b":read();return"\b";case"f":read();return"\f";case"n":read();return"\n";case"r":read();return"\r";case"t":read();return"\t";case"v":read();return"\v";case"0":read();if(n.isDigit(peek())){throw invalidChar(read())}return"\0";case"x":read();return hexEscape();case"u":read();return unicodeEscape();case"\n":case"\u2028":case"\u2029":read();return"";case"\r":read();if(peek()==="\n"){read()}return"";case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":throw invalidChar(read());case undefined:throw invalidChar(read())}return read()}function hexEscape(){let e="";let t=peek();if(!n.isHexDigit(t)){throw invalidChar(read())}e+=read();t=peek();if(!n.isHexDigit(t)){throw invalidChar(read())}e+=read();return String.fromCodePoint(parseInt(e,16))}function unicodeEscape(){let e="";let t=4;while(t-- >0){const t=peek();if(!n.isHexDigit(t)){throw invalidChar(read())}e+=read()}return String.fromCodePoint(parseInt(e,16))}const w={start(){if(u.type==="eof"){throw invalidEOF()}push()},beforePropertyName(){switch(u.type){case"identifier":case"string":d=u.value;r="afterPropertyName";return;case"punctuator":pop();return;case"eof":throw invalidEOF()}},afterPropertyName(){if(u.type==="eof"){throw invalidEOF()}r="beforePropertyValue"},beforePropertyValue(){if(u.type==="eof"){throw invalidEOF()}push()},beforeArrayValue(){if(u.type==="eof"){throw invalidEOF()}if(u.type==="punctuator"&&u.value==="]"){pop();return}push()},afterPropertyValue(){if(u.type==="eof"){throw invalidEOF()}switch(u.value){case",":r="beforePropertyName";return;case"}":pop()}},afterArrayValue(){if(u.type==="eof"){throw invalidEOF()}switch(u.value){case",":r="beforeArrayValue";return;case"]":pop()}},end(){}};function push(){let e;switch(u.type){case"punctuator":switch(u.value){case"{":e={};break;case"[":e=[];break}break;case"null":case"boolean":case"numeric":case"string":e=u.value;break}if(p===undefined){p=e}else{const t=o[o.length-1];if(Array.isArray(t)){t.push(e)}else{t[d]=e}}if(e!==null&&typeof e==="object"){o.push(e);if(Array.isArray(e)){r="beforeArrayValue"}else{r="beforePropertyName"}}else{const e=o[o.length-1];if(e==null){r="end"}else if(Array.isArray(e)){r="afterArrayValue"}else{r="afterPropertyValue"}}}function pop(){o.pop();const e=o[o.length-1];if(e==null){r="end"}else if(Array.isArray(e)){r="afterArrayValue"}else{r="afterPropertyValue"}}function invalidChar(e){if(e===undefined){return syntaxError(`JSON5: invalid end of input at ${l}:${c}`)}return syntaxError(`JSON5: invalid character '${formatChar(e)}' at ${l}:${c}`)}function invalidEOF(){return syntaxError(`JSON5: invalid end of input at ${l}:${c}`)}function invalidIdentifier(){c-=5;return syntaxError(`JSON5: invalid identifier character at ${l}:${c}`)}function separatorChar(e){console.warn(`JSON5: '${formatChar(e)}' in strings is not valid ECMAScript; consider escaping`)}function formatChar(e){const t={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};if(t[e]){return t[e]}if(e<" "){const t=e.charCodeAt(0).toString(16);return"\\x"+("00"+t).substring(t.length)}return e}function syntaxError(e){const t=new SyntaxError(e);t.lineNumber=l;t.columnNumber=c;return t}},749:(e,t,s)=>{const n=s(7393);e.exports=function stringify(e,t,s){const i=[];let r="";let o;let a;let l="";let c;if(t!=null&&typeof t==="object"&&!Array.isArray(t)){s=t.space;c=t.quote;t=t.replacer}if(typeof t==="function"){a=t}else if(Array.isArray(t)){o=[];for(const e of t){let t;if(typeof e==="string"){t=e}else if(typeof e==="number"||e instanceof String||e instanceof Number){t=String(e)}if(t!==undefined&&o.indexOf(t)<0){o.push(t)}}}if(s instanceof Number){s=Number(s)}else if(s instanceof String){s=String(s)}if(typeof s==="number"){if(s>0){s=Math.min(10,Math.floor(s));l="          ".substr(0,s)}}else if(typeof s==="string"){l=s.substr(0,10)}return serializeProperty("",{"":e});function serializeProperty(e,t){let s=t[e];if(s!=null){if(typeof s.toJSON5==="function"){s=s.toJSON5(e)}else if(typeof s.toJSON==="function"){s=s.toJSON(e)}}if(a){s=a.call(t,e,s)}if(s instanceof Number){s=Number(s)}else if(s instanceof String){s=String(s)}else if(s instanceof Boolean){s=s.valueOf()}switch(s){case null:return"null";case true:return"true";case false:return"false"}if(typeof s==="string"){return quoteString(s,false)}if(typeof s==="number"){return String(s)}if(typeof s==="object"){return Array.isArray(s)?serializeArray(s):serializeObject(s)}return undefined}function quoteString(e){const t={"'":.1,'"':.2};const s={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};let i="";for(let r=0;r<e.length;r++){const o=e[r];switch(o){case"'":case'"':t[o]++;i+=o;continue;case"\0":if(n.isDigit(e[r+1])){i+="\\x00";continue}}if(s[o]){i+=s[o];continue}if(o<" "){let e=o.charCodeAt(0).toString(16);i+="\\x"+("00"+e).substring(e.length);continue}i+=o}const r=c||Object.keys(t).reduce(((e,s)=>t[e]<t[s]?e:s));i=i.replace(new RegExp(r,"g"),s[r]);return r+i+r}function serializeObject(e){if(i.indexOf(e)>=0){throw TypeError("Converting circular structure to JSON5")}i.push(e);let t=r;r=r+l;let s=o||Object.keys(e);let n=[];for(const t of s){const s=serializeProperty(t,e);if(s!==undefined){let e=serializeKey(t)+":";if(l!==""){e+=" "}e+=s;n.push(e)}}let a;if(n.length===0){a="{}"}else{let e;if(l===""){e=n.join(",");a="{"+e+"}"}else{let s=",\n"+r;e=n.join(s);a="{\n"+r+e+",\n"+t+"}"}}i.pop();r=t;return a}function serializeKey(e){if(e.length===0){return quoteString(e,true)}const t=String.fromCodePoint(e.codePointAt(0));if(!n.isIdStartChar(t)){return quoteString(e,true)}for(let s=t.length;s<e.length;s++){if(!n.isIdContinueChar(String.fromCodePoint(e.codePointAt(s)))){return quoteString(e,true)}}return e}function serializeArray(e){if(i.indexOf(e)>=0){throw TypeError("Converting circular structure to JSON5")}i.push(e);let t=r;r=r+l;let s=[];for(let t=0;t<e.length;t++){const n=serializeProperty(String(t),e);s.push(n!==undefined?n:"null")}let n;if(s.length===0){n="[]"}else{if(l===""){let e=s.join(",");n="["+e+"]"}else{let e=",\n"+r;let i=s.join(e);n="[\n"+r+i+",\n"+t+"]"}}i.pop();r=t;return n}}},1927:e=>{e.exports.Space_Separator=/[\u1680\u2000-\u200A\u202F\u205F\u3000]/;e.exports.ID_Start=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;e.exports.ID_Continue=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},7393:(e,t,s)=>{const n=s(1927);e.exports={isSpaceSeparator(e){return typeof e==="string"&&n.Space_Separator.test(e)},isIdStartChar(e){return typeof e==="string"&&(e>="a"&&e<="z"||e>="A"&&e<="Z"||e==="$"||e==="_"||n.ID_Start.test(e))},isIdContinueChar(e){return typeof e==="string"&&(e>="a"&&e<="z"||e>="A"&&e<="Z"||e>="0"&&e<="9"||e==="$"||e==="_"||e==="‌"||e==="‍"||n.ID_Continue.test(e))},isDigit(e){return typeof e==="string"&&/[0-9]/.test(e)},isHexDigit(e){return typeof e==="string"&&/[0-9A-Fa-f]/.test(e)}}},3973:(e,t,s)=>{e.exports=minimatch;minimatch.Minimatch=Minimatch;var n={sep:"/"};try{n=s(5622)}catch(e){}var i=minimatch.GLOBSTAR=Minimatch.GLOBSTAR={};var r=s(3717);var o={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}};var a="[^/]";var l=a+"*?";var c="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?";var u="(?:(?!(?:\\/|^)\\.).)*?";var d=charSet("().*{}+?[]^$\\!");function charSet(e){return e.split("").reduce((function(e,t){e[t]=true;return e}),{})}var p=/\/+/;minimatch.filter=filter;function filter(e,t){t=t||{};return function(s,n,i){return minimatch(s,e,t)}}function ext(e,t){e=e||{};t=t||{};var s={};Object.keys(t).forEach((function(e){s[e]=t[e]}));Object.keys(e).forEach((function(t){s[t]=e[t]}));return s}minimatch.defaults=function(e){if(!e||!Object.keys(e).length)return minimatch;var t=minimatch;var s=function minimatch(s,n,i){return t.minimatch(s,n,ext(e,i))};s.Minimatch=function Minimatch(s,n){return new t.Minimatch(s,ext(e,n))};return s};Minimatch.defaults=function(e){if(!e||!Object.keys(e).length)return Minimatch;return minimatch.defaults(e).Minimatch};function minimatch(e,t,s){if(typeof t!=="string"){throw new TypeError("glob pattern string required")}if(!s)s={};if(!s.nocomment&&t.charAt(0)==="#"){return false}if(t.trim()==="")return e==="";return new Minimatch(t,s).match(e)}function Minimatch(e,t){if(!(this instanceof Minimatch)){return new Minimatch(e,t)}if(typeof e!=="string"){throw new TypeError("glob pattern string required")}if(!t)t={};e=e.trim();if(n.sep!=="/"){e=e.split(n.sep).join("/")}this.options=t;this.set=[];this.pattern=e;this.regexp=null;this.negate=false;this.comment=false;this.empty=false;this.make()}Minimatch.prototype.debug=function(){};Minimatch.prototype.make=make;function make(){if(this._made)return;var e=this.pattern;var t=this.options;if(!t.nocomment&&e.charAt(0)==="#"){this.comment=true;return}if(!e){this.empty=true;return}this.parseNegate();var s=this.globSet=this.braceExpand();if(t.debug)this.debug=console.error;this.debug(this.pattern,s);s=this.globParts=s.map((function(e){return e.split(p)}));this.debug(this.pattern,s);s=s.map((function(e,t,s){return e.map(this.parse,this)}),this);this.debug(this.pattern,s);s=s.filter((function(e){return e.indexOf(false)===-1}));this.debug(this.pattern,s);this.set=s}Minimatch.prototype.parseNegate=parseNegate;function parseNegate(){var e=this.pattern;var t=false;var s=this.options;var n=0;if(s.nonegate)return;for(var i=0,r=e.length;i<r&&e.charAt(i)==="!";i++){t=!t;n++}if(n)this.pattern=e.substr(n);this.negate=t}minimatch.braceExpand=function(e,t){return braceExpand(e,t)};Minimatch.prototype.braceExpand=braceExpand;function braceExpand(e,t){if(!t){if(this instanceof Minimatch){t=this.options}else{t={}}}e=typeof e==="undefined"?this.pattern:e;if(typeof e==="undefined"){throw new TypeError("undefined pattern")}if(t.nobrace||!e.match(/\{.*\}/)){return[e]}return r(e)}Minimatch.prototype.parse=parse;var _={};function parse(e,t){if(e.length>1024*64){throw new TypeError("pattern is too long")}var s=this.options;if(!s.noglobstar&&e==="**")return i;if(e==="")return"";var n="";var r=!!s.nocase;var c=false;var u=[];var p=[];var m;var b=false;var g=-1;var h=-1;var y=e.charAt(0)==="."?"":s.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)";var w=this;function clearStateChar(){if(m){switch(m){case"*":n+=l;r=true;break;case"?":n+=a;r=true;break;default:n+="\\"+m;break}w.debug("clearStateChar %j %j",m,n);m=false}}for(var x=0,k=e.length,E;x<k&&(E=e.charAt(x));x++){this.debug("%s\t%s %s %j",e,x,n,E);if(c&&d[E]){n+="\\"+E;c=false;continue}switch(E){case"/":return false;case"\\":clearStateChar();c=true;continue;case"?":case"*":case"+":case"@":case"!":this.debug("%s\t%s %s %j <-- stateChar",e,x,n,E);if(b){this.debug("  in class");if(E==="!"&&x===h+1)E="^";n+=E;continue}w.debug("call clearStateChar %j",m);clearStateChar();m=E;if(s.noext)clearStateChar();continue;case"(":if(b){n+="(";continue}if(!m){n+="\\(";continue}u.push({type:m,start:x-1,reStart:n.length,open:o[m].open,close:o[m].close});n+=m==="!"?"(?:(?!(?:":"(?:";this.debug("plType %j %j",m,n);m=false;continue;case")":if(b||!u.length){n+="\\)";continue}clearStateChar();r=true;var C=u.pop();n+=C.close;if(C.type==="!"){p.push(C)}C.reEnd=n.length;continue;case"|":if(b||!u.length||c){n+="\\|";c=false;continue}clearStateChar();n+="|";continue;case"[":clearStateChar();if(b){n+="\\"+E;continue}b=true;h=x;g=n.length;n+=E;continue;case"]":if(x===h+1||!b){n+="\\"+E;c=false;continue}if(b){var v=e.substring(h+1,x);try{RegExp("["+v+"]")}catch(e){var D=this.parse(v,_);n=n.substr(0,g)+"\\["+D[0]+"\\]";r=r||D[1];b=false;continue}}r=true;b=false;n+=E;continue;default:clearStateChar();if(c){c=false}else if(d[E]&&!(E==="^"&&b)){n+="\\"}n+=E}}if(b){v=e.substr(h+1);D=this.parse(v,_);n=n.substr(0,g)+"\\["+D[0];r=r||D[1]}for(C=u.pop();C;C=u.pop()){var S=n.slice(C.reStart+C.open.length);this.debug("setting tail",n,C);S=S.replace(/((?:\\{2}){0,64})(\\?)\|/g,(function(e,t,s){if(!s){s="\\"}return t+t+s+"|"}));this.debug("tail=%j\n   %s",S,S,C,n);var T=C.type==="*"?l:C.type==="?"?a:"\\"+C.type;r=true;n=n.slice(0,C.reStart)+T+"\\("+S}clearStateChar();if(c){n+="\\\\"}var A=false;switch(n.charAt(0)){case".":case"[":case"(":A=true}for(var R=p.length-1;R>-1;R--){var F=p[R];var P=n.slice(0,F.reStart);var B=n.slice(F.reStart,F.reEnd-8);var O=n.slice(F.reEnd-8,F.reEnd);var j=n.slice(F.reEnd);O+=j;var q=P.split("(").length-1;var G=j;for(x=0;x<q;x++){G=G.replace(/\)[+*?]?/,"")}j=G;var I="";if(j===""&&t!==_){I="$"}var W=P+B+j+I+O;n=W}if(n!==""&&r){n="(?=.)"+n}if(A){n=y+n}if(t===_){return[n,r]}if(!r){return globUnescape(e)}var z=s.nocase?"i":"";try{var L=new RegExp("^"+n+"$",z)}catch(e){return new RegExp("$.")}L._glob=e;L._src=n;return L}minimatch.makeRe=function(e,t){return new Minimatch(e,t||{}).makeRe()};Minimatch.prototype.makeRe=makeRe;function makeRe(){if(this.regexp||this.regexp===false)return this.regexp;var e=this.set;if(!e.length){this.regexp=false;return this.regexp}var t=this.options;var s=t.noglobstar?l:t.dot?c:u;var n=t.nocase?"i":"";var r=e.map((function(e){return e.map((function(e){return e===i?s:typeof e==="string"?regExpEscape(e):e._src})).join("\\/")})).join("|");r="^(?:"+r+")$";if(this.negate)r="^(?!"+r+").*$";try{this.regexp=new RegExp(r,n)}catch(e){this.regexp=false}return this.regexp}minimatch.match=function(e,t,s){s=s||{};var n=new Minimatch(t,s);e=e.filter((function(e){return n.match(e)}));if(n.options.nonull&&!e.length){e.push(t)}return e};Minimatch.prototype.match=match;function match(e,t){this.debug("match",e,this.pattern);if(this.comment)return false;if(this.empty)return e==="";if(e==="/"&&t)return true;var s=this.options;if(n.sep!=="/"){e=e.split(n.sep).join("/")}e=e.split(p);this.debug(this.pattern,"split",e);var i=this.set;this.debug(this.pattern,"set",i);var r;var o;for(o=e.length-1;o>=0;o--){r=e[o];if(r)break}for(o=0;o<i.length;o++){var a=i[o];var l=e;if(s.matchBase&&a.length===1){l=[r]}var c=this.matchOne(l,a,t);if(c){if(s.flipNegate)return true;return!this.negate}}if(s.flipNegate)return false;return this.negate}Minimatch.prototype.matchOne=function(e,t,s){var n=this.options;this.debug("matchOne",{this:this,file:e,pattern:t});this.debug("matchOne",e.length,t.length);for(var r=0,o=0,a=e.length,l=t.length;r<a&&o<l;r++,o++){this.debug("matchOne loop");var c=t[o];var u=e[r];this.debug(t,c,u);if(c===false)return false;if(c===i){this.debug("GLOBSTAR",[t,c,u]);var d=r;var p=o+1;if(p===l){this.debug("** at the end");for(;r<a;r++){if(e[r]==="."||e[r]===".."||!n.dot&&e[r].charAt(0)===".")return false}return true}while(d<a){var _=e[d];this.debug("\nglobstar while",e,d,t,p,_);if(this.matchOne(e.slice(d),t.slice(p),s)){this.debug("globstar found match!",d,a,_);return true}else{if(_==="."||_===".."||!n.dot&&_.charAt(0)==="."){this.debug("dot detected!",e,d,t,p);break}this.debug("globstar swallow a segment, and continue");d++}}if(s){this.debug("\n>>> no match, partial?",e,d,t,p);if(d===a)return true}return false}var m;if(typeof c==="string"){if(n.nocase){m=u.toLowerCase()===c.toLowerCase()}else{m=u===c}this.debug("string match",c,u,m)}else{m=u.match(c);this.debug("pattern match",c,u,m)}if(!m)return false}if(r===a&&o===l){return true}else if(r===a){return s}else if(o===l){var b=r===a-1&&e[r]==="";return b}throw new Error("wtf?")};function globUnescape(e){return e.replace(/\\(.)/g,"$1")}function regExpEscape(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}},900:e=>{var t=1e3;var s=t*60;var n=s*60;var i=n*24;var r=i*7;var o=i*365.25;e.exports=function(e,t){t=t||{};var s=typeof e;if(s==="string"&&e.length>0){return parse(e)}else if(s==="number"&&isFinite(e)){return t.long?fmtLong(e):fmtShort(e)}throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(e){e=String(e);if(e.length>100){return}var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!a){return}var l=parseFloat(a[1]);var c=(a[2]||"ms").toLowerCase();switch(c){case"years":case"year":case"yrs":case"yr":case"y":return l*o;case"weeks":case"week":case"w":return l*r;case"days":case"day":case"d":return l*i;case"hours":case"hour":case"hrs":case"hr":case"h":return l*n;case"minutes":case"minute":case"mins":case"min":case"m":return l*s;case"seconds":case"second":case"secs":case"sec":case"s":return l*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return l;default:return undefined}}function fmtShort(e){var r=Math.abs(e);if(r>=i){return Math.round(e/i)+"d"}if(r>=n){return Math.round(e/n)+"h"}if(r>=s){return Math.round(e/s)+"m"}if(r>=t){return Math.round(e/t)+"s"}return e+"ms"}function fmtLong(e){var r=Math.abs(e);if(r>=i){return plural(e,r,i,"day")}if(r>=n){return plural(e,r,n,"hour")}if(r>=s){return plural(e,r,s,"minute")}if(r>=t){return plural(e,r,t,"second")}return e+" ms"}function plural(e,t,s,n){var i=t>=s*1.5;return Math.round(e/s)+" "+n+(i?"s":"")}},1223:(e,t,s)=>{var n=s(2940);e.exports=n(once);e.exports.strict=n(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var t=e.name||"Function wrapped with `once`";f.onceError=t+" shouldn't be called more than once";f.called=false;return f}},8714:e=>{"use strict";function posix(e){return e.charAt(0)==="/"}function win32(e){var t=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;var s=t.exec(e);var n=s[1]||"";var i=Boolean(n&&n.charAt(1)!==":");return Boolean(s[2]||i)}e.exports=process.platform==="win32"?win32:posix;e.exports.posix=posix;e.exports.win32=win32},9318:(e,t,s)=>{"use strict";const n=s(2087);const i=s(3867);const r=s(1621);const{env:o}=process;let a;if(r("no-color")||r("no-colors")||r("color=false")||r("color=never")){a=0}else if(r("color")||r("colors")||r("color=true")||r("color=always")){a=1}if("FORCE_COLOR"in o){if(o.FORCE_COLOR==="true"){a=1}else if(o.FORCE_COLOR==="false"){a=0}else{a=o.FORCE_COLOR.length===0?1:Math.min(parseInt(o.FORCE_COLOR,10),3)}}function translateLevel(e){if(e===0){return false}return{level:e,hasBasic:true,has256:e>=2,has16m:e>=3}}function supportsColor(e,t){if(a===0){return 0}if(r("color=16m")||r("color=full")||r("color=truecolor")){return 3}if(r("color=256")){return 2}if(e&&!t&&a===undefined){return 0}const s=a||0;if(o.TERM==="dumb"){return s}if(process.platform==="win32"){const e=n.release().split(".");if(Number(e[0])>=10&&Number(e[2])>=10586){return Number(e[2])>=14931?3:2}return 1}if("CI"in o){if(["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((e=>e in o))||o.CI_NAME==="codeship"){return 1}return s}if("TEAMCITY_VERSION"in o){return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION)?1:0}if(o.COLORTERM==="truecolor"){return 3}if("TERM_PROGRAM"in o){const e=parseInt((o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(o.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}if(/-256(color)?$/i.test(o.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)){return 1}if("COLORTERM"in o){return 1}return s}function getSupportLevel(e){const t=supportsColor(e,e&&e.isTTY);return translateLevel(t)}e.exports={supportsColor:getSupportLevel,stdout:translateLevel(supportsColor(true,i.isatty(1))),stderr:translateLevel(supportsColor(true,i.isatty(2)))}},4294:(e,t,s)=>{e.exports=s(4219)},4219:(e,t,s)=>{"use strict";var n=s(1631);var i=s(4016);var r=s(8605);var o=s(7211);var a=s(8614);var l=s(2357);var c=s(1669);t.httpOverHttp=httpOverHttp;t.httpsOverHttp=httpsOverHttp;t.httpOverHttps=httpOverHttps;t.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=r.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=r.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=o.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=o.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||r.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",(function onFree(e,s,n,i){var r=toOptions(s,n,i);for(var o=0,a=t.requests.length;o<a;++o){var l=t.requests[o];if(l.host===r.host&&l.port===r.port){t.requests.splice(o,1);l.request.onSocket(e);return}}e.destroy();t.removeSocket(e)}))}c.inherits(TunnelingAgent,a.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,t,s,n){var i=this;var r=mergeOptions({request:e},i.options,toOptions(t,s,n));if(i.sockets.length>=this.maxSockets){i.requests.push(r);return}i.createSocket(r,(function(t){t.on("free",onFree);t.on("close",onCloseOrRemove);t.on("agentRemove",onCloseOrRemove);e.onSocket(t);function onFree(){i.emit("free",t,r)}function onCloseOrRemove(e){i.removeSocket(t);t.removeListener("free",onFree);t.removeListener("close",onCloseOrRemove);t.removeListener("agentRemove",onCloseOrRemove)}}))};TunnelingAgent.prototype.createSocket=function createSocket(e,t){var s=this;var n={};s.sockets.push(n);var i=mergeOptions({},s.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){i.localAddress=e.localAddress}if(i.proxyAuth){i.headers=i.headers||{};i.headers["Proxy-Authorization"]="Basic "+new Buffer(i.proxyAuth).toString("base64")}u("making CONNECT request");var r=s.request(i);r.useChunkedEncodingByDefault=false;r.once("response",onResponse);r.once("upgrade",onUpgrade);r.once("connect",onConnect);r.once("error",onError);r.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,t,s){process.nextTick((function(){onConnect(e,t,s)}))}function onConnect(i,o,a){r.removeAllListeners();o.removeAllListeners();if(i.statusCode!==200){u("tunneling socket could not be established, statusCode=%d",i.statusCode);o.destroy();var l=new Error("tunneling socket could not be established, "+"statusCode="+i.statusCode);l.code="ECONNRESET";e.request.emit("error",l);s.removeSocket(n);return}if(a.length>0){u("got illegal response body from proxy");o.destroy();var l=new Error("got illegal response body from proxy");l.code="ECONNRESET";e.request.emit("error",l);s.removeSocket(n);return}u("tunneling connection has established");s.sockets[s.sockets.indexOf(n)]=o;return t(o)}function onError(t){r.removeAllListeners();u("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var i=new Error("tunneling socket could not be established, "+"cause="+t.message);i.code="ECONNRESET";e.request.emit("error",i);s.removeSocket(n)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var t=this.sockets.indexOf(e);if(t===-1){return}this.sockets.splice(t,1);var s=this.requests.shift();if(s){this.createSocket(s,(function(e){s.request.onSocket(e)}))}};function createSecureSocket(e,t){var s=this;TunnelingAgent.prototype.createSocket.call(s,e,(function(n){var r=e.request.getHeader("host");var o=mergeOptions({},s.options,{socket:n,servername:r?r.replace(/:.*$/,""):e.host});var a=i.connect(0,o);s.sockets[s.sockets.indexOf(n)]=a;t(a)}))}function toOptions(e,t,s){if(typeof e==="string"){return{host:e,port:t,localAddress:s}}return e}function mergeOptions(e){for(var t=1,s=arguments.length;t<s;++t){var n=arguments[t];if(typeof n==="object"){var i=Object.keys(n);for(var r=0,o=i.length;r<o;++r){var a=i[r];if(n[a]!==undefined){e[a]=n[a]}}}}return e}var u;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){u=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{u=function(){}}t.debug=u},5030:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function getUserAgent(){if(typeof navigator==="object"&&"userAgent"in navigator){return navigator.userAgent}if(typeof process==="object"&&"version"in process){return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`}return"<environment undetectable>"}t.getUserAgent=getUserAgent},1452:function(e,t){(function(e,s){true?s(t):0})(this,(function(e){"use strict";const t=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?Symbol:e=>`Symbol(${e})`;function noop(){return undefined}function getGlobals(){if(typeof self!=="undefined"){return self}else if(typeof window!=="undefined"){return window}else if(typeof global!=="undefined"){return global}return undefined}const s=getGlobals();function typeIsObject(e){return typeof e==="object"&&e!==null||typeof e==="function"}const n=noop;const i=Promise;const r=Promise.prototype.then;const o=Promise.resolve.bind(i);const a=Promise.reject.bind(i);function newPromise(e){return new i(e)}function promiseResolvedWith(e){return o(e)}function promiseRejectedWith(e){return a(e)}function PerformPromiseThen(e,t,s){return r.call(e,t,s)}function uponPromise(e,t,s){PerformPromiseThen(PerformPromiseThen(e,t,s),undefined,n)}function uponFulfillment(e,t){uponPromise(e,t)}function uponRejection(e,t){uponPromise(e,undefined,t)}function transformPromiseWith(e,t,s){return PerformPromiseThen(e,t,s)}function setPromiseIsHandledToTrue(e){PerformPromiseThen(e,undefined,n)}const l=(()=>{const e=s&&s.queueMicrotask;if(typeof e==="function"){return e}const t=promiseResolvedWith(undefined);return e=>PerformPromiseThen(t,e)})();function reflectCall(e,t,s){if(typeof e!=="function"){throw new TypeError("Argument is not a function")}return Function.prototype.apply.call(e,t,s)}function promiseCall(e,t,s){try{return promiseResolvedWith(reflectCall(e,t,s))}catch(e){return promiseRejectedWith(e)}}const c=16384;class SimpleQueue{constructor(){this._cursor=0;this._size=0;this._front={_elements:[],_next:undefined};this._back=this._front;this._cursor=0;this._size=0}get length(){return this._size}push(e){const t=this._back;let s=t;if(t._elements.length===c-1){s={_elements:[],_next:undefined}}t._elements.push(e);if(s!==t){this._back=s;t._next=s}++this._size}shift(){const e=this._front;let t=e;const s=this._cursor;let n=s+1;const i=e._elements;const r=i[s];if(n===c){t=e._next;n=0}--this._size;this._cursor=n;if(e!==t){this._front=t}i[s]=undefined;return r}forEach(e){let t=this._cursor;let s=this._front;let n=s._elements;while(t!==n.length||s._next!==undefined){if(t===n.length){s=s._next;n=s._elements;t=0;if(n.length===0){break}}e(n[t]);++t}}peek(){const e=this._front;const t=this._cursor;return e._elements[t]}}function ReadableStreamReaderGenericInitialize(e,t){e._ownerReadableStream=t;t._reader=e;if(t._state==="readable"){defaultReaderClosedPromiseInitialize(e)}else if(t._state==="closed"){defaultReaderClosedPromiseInitializeAsResolved(e)}else{defaultReaderClosedPromiseInitializeAsRejected(e,t._storedError)}}function ReadableStreamReaderGenericCancel(e,t){const s=e._ownerReadableStream;return ReadableStreamCancel(s,t)}function ReadableStreamReaderGenericRelease(e){if(e._ownerReadableStream._state==="readable"){defaultReaderClosedPromiseReject(e,new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`))}else{defaultReaderClosedPromiseResetToRejected(e,new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`))}e._ownerReadableStream._reader=undefined;e._ownerReadableStream=undefined}function readerLockException(e){return new TypeError("Cannot "+e+" a stream using a released reader")}function defaultReaderClosedPromiseInitialize(e){e._closedPromise=newPromise(((t,s)=>{e._closedPromise_resolve=t;e._closedPromise_reject=s}))}function defaultReaderClosedPromiseInitializeAsRejected(e,t){defaultReaderClosedPromiseInitialize(e);defaultReaderClosedPromiseReject(e,t)}function defaultReaderClosedPromiseInitializeAsResolved(e){defaultReaderClosedPromiseInitialize(e);defaultReaderClosedPromiseResolve(e)}function defaultReaderClosedPromiseReject(e,t){if(e._closedPromise_reject===undefined){return}setPromiseIsHandledToTrue(e._closedPromise);e._closedPromise_reject(t);e._closedPromise_resolve=undefined;e._closedPromise_reject=undefined}function defaultReaderClosedPromiseResetToRejected(e,t){defaultReaderClosedPromiseInitializeAsRejected(e,t)}function defaultReaderClosedPromiseResolve(e){if(e._closedPromise_resolve===undefined){return}e._closedPromise_resolve(undefined);e._closedPromise_resolve=undefined;e._closedPromise_reject=undefined}const u=t("[[AbortSteps]]");const d=t("[[ErrorSteps]]");const p=t("[[CancelSteps]]");const _=t("[[PullSteps]]");const m=Number.isFinite||function(e){return typeof e==="number"&&isFinite(e)};const b=Math.trunc||function(e){return e<0?Math.ceil(e):Math.floor(e)};function isDictionary(e){return typeof e==="object"||typeof e==="function"}function assertDictionary(e,t){if(e!==undefined&&!isDictionary(e)){throw new TypeError(`${t} is not an object.`)}}function assertFunction(e,t){if(typeof e!=="function"){throw new TypeError(`${t} is not a function.`)}}function isObject(e){return typeof e==="object"&&e!==null||typeof e==="function"}function assertObject(e,t){if(!isObject(e)){throw new TypeError(`${t} is not an object.`)}}function assertRequiredArgument(e,t,s){if(e===undefined){throw new TypeError(`Parameter ${t} is required in '${s}'.`)}}function assertRequiredField(e,t,s){if(e===undefined){throw new TypeError(`${t} is required in '${s}'.`)}}function convertUnrestrictedDouble(e){return Number(e)}function censorNegativeZero(e){return e===0?0:e}function integerPart(e){return censorNegativeZero(b(e))}function convertUnsignedLongLongWithEnforceRange(e,t){const s=0;const n=Number.MAX_SAFE_INTEGER;let i=Number(e);i=censorNegativeZero(i);if(!m(i)){throw new TypeError(`${t} is not a finite number`)}i=integerPart(i);if(i<s||i>n){throw new TypeError(`${t} is outside the accepted range of ${s} to ${n}, inclusive`)}if(!m(i)||i===0){return 0}return i}function assertReadableStream(e,t){if(!IsReadableStream(e)){throw new TypeError(`${t} is not a ReadableStream.`)}}function AcquireReadableStreamDefaultReader(e){return new ReadableStreamDefaultReader(e)}function ReadableStreamAddReadRequest(e,t){e._reader._readRequests.push(t)}function ReadableStreamFulfillReadRequest(e,t,s){const n=e._reader;const i=n._readRequests.shift();if(s){i._closeSteps()}else{i._chunkSteps(t)}}function ReadableStreamGetNumReadRequests(e){return e._reader._readRequests.length}function ReadableStreamHasDefaultReader(e){const t=e._reader;if(t===undefined){return false}if(!IsReadableStreamDefaultReader(t)){return false}return true}class ReadableStreamDefaultReader{constructor(e){assertRequiredArgument(e,1,"ReadableStreamDefaultReader");assertReadableStream(e,"First parameter");if(IsReadableStreamLocked(e)){throw new TypeError("This stream has already been locked for exclusive reading by another reader")}ReadableStreamReaderGenericInitialize(this,e);this._readRequests=new SimpleQueue}get closed(){if(!IsReadableStreamDefaultReader(this)){return promiseRejectedWith(defaultReaderBrandCheckException("closed"))}return this._closedPromise}cancel(e=undefined){if(!IsReadableStreamDefaultReader(this)){return promiseRejectedWith(defaultReaderBrandCheckException("cancel"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("cancel"))}return ReadableStreamReaderGenericCancel(this,e)}read(){if(!IsReadableStreamDefaultReader(this)){return promiseRejectedWith(defaultReaderBrandCheckException("read"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("read from"))}let e;let t;const s=newPromise(((s,n)=>{e=s;t=n}));const n={_chunkSteps:t=>e({value:t,done:false}),_closeSteps:()=>e({value:undefined,done:true}),_errorSteps:e=>t(e)};ReadableStreamDefaultReaderRead(this,n);return s}releaseLock(){if(!IsReadableStreamDefaultReader(this)){throw defaultReaderBrandCheckException("releaseLock")}if(this._ownerReadableStream===undefined){return}if(this._readRequests.length>0){throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled")}ReadableStreamReaderGenericRelease(this)}}Object.defineProperties(ReadableStreamDefaultReader.prototype,{cancel:{enumerable:true},read:{enumerable:true},releaseLock:{enumerable:true},closed:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ReadableStreamDefaultReader.prototype,t.toStringTag,{value:"ReadableStreamDefaultReader",configurable:true})}function IsReadableStreamDefaultReader(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_readRequests")){return false}return e instanceof ReadableStreamDefaultReader}function ReadableStreamDefaultReaderRead(e,t){const s=e._ownerReadableStream;s._disturbed=true;if(s._state==="closed"){t._closeSteps()}else if(s._state==="errored"){t._errorSteps(s._storedError)}else{s._readableStreamController[_](t)}}function defaultReaderBrandCheckException(e){return new TypeError(`ReadableStreamDefaultReader.prototype.${e} can only be used on a ReadableStreamDefaultReader`)}const g=Object.getPrototypeOf(Object.getPrototypeOf((async function*(){})).prototype);class ReadableStreamAsyncIteratorImpl{constructor(e,t){this._ongoingPromise=undefined;this._isFinished=false;this._reader=e;this._preventCancel=t}next(){const nextSteps=()=>this._nextSteps();this._ongoingPromise=this._ongoingPromise?transformPromiseWith(this._ongoingPromise,nextSteps,nextSteps):nextSteps();return this._ongoingPromise}return(e){const returnSteps=()=>this._returnSteps(e);return this._ongoingPromise?transformPromiseWith(this._ongoingPromise,returnSteps,returnSteps):returnSteps()}_nextSteps(){if(this._isFinished){return Promise.resolve({value:undefined,done:true})}const e=this._reader;if(e._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("iterate"))}let t;let s;const n=newPromise(((e,n)=>{t=e;s=n}));const i={_chunkSteps:e=>{this._ongoingPromise=undefined;l((()=>t({value:e,done:false})))},_closeSteps:()=>{this._ongoingPromise=undefined;this._isFinished=true;ReadableStreamReaderGenericRelease(e);t({value:undefined,done:true})},_errorSteps:t=>{this._ongoingPromise=undefined;this._isFinished=true;ReadableStreamReaderGenericRelease(e);s(t)}};ReadableStreamDefaultReaderRead(e,i);return n}_returnSteps(e){if(this._isFinished){return Promise.resolve({value:e,done:true})}this._isFinished=true;const t=this._reader;if(t._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("finish iterating"))}if(!this._preventCancel){const s=ReadableStreamReaderGenericCancel(t,e);ReadableStreamReaderGenericRelease(t);return transformPromiseWith(s,(()=>({value:e,done:true})))}ReadableStreamReaderGenericRelease(t);return promiseResolvedWith({value:e,done:true})}}const h={next(){if(!IsReadableStreamAsyncIterator(this)){return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"))}return this._asyncIteratorImpl.next()},return(e){if(!IsReadableStreamAsyncIterator(this)){return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"))}return this._asyncIteratorImpl.return(e)}};if(g!==undefined){Object.setPrototypeOf(h,g)}function AcquireReadableStreamAsyncIterator(e,t){const s=AcquireReadableStreamDefaultReader(e);const n=new ReadableStreamAsyncIteratorImpl(s,t);const i=Object.create(h);i._asyncIteratorImpl=n;return i}function IsReadableStreamAsyncIterator(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_asyncIteratorImpl")){return false}try{return e._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl}catch(e){return false}}function streamAsyncIteratorBrandCheckException(e){return new TypeError(`ReadableStreamAsyncIterator.${e} can only be used on a ReadableSteamAsyncIterator`)}const y=Number.isNaN||function(e){return e!==e};function CreateArrayFromList(e){return e.slice()}function CopyDataBlockBytes(e,t,s,n,i){new Uint8Array(e).set(new Uint8Array(s,n,i),t)}function TransferArrayBuffer(e){return e}function IsDetachedBuffer(e){return false}function ArrayBufferSlice(e,t,s){if(e.slice){return e.slice(t,s)}const n=s-t;const i=new ArrayBuffer(n);CopyDataBlockBytes(i,0,e,t,n);return i}function IsNonNegativeNumber(e){if(typeof e!=="number"){return false}if(y(e)){return false}if(e<0){return false}return true}function CloneAsUint8Array(e){const t=ArrayBufferSlice(e.buffer,e.byteOffset,e.byteOffset+e.byteLength);return new Uint8Array(t)}function DequeueValue(e){const t=e._queue.shift();e._queueTotalSize-=t.size;if(e._queueTotalSize<0){e._queueTotalSize=0}return t.value}function EnqueueValueWithSize(e,t,s){if(!IsNonNegativeNumber(s)||s===Infinity){throw new RangeError("Size must be a finite, non-NaN, non-negative number.")}e._queue.push({value:t,size:s});e._queueTotalSize+=s}function PeekQueueValue(e){const t=e._queue.peek();return t.value}function ResetQueue(e){e._queue=new SimpleQueue;e._queueTotalSize=0}class ReadableStreamBYOBRequest{constructor(){throw new TypeError("Illegal constructor")}get view(){if(!IsReadableStreamBYOBRequest(this)){throw byobRequestBrandCheckException("view")}return this._view}respond(e){if(!IsReadableStreamBYOBRequest(this)){throw byobRequestBrandCheckException("respond")}assertRequiredArgument(e,1,"respond");e=convertUnsignedLongLongWithEnforceRange(e,"First parameter");if(this._associatedReadableByteStreamController===undefined){throw new TypeError("This BYOB request has been invalidated")}if(IsDetachedBuffer(this._view.buffer));ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController,e)}respondWithNewView(e){if(!IsReadableStreamBYOBRequest(this)){throw byobRequestBrandCheckException("respondWithNewView")}assertRequiredArgument(e,1,"respondWithNewView");if(!ArrayBuffer.isView(e)){throw new TypeError("You can only respond with array buffer views")}if(this._associatedReadableByteStreamController===undefined){throw new TypeError("This BYOB request has been invalidated")}if(IsDetachedBuffer(e.buffer));ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController,e)}}Object.defineProperties(ReadableStreamBYOBRequest.prototype,{respond:{enumerable:true},respondWithNewView:{enumerable:true},view:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ReadableStreamBYOBRequest.prototype,t.toStringTag,{value:"ReadableStreamBYOBRequest",configurable:true})}class ReadableByteStreamController{constructor(){throw new TypeError("Illegal constructor")}get byobRequest(){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("byobRequest")}return ReadableByteStreamControllerGetBYOBRequest(this)}get desiredSize(){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("desiredSize")}return ReadableByteStreamControllerGetDesiredSize(this)}close(){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("close")}if(this._closeRequested){throw new TypeError("The stream has already been closed; do not close it again!")}const e=this._controlledReadableByteStream._state;if(e!=="readable"){throw new TypeError(`The stream (in ${e} state) is not in the readable state and cannot be closed`)}ReadableByteStreamControllerClose(this)}enqueue(e){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("enqueue")}assertRequiredArgument(e,1,"enqueue");if(!ArrayBuffer.isView(e)){throw new TypeError("chunk must be an array buffer view")}if(e.byteLength===0){throw new TypeError("chunk must have non-zero byteLength")}if(e.buffer.byteLength===0){throw new TypeError(`chunk's buffer must have non-zero byteLength`)}if(this._closeRequested){throw new TypeError("stream is closed or draining")}const t=this._controlledReadableByteStream._state;if(t!=="readable"){throw new TypeError(`The stream (in ${t} state) is not in the readable state and cannot be enqueued to`)}ReadableByteStreamControllerEnqueue(this,e)}error(e=undefined){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("error")}ReadableByteStreamControllerError(this,e)}[p](e){ReadableByteStreamControllerClearPendingPullIntos(this);ResetQueue(this);const t=this._cancelAlgorithm(e);ReadableByteStreamControllerClearAlgorithms(this);return t}[_](e){const t=this._controlledReadableByteStream;if(this._queueTotalSize>0){const t=this._queue.shift();this._queueTotalSize-=t.byteLength;ReadableByteStreamControllerHandleQueueDrain(this);const s=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);e._chunkSteps(s);return}const s=this._autoAllocateChunkSize;if(s!==undefined){let t;try{t=new ArrayBuffer(s)}catch(t){e._errorSteps(t);return}const n={buffer:t,bufferByteLength:s,byteOffset:0,byteLength:s,bytesFilled:0,elementSize:1,viewConstructor:Uint8Array,readerType:"default"};this._pendingPullIntos.push(n)}ReadableStreamAddReadRequest(t,e);ReadableByteStreamControllerCallPullIfNeeded(this)}}Object.defineProperties(ReadableByteStreamController.prototype,{close:{enumerable:true},enqueue:{enumerable:true},error:{enumerable:true},byobRequest:{enumerable:true},desiredSize:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ReadableByteStreamController.prototype,t.toStringTag,{value:"ReadableByteStreamController",configurable:true})}function IsReadableByteStreamController(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_controlledReadableByteStream")){return false}return e instanceof ReadableByteStreamController}function IsReadableStreamBYOBRequest(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_associatedReadableByteStreamController")){return false}return e instanceof ReadableStreamBYOBRequest}function ReadableByteStreamControllerCallPullIfNeeded(e){const t=ReadableByteStreamControllerShouldCallPull(e);if(!t){return}if(e._pulling){e._pullAgain=true;return}e._pulling=true;const s=e._pullAlgorithm();uponPromise(s,(()=>{e._pulling=false;if(e._pullAgain){e._pullAgain=false;ReadableByteStreamControllerCallPullIfNeeded(e)}}),(t=>{ReadableByteStreamControllerError(e,t)}))}function ReadableByteStreamControllerClearPendingPullIntos(e){ReadableByteStreamControllerInvalidateBYOBRequest(e);e._pendingPullIntos=new SimpleQueue}function ReadableByteStreamControllerCommitPullIntoDescriptor(e,t){let s=false;if(e._state==="closed"){s=true}const n=ReadableByteStreamControllerConvertPullIntoDescriptor(t);if(t.readerType==="default"){ReadableStreamFulfillReadRequest(e,n,s)}else{ReadableStreamFulfillReadIntoRequest(e,n,s)}}function ReadableByteStreamControllerConvertPullIntoDescriptor(e){const t=e.bytesFilled;const s=e.elementSize;return new e.viewConstructor(e.buffer,e.byteOffset,t/s)}function ReadableByteStreamControllerEnqueueChunkToQueue(e,t,s,n){e._queue.push({buffer:t,byteOffset:s,byteLength:n});e._queueTotalSize+=n}function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(e,t){const s=t.elementSize;const n=t.bytesFilled-t.bytesFilled%s;const i=Math.min(e._queueTotalSize,t.byteLength-t.bytesFilled);const r=t.bytesFilled+i;const o=r-r%s;let a=i;let l=false;if(o>n){a=o-t.bytesFilled;l=true}const c=e._queue;while(a>0){const s=c.peek();const n=Math.min(a,s.byteLength);const i=t.byteOffset+t.bytesFilled;CopyDataBlockBytes(t.buffer,i,s.buffer,s.byteOffset,n);if(s.byteLength===n){c.shift()}else{s.byteOffset+=n;s.byteLength-=n}e._queueTotalSize-=n;ReadableByteStreamControllerFillHeadPullIntoDescriptor(e,n,t);a-=n}return l}function ReadableByteStreamControllerFillHeadPullIntoDescriptor(e,t,s){s.bytesFilled+=t}function ReadableByteStreamControllerHandleQueueDrain(e){if(e._queueTotalSize===0&&e._closeRequested){ReadableByteStreamControllerClearAlgorithms(e);ReadableStreamClose(e._controlledReadableByteStream)}else{ReadableByteStreamControllerCallPullIfNeeded(e)}}function ReadableByteStreamControllerInvalidateBYOBRequest(e){if(e._byobRequest===null){return}e._byobRequest._associatedReadableByteStreamController=undefined;e._byobRequest._view=null;e._byobRequest=null}function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(e){while(e._pendingPullIntos.length>0){if(e._queueTotalSize===0){return}const t=e._pendingPullIntos.peek();if(ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(e,t)){ReadableByteStreamControllerShiftPendingPullInto(e);ReadableByteStreamControllerCommitPullIntoDescriptor(e._controlledReadableByteStream,t)}}}function ReadableByteStreamControllerPullInto(e,t,s){const n=e._controlledReadableByteStream;let i=1;if(t.constructor!==DataView){i=t.constructor.BYTES_PER_ELEMENT}const r=t.constructor;const o=TransferArrayBuffer(t.buffer);const a={buffer:o,bufferByteLength:o.byteLength,byteOffset:t.byteOffset,byteLength:t.byteLength,bytesFilled:0,elementSize:i,viewConstructor:r,readerType:"byob"};if(e._pendingPullIntos.length>0){e._pendingPullIntos.push(a);ReadableStreamAddReadIntoRequest(n,s);return}if(n._state==="closed"){const e=new r(a.buffer,a.byteOffset,0);s._closeSteps(e);return}if(e._queueTotalSize>0){if(ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(e,a)){const t=ReadableByteStreamControllerConvertPullIntoDescriptor(a);ReadableByteStreamControllerHandleQueueDrain(e);s._chunkSteps(t);return}if(e._closeRequested){const t=new TypeError("Insufficient bytes to fill elements in the given buffer");ReadableByteStreamControllerError(e,t);s._errorSteps(t);return}}e._pendingPullIntos.push(a);ReadableStreamAddReadIntoRequest(n,s);ReadableByteStreamControllerCallPullIfNeeded(e)}function ReadableByteStreamControllerRespondInClosedState(e,t){const s=e._controlledReadableByteStream;if(ReadableStreamHasBYOBReader(s)){while(ReadableStreamGetNumReadIntoRequests(s)>0){const t=ReadableByteStreamControllerShiftPendingPullInto(e);ReadableByteStreamControllerCommitPullIntoDescriptor(s,t)}}}function ReadableByteStreamControllerRespondInReadableState(e,t,s){ReadableByteStreamControllerFillHeadPullIntoDescriptor(e,t,s);if(s.bytesFilled<s.elementSize){return}ReadableByteStreamControllerShiftPendingPullInto(e);const n=s.bytesFilled%s.elementSize;if(n>0){const t=s.byteOffset+s.bytesFilled;const i=ArrayBufferSlice(s.buffer,t-n,t);ReadableByteStreamControllerEnqueueChunkToQueue(e,i,0,i.byteLength)}s.bytesFilled-=n;ReadableByteStreamControllerCommitPullIntoDescriptor(e._controlledReadableByteStream,s);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(e)}function ReadableByteStreamControllerRespondInternal(e,t){const s=e._pendingPullIntos.peek();ReadableByteStreamControllerInvalidateBYOBRequest(e);const n=e._controlledReadableByteStream._state;if(n==="closed"){ReadableByteStreamControllerRespondInClosedState(e)}else{ReadableByteStreamControllerRespondInReadableState(e,t,s)}ReadableByteStreamControllerCallPullIfNeeded(e)}function ReadableByteStreamControllerShiftPendingPullInto(e){const t=e._pendingPullIntos.shift();return t}function ReadableByteStreamControllerShouldCallPull(e){const t=e._controlledReadableByteStream;if(t._state!=="readable"){return false}if(e._closeRequested){return false}if(!e._started){return false}if(ReadableStreamHasDefaultReader(t)&&ReadableStreamGetNumReadRequests(t)>0){return true}if(ReadableStreamHasBYOBReader(t)&&ReadableStreamGetNumReadIntoRequests(t)>0){return true}const s=ReadableByteStreamControllerGetDesiredSize(e);if(s>0){return true}return false}function ReadableByteStreamControllerClearAlgorithms(e){e._pullAlgorithm=undefined;e._cancelAlgorithm=undefined}function ReadableByteStreamControllerClose(e){const t=e._controlledReadableByteStream;if(e._closeRequested||t._state!=="readable"){return}if(e._queueTotalSize>0){e._closeRequested=true;return}if(e._pendingPullIntos.length>0){const t=e._pendingPullIntos.peek();if(t.bytesFilled>0){const t=new TypeError("Insufficient bytes to fill elements in the given buffer");ReadableByteStreamControllerError(e,t);throw t}}ReadableByteStreamControllerClearAlgorithms(e);ReadableStreamClose(t)}function ReadableByteStreamControllerEnqueue(e,t){const s=e._controlledReadableByteStream;if(e._closeRequested||s._state!=="readable"){return}const n=t.buffer;const i=t.byteOffset;const r=t.byteLength;const o=TransferArrayBuffer(n);if(e._pendingPullIntos.length>0){const t=e._pendingPullIntos.peek();if(IsDetachedBuffer(t.buffer));t.buffer=TransferArrayBuffer(t.buffer)}ReadableByteStreamControllerInvalidateBYOBRequest(e);if(ReadableStreamHasDefaultReader(s)){if(ReadableStreamGetNumReadRequests(s)===0){ReadableByteStreamControllerEnqueueChunkToQueue(e,o,i,r)}else{const e=new Uint8Array(o,i,r);ReadableStreamFulfillReadRequest(s,e,false)}}else if(ReadableStreamHasBYOBReader(s)){ReadableByteStreamControllerEnqueueChunkToQueue(e,o,i,r);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(e)}else{ReadableByteStreamControllerEnqueueChunkToQueue(e,o,i,r)}ReadableByteStreamControllerCallPullIfNeeded(e)}function ReadableByteStreamControllerError(e,t){const s=e._controlledReadableByteStream;if(s._state!=="readable"){return}ReadableByteStreamControllerClearPendingPullIntos(e);ResetQueue(e);ReadableByteStreamControllerClearAlgorithms(e);ReadableStreamError(s,t)}function ReadableByteStreamControllerGetBYOBRequest(e){if(e._byobRequest===null&&e._pendingPullIntos.length>0){const t=e._pendingPullIntos.peek();const s=new Uint8Array(t.buffer,t.byteOffset+t.bytesFilled,t.byteLength-t.bytesFilled);const n=Object.create(ReadableStreamBYOBRequest.prototype);SetUpReadableStreamBYOBRequest(n,e,s);e._byobRequest=n}return e._byobRequest}function ReadableByteStreamControllerGetDesiredSize(e){const t=e._controlledReadableByteStream._state;if(t==="errored"){return null}if(t==="closed"){return 0}return e._strategyHWM-e._queueTotalSize}function ReadableByteStreamControllerRespond(e,t){const s=e._pendingPullIntos.peek();const n=e._controlledReadableByteStream._state;if(n==="closed"){if(t!==0){throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream")}}else{if(t===0){throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream")}if(s.bytesFilled+t>s.byteLength){throw new RangeError("bytesWritten out of range")}}s.buffer=TransferArrayBuffer(s.buffer);ReadableByteStreamControllerRespondInternal(e,t)}function ReadableByteStreamControllerRespondWithNewView(e,t){const s=e._pendingPullIntos.peek();const n=e._controlledReadableByteStream._state;if(n==="closed"){if(t.byteLength!==0){throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream")}}else{if(t.byteLength===0){throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream")}}if(s.byteOffset+s.bytesFilled!==t.byteOffset){throw new RangeError("The region specified by view does not match byobRequest")}if(s.bufferByteLength!==t.buffer.byteLength){throw new RangeError("The buffer of view has different capacity than byobRequest")}if(s.bytesFilled+t.byteLength>s.byteLength){throw new RangeError("The region specified by view is larger than byobRequest")}s.buffer=TransferArrayBuffer(t.buffer);ReadableByteStreamControllerRespondInternal(e,t.byteLength)}function SetUpReadableByteStreamController(e,t,s,n,i,r,o){t._controlledReadableByteStream=e;t._pullAgain=false;t._pulling=false;t._byobRequest=null;t._queue=t._queueTotalSize=undefined;ResetQueue(t);t._closeRequested=false;t._started=false;t._strategyHWM=r;t._pullAlgorithm=n;t._cancelAlgorithm=i;t._autoAllocateChunkSize=o;t._pendingPullIntos=new SimpleQueue;e._readableStreamController=t;const a=s();uponPromise(promiseResolvedWith(a),(()=>{t._started=true;ReadableByteStreamControllerCallPullIfNeeded(t)}),(e=>{ReadableByteStreamControllerError(t,e)}))}function SetUpReadableByteStreamControllerFromUnderlyingSource(e,t,s){const n=Object.create(ReadableByteStreamController.prototype);let startAlgorithm=()=>undefined;let pullAlgorithm=()=>promiseResolvedWith(undefined);let cancelAlgorithm=()=>promiseResolvedWith(undefined);if(t.start!==undefined){startAlgorithm=()=>t.start(n)}if(t.pull!==undefined){pullAlgorithm=()=>t.pull(n)}if(t.cancel!==undefined){cancelAlgorithm=e=>t.cancel(e)}const i=t.autoAllocateChunkSize;if(i===0){throw new TypeError("autoAllocateChunkSize must be greater than 0")}SetUpReadableByteStreamController(e,n,startAlgorithm,pullAlgorithm,cancelAlgorithm,s,i)}function SetUpReadableStreamBYOBRequest(e,t,s){e._associatedReadableByteStreamController=t;e._view=s}function byobRequestBrandCheckException(e){return new TypeError(`ReadableStreamBYOBRequest.prototype.${e} can only be used on a ReadableStreamBYOBRequest`)}function byteStreamControllerBrandCheckException(e){return new TypeError(`ReadableByteStreamController.prototype.${e} can only be used on a ReadableByteStreamController`)}function AcquireReadableStreamBYOBReader(e){return new ReadableStreamBYOBReader(e)}function ReadableStreamAddReadIntoRequest(e,t){e._reader._readIntoRequests.push(t)}function ReadableStreamFulfillReadIntoRequest(e,t,s){const n=e._reader;const i=n._readIntoRequests.shift();if(s){i._closeSteps(t)}else{i._chunkSteps(t)}}function ReadableStreamGetNumReadIntoRequests(e){return e._reader._readIntoRequests.length}function ReadableStreamHasBYOBReader(e){const t=e._reader;if(t===undefined){return false}if(!IsReadableStreamBYOBReader(t)){return false}return true}class ReadableStreamBYOBReader{constructor(e){assertRequiredArgument(e,1,"ReadableStreamBYOBReader");assertReadableStream(e,"First parameter");if(IsReadableStreamLocked(e)){throw new TypeError("This stream has already been locked for exclusive reading by another reader")}if(!IsReadableByteStreamController(e._readableStreamController)){throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte "+"source")}ReadableStreamReaderGenericInitialize(this,e);this._readIntoRequests=new SimpleQueue}get closed(){if(!IsReadableStreamBYOBReader(this)){return promiseRejectedWith(byobReaderBrandCheckException("closed"))}return this._closedPromise}cancel(e=undefined){if(!IsReadableStreamBYOBReader(this)){return promiseRejectedWith(byobReaderBrandCheckException("cancel"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("cancel"))}return ReadableStreamReaderGenericCancel(this,e)}read(e){if(!IsReadableStreamBYOBReader(this)){return promiseRejectedWith(byobReaderBrandCheckException("read"))}if(!ArrayBuffer.isView(e)){return promiseRejectedWith(new TypeError("view must be an array buffer view"))}if(e.byteLength===0){return promiseRejectedWith(new TypeError("view must have non-zero byteLength"))}if(e.buffer.byteLength===0){return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`))}if(IsDetachedBuffer(e.buffer));if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("read from"))}let t;let s;const n=newPromise(((e,n)=>{t=e;s=n}));const i={_chunkSteps:e=>t({value:e,done:false}),_closeSteps:e=>t({value:e,done:true}),_errorSteps:e=>s(e)};ReadableStreamBYOBReaderRead(this,e,i);return n}releaseLock(){if(!IsReadableStreamBYOBReader(this)){throw byobReaderBrandCheckException("releaseLock")}if(this._ownerReadableStream===undefined){return}if(this._readIntoRequests.length>0){throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled")}ReadableStreamReaderGenericRelease(this)}}Object.defineProperties(ReadableStreamBYOBReader.prototype,{cancel:{enumerable:true},read:{enumerable:true},releaseLock:{enumerable:true},closed:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ReadableStreamBYOBReader.prototype,t.toStringTag,{value:"ReadableStreamBYOBReader",configurable:true})}function IsReadableStreamBYOBReader(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_readIntoRequests")){return false}return e instanceof ReadableStreamBYOBReader}function ReadableStreamBYOBReaderRead(e,t,s){const n=e._ownerReadableStream;n._disturbed=true;if(n._state==="errored"){s._errorSteps(n._storedError)}else{ReadableByteStreamControllerPullInto(n._readableStreamController,t,s)}}function byobReaderBrandCheckException(e){return new TypeError(`ReadableStreamBYOBReader.prototype.${e} can only be used on a ReadableStreamBYOBReader`)}function ExtractHighWaterMark(e,t){const{highWaterMark:s}=e;if(s===undefined){return t}if(y(s)||s<0){throw new RangeError("Invalid highWaterMark")}return s}function ExtractSizeAlgorithm(e){const{size:t}=e;if(!t){return()=>1}return t}function convertQueuingStrategy(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.highWaterMark;const n=e===null||e===void 0?void 0:e.size;return{highWaterMark:s===undefined?undefined:convertUnrestrictedDouble(s),size:n===undefined?undefined:convertQueuingStrategySize(n,`${t} has member 'size' that`)}}function convertQueuingStrategySize(e,t){assertFunction(e,t);return t=>convertUnrestrictedDouble(e(t))}function convertUnderlyingSink(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.abort;const n=e===null||e===void 0?void 0:e.close;const i=e===null||e===void 0?void 0:e.start;const r=e===null||e===void 0?void 0:e.type;const o=e===null||e===void 0?void 0:e.write;return{abort:s===undefined?undefined:convertUnderlyingSinkAbortCallback(s,e,`${t} has member 'abort' that`),close:n===undefined?undefined:convertUnderlyingSinkCloseCallback(n,e,`${t} has member 'close' that`),start:i===undefined?undefined:convertUnderlyingSinkStartCallback(i,e,`${t} has member 'start' that`),write:o===undefined?undefined:convertUnderlyingSinkWriteCallback(o,e,`${t} has member 'write' that`),type:r}}function convertUnderlyingSinkAbortCallback(e,t,s){assertFunction(e,s);return s=>promiseCall(e,t,[s])}function convertUnderlyingSinkCloseCallback(e,t,s){assertFunction(e,s);return()=>promiseCall(e,t,[])}function convertUnderlyingSinkStartCallback(e,t,s){assertFunction(e,s);return s=>reflectCall(e,t,[s])}function convertUnderlyingSinkWriteCallback(e,t,s){assertFunction(e,s);return(s,n)=>promiseCall(e,t,[s,n])}function assertWritableStream(e,t){if(!IsWritableStream(e)){throw new TypeError(`${t} is not a WritableStream.`)}}function isAbortSignal(e){if(typeof e!=="object"||e===null){return false}try{return typeof e.aborted==="boolean"}catch(e){return false}}const w=typeof AbortController==="function";function createAbortController(){if(w){return new AbortController}return undefined}class WritableStream{constructor(e={},t={}){if(e===undefined){e=null}else{assertObject(e,"First parameter")}const s=convertQueuingStrategy(t,"Second parameter");const n=convertUnderlyingSink(e,"First parameter");InitializeWritableStream(this);const i=n.type;if(i!==undefined){throw new RangeError("Invalid type is specified")}const r=ExtractSizeAlgorithm(s);const o=ExtractHighWaterMark(s,1);SetUpWritableStreamDefaultControllerFromUnderlyingSink(this,n,o,r)}get locked(){if(!IsWritableStream(this)){throw streamBrandCheckException$2("locked")}return IsWritableStreamLocked(this)}abort(e=undefined){if(!IsWritableStream(this)){return promiseRejectedWith(streamBrandCheckException$2("abort"))}if(IsWritableStreamLocked(this)){return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"))}return WritableStreamAbort(this,e)}close(){if(!IsWritableStream(this)){return promiseRejectedWith(streamBrandCheckException$2("close"))}if(IsWritableStreamLocked(this)){return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"))}if(WritableStreamCloseQueuedOrInFlight(this)){return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"))}return WritableStreamClose(this)}getWriter(){if(!IsWritableStream(this)){throw streamBrandCheckException$2("getWriter")}return AcquireWritableStreamDefaultWriter(this)}}Object.defineProperties(WritableStream.prototype,{abort:{enumerable:true},close:{enumerable:true},getWriter:{enumerable:true},locked:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(WritableStream.prototype,t.toStringTag,{value:"WritableStream",configurable:true})}function AcquireWritableStreamDefaultWriter(e){return new WritableStreamDefaultWriter(e)}function CreateWritableStream(e,t,s,n,i=1,r=(()=>1)){const o=Object.create(WritableStream.prototype);InitializeWritableStream(o);const a=Object.create(WritableStreamDefaultController.prototype);SetUpWritableStreamDefaultController(o,a,e,t,s,n,i,r);return o}function InitializeWritableStream(e){e._state="writable";e._storedError=undefined;e._writer=undefined;e._writableStreamController=undefined;e._writeRequests=new SimpleQueue;e._inFlightWriteRequest=undefined;e._closeRequest=undefined;e._inFlightCloseRequest=undefined;e._pendingAbortRequest=undefined;e._backpressure=false}function IsWritableStream(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_writableStreamController")){return false}return e instanceof WritableStream}function IsWritableStreamLocked(e){if(e._writer===undefined){return false}return true}function WritableStreamAbort(e,t){var s;if(e._state==="closed"||e._state==="errored"){return promiseResolvedWith(undefined)}e._writableStreamController._abortReason=t;(s=e._writableStreamController._abortController)===null||s===void 0?void 0:s.abort();const n=e._state;if(n==="closed"||n==="errored"){return promiseResolvedWith(undefined)}if(e._pendingAbortRequest!==undefined){return e._pendingAbortRequest._promise}let i=false;if(n==="erroring"){i=true;t=undefined}const r=newPromise(((s,n)=>{e._pendingAbortRequest={_promise:undefined,_resolve:s,_reject:n,_reason:t,_wasAlreadyErroring:i}}));e._pendingAbortRequest._promise=r;if(!i){WritableStreamStartErroring(e,t)}return r}function WritableStreamClose(e){const t=e._state;if(t==="closed"||t==="errored"){return promiseRejectedWith(new TypeError(`The stream (in ${t} state) is not in the writable state and cannot be closed`))}const s=newPromise(((t,s)=>{const n={_resolve:t,_reject:s};e._closeRequest=n}));const n=e._writer;if(n!==undefined&&e._backpressure&&t==="writable"){defaultWriterReadyPromiseResolve(n)}WritableStreamDefaultControllerClose(e._writableStreamController);return s}function WritableStreamAddWriteRequest(e){const t=newPromise(((t,s)=>{const n={_resolve:t,_reject:s};e._writeRequests.push(n)}));return t}function WritableStreamDealWithRejection(e,t){const s=e._state;if(s==="writable"){WritableStreamStartErroring(e,t);return}WritableStreamFinishErroring(e)}function WritableStreamStartErroring(e,t){const s=e._writableStreamController;e._state="erroring";e._storedError=t;const n=e._writer;if(n!==undefined){WritableStreamDefaultWriterEnsureReadyPromiseRejected(n,t)}if(!WritableStreamHasOperationMarkedInFlight(e)&&s._started){WritableStreamFinishErroring(e)}}function WritableStreamFinishErroring(e){e._state="errored";e._writableStreamController[d]();const t=e._storedError;e._writeRequests.forEach((e=>{e._reject(t)}));e._writeRequests=new SimpleQueue;if(e._pendingAbortRequest===undefined){WritableStreamRejectCloseAndClosedPromiseIfNeeded(e);return}const s=e._pendingAbortRequest;e._pendingAbortRequest=undefined;if(s._wasAlreadyErroring){s._reject(t);WritableStreamRejectCloseAndClosedPromiseIfNeeded(e);return}const n=e._writableStreamController[u](s._reason);uponPromise(n,(()=>{s._resolve();WritableStreamRejectCloseAndClosedPromiseIfNeeded(e)}),(t=>{s._reject(t);WritableStreamRejectCloseAndClosedPromiseIfNeeded(e)}))}function WritableStreamFinishInFlightWrite(e){e._inFlightWriteRequest._resolve(undefined);e._inFlightWriteRequest=undefined}function WritableStreamFinishInFlightWriteWithError(e,t){e._inFlightWriteRequest._reject(t);e._inFlightWriteRequest=undefined;WritableStreamDealWithRejection(e,t)}function WritableStreamFinishInFlightClose(e){e._inFlightCloseRequest._resolve(undefined);e._inFlightCloseRequest=undefined;const t=e._state;if(t==="erroring"){e._storedError=undefined;if(e._pendingAbortRequest!==undefined){e._pendingAbortRequest._resolve();e._pendingAbortRequest=undefined}}e._state="closed";const s=e._writer;if(s!==undefined){defaultWriterClosedPromiseResolve(s)}}function WritableStreamFinishInFlightCloseWithError(e,t){e._inFlightCloseRequest._reject(t);e._inFlightCloseRequest=undefined;if(e._pendingAbortRequest!==undefined){e._pendingAbortRequest._reject(t);e._pendingAbortRequest=undefined}WritableStreamDealWithRejection(e,t)}function WritableStreamCloseQueuedOrInFlight(e){if(e._closeRequest===undefined&&e._inFlightCloseRequest===undefined){return false}return true}function WritableStreamHasOperationMarkedInFlight(e){if(e._inFlightWriteRequest===undefined&&e._inFlightCloseRequest===undefined){return false}return true}function WritableStreamMarkCloseRequestInFlight(e){e._inFlightCloseRequest=e._closeRequest;e._closeRequest=undefined}function WritableStreamMarkFirstWriteRequestInFlight(e){e._inFlightWriteRequest=e._writeRequests.shift()}function WritableStreamRejectCloseAndClosedPromiseIfNeeded(e){if(e._closeRequest!==undefined){e._closeRequest._reject(e._storedError);e._closeRequest=undefined}const t=e._writer;if(t!==undefined){defaultWriterClosedPromiseReject(t,e._storedError)}}function WritableStreamUpdateBackpressure(e,t){const s=e._writer;if(s!==undefined&&t!==e._backpressure){if(t){defaultWriterReadyPromiseReset(s)}else{defaultWriterReadyPromiseResolve(s)}}e._backpressure=t}class WritableStreamDefaultWriter{constructor(e){assertRequiredArgument(e,1,"WritableStreamDefaultWriter");assertWritableStream(e,"First parameter");if(IsWritableStreamLocked(e)){throw new TypeError("This stream has already been locked for exclusive writing by another writer")}this._ownerWritableStream=e;e._writer=this;const t=e._state;if(t==="writable"){if(!WritableStreamCloseQueuedOrInFlight(e)&&e._backpressure){defaultWriterReadyPromiseInitialize(this)}else{defaultWriterReadyPromiseInitializeAsResolved(this)}defaultWriterClosedPromiseInitialize(this)}else if(t==="erroring"){defaultWriterReadyPromiseInitializeAsRejected(this,e._storedError);defaultWriterClosedPromiseInitialize(this)}else if(t==="closed"){defaultWriterReadyPromiseInitializeAsResolved(this);defaultWriterClosedPromiseInitializeAsResolved(this)}else{const t=e._storedError;defaultWriterReadyPromiseInitializeAsRejected(this,t);defaultWriterClosedPromiseInitializeAsRejected(this,t)}}get closed(){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("closed"))}return this._closedPromise}get desiredSize(){if(!IsWritableStreamDefaultWriter(this)){throw defaultWriterBrandCheckException("desiredSize")}if(this._ownerWritableStream===undefined){throw defaultWriterLockException("desiredSize")}return WritableStreamDefaultWriterGetDesiredSize(this)}get ready(){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("ready"))}return this._readyPromise}abort(e=undefined){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("abort"))}if(this._ownerWritableStream===undefined){return promiseRejectedWith(defaultWriterLockException("abort"))}return WritableStreamDefaultWriterAbort(this,e)}close(){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("close"))}const e=this._ownerWritableStream;if(e===undefined){return promiseRejectedWith(defaultWriterLockException("close"))}if(WritableStreamCloseQueuedOrInFlight(e)){return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"))}return WritableStreamDefaultWriterClose(this)}releaseLock(){if(!IsWritableStreamDefaultWriter(this)){throw defaultWriterBrandCheckException("releaseLock")}const e=this._ownerWritableStream;if(e===undefined){return}WritableStreamDefaultWriterRelease(this)}write(e=undefined){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("write"))}if(this._ownerWritableStream===undefined){return promiseRejectedWith(defaultWriterLockException("write to"))}return WritableStreamDefaultWriterWrite(this,e)}}Object.defineProperties(WritableStreamDefaultWriter.prototype,{abort:{enumerable:true},close:{enumerable:true},releaseLock:{enumerable:true},write:{enumerable:true},closed:{enumerable:true},desiredSize:{enumerable:true},ready:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(WritableStreamDefaultWriter.prototype,t.toStringTag,{value:"WritableStreamDefaultWriter",configurable:true})}function IsWritableStreamDefaultWriter(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_ownerWritableStream")){return false}return e instanceof WritableStreamDefaultWriter}function WritableStreamDefaultWriterAbort(e,t){const s=e._ownerWritableStream;return WritableStreamAbort(s,t)}function WritableStreamDefaultWriterClose(e){const t=e._ownerWritableStream;return WritableStreamClose(t)}function WritableStreamDefaultWriterCloseWithErrorPropagation(e){const t=e._ownerWritableStream;const s=t._state;if(WritableStreamCloseQueuedOrInFlight(t)||s==="closed"){return promiseResolvedWith(undefined)}if(s==="errored"){return promiseRejectedWith(t._storedError)}return WritableStreamDefaultWriterClose(e)}function WritableStreamDefaultWriterEnsureClosedPromiseRejected(e,t){if(e._closedPromiseState==="pending"){defaultWriterClosedPromiseReject(e,t)}else{defaultWriterClosedPromiseResetToRejected(e,t)}}function WritableStreamDefaultWriterEnsureReadyPromiseRejected(e,t){if(e._readyPromiseState==="pending"){defaultWriterReadyPromiseReject(e,t)}else{defaultWriterReadyPromiseResetToRejected(e,t)}}function WritableStreamDefaultWriterGetDesiredSize(e){const t=e._ownerWritableStream;const s=t._state;if(s==="errored"||s==="erroring"){return null}if(s==="closed"){return 0}return WritableStreamDefaultControllerGetDesiredSize(t._writableStreamController)}function WritableStreamDefaultWriterRelease(e){const t=e._ownerWritableStream;const s=new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);WritableStreamDefaultWriterEnsureReadyPromiseRejected(e,s);WritableStreamDefaultWriterEnsureClosedPromiseRejected(e,s);t._writer=undefined;e._ownerWritableStream=undefined}function WritableStreamDefaultWriterWrite(e,t){const s=e._ownerWritableStream;const n=s._writableStreamController;const i=WritableStreamDefaultControllerGetChunkSize(n,t);if(s!==e._ownerWritableStream){return promiseRejectedWith(defaultWriterLockException("write to"))}const r=s._state;if(r==="errored"){return promiseRejectedWith(s._storedError)}if(WritableStreamCloseQueuedOrInFlight(s)||r==="closed"){return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"))}if(r==="erroring"){return promiseRejectedWith(s._storedError)}const o=WritableStreamAddWriteRequest(s);WritableStreamDefaultControllerWrite(n,t,i);return o}const x={};class WritableStreamDefaultController{constructor(){throw new TypeError("Illegal constructor")}get abortReason(){if(!IsWritableStreamDefaultController(this)){throw defaultControllerBrandCheckException$2("abortReason")}return this._abortReason}get signal(){if(!IsWritableStreamDefaultController(this)){throw defaultControllerBrandCheckException$2("signal")}if(this._abortController===undefined){throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported")}return this._abortController.signal}error(e=undefined){if(!IsWritableStreamDefaultController(this)){throw defaultControllerBrandCheckException$2("error")}const t=this._controlledWritableStream._state;if(t!=="writable"){return}WritableStreamDefaultControllerError(this,e)}[u](e){const t=this._abortAlgorithm(e);WritableStreamDefaultControllerClearAlgorithms(this);return t}[d](){ResetQueue(this)}}Object.defineProperties(WritableStreamDefaultController.prototype,{error:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(WritableStreamDefaultController.prototype,t.toStringTag,{value:"WritableStreamDefaultController",configurable:true})}function IsWritableStreamDefaultController(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_controlledWritableStream")){return false}return e instanceof WritableStreamDefaultController}function SetUpWritableStreamDefaultController(e,t,s,n,i,r,o,a){t._controlledWritableStream=e;e._writableStreamController=t;t._queue=undefined;t._queueTotalSize=undefined;ResetQueue(t);t._abortReason=undefined;t._abortController=createAbortController();t._started=false;t._strategySizeAlgorithm=a;t._strategyHWM=o;t._writeAlgorithm=n;t._closeAlgorithm=i;t._abortAlgorithm=r;const l=WritableStreamDefaultControllerGetBackpressure(t);WritableStreamUpdateBackpressure(e,l);const c=s();const u=promiseResolvedWith(c);uponPromise(u,(()=>{t._started=true;WritableStreamDefaultControllerAdvanceQueueIfNeeded(t)}),(s=>{t._started=true;WritableStreamDealWithRejection(e,s)}))}function SetUpWritableStreamDefaultControllerFromUnderlyingSink(e,t,s,n){const i=Object.create(WritableStreamDefaultController.prototype);let startAlgorithm=()=>undefined;let writeAlgorithm=()=>promiseResolvedWith(undefined);let closeAlgorithm=()=>promiseResolvedWith(undefined);let abortAlgorithm=()=>promiseResolvedWith(undefined);if(t.start!==undefined){startAlgorithm=()=>t.start(i)}if(t.write!==undefined){writeAlgorithm=e=>t.write(e,i)}if(t.close!==undefined){closeAlgorithm=()=>t.close()}if(t.abort!==undefined){abortAlgorithm=e=>t.abort(e)}SetUpWritableStreamDefaultController(e,i,startAlgorithm,writeAlgorithm,closeAlgorithm,abortAlgorithm,s,n)}function WritableStreamDefaultControllerClearAlgorithms(e){e._writeAlgorithm=undefined;e._closeAlgorithm=undefined;e._abortAlgorithm=undefined;e._strategySizeAlgorithm=undefined}function WritableStreamDefaultControllerClose(e){EnqueueValueWithSize(e,x,0);WritableStreamDefaultControllerAdvanceQueueIfNeeded(e)}function WritableStreamDefaultControllerGetChunkSize(e,t){try{return e._strategySizeAlgorithm(t)}catch(t){WritableStreamDefaultControllerErrorIfNeeded(e,t);return 1}}function WritableStreamDefaultControllerGetDesiredSize(e){return e._strategyHWM-e._queueTotalSize}function WritableStreamDefaultControllerWrite(e,t,s){try{EnqueueValueWithSize(e,t,s)}catch(t){WritableStreamDefaultControllerErrorIfNeeded(e,t);return}const n=e._controlledWritableStream;if(!WritableStreamCloseQueuedOrInFlight(n)&&n._state==="writable"){const t=WritableStreamDefaultControllerGetBackpressure(e);WritableStreamUpdateBackpressure(n,t)}WritableStreamDefaultControllerAdvanceQueueIfNeeded(e)}function WritableStreamDefaultControllerAdvanceQueueIfNeeded(e){const t=e._controlledWritableStream;if(!e._started){return}if(t._inFlightWriteRequest!==undefined){return}const s=t._state;if(s==="erroring"){WritableStreamFinishErroring(t);return}if(e._queue.length===0){return}const n=PeekQueueValue(e);if(n===x){WritableStreamDefaultControllerProcessClose(e)}else{WritableStreamDefaultControllerProcessWrite(e,n)}}function WritableStreamDefaultControllerErrorIfNeeded(e,t){if(e._controlledWritableStream._state==="writable"){WritableStreamDefaultControllerError(e,t)}}function WritableStreamDefaultControllerProcessClose(e){const t=e._controlledWritableStream;WritableStreamMarkCloseRequestInFlight(t);DequeueValue(e);const s=e._closeAlgorithm();WritableStreamDefaultControllerClearAlgorithms(e);uponPromise(s,(()=>{WritableStreamFinishInFlightClose(t)}),(e=>{WritableStreamFinishInFlightCloseWithError(t,e)}))}function WritableStreamDefaultControllerProcessWrite(e,t){const s=e._controlledWritableStream;WritableStreamMarkFirstWriteRequestInFlight(s);const n=e._writeAlgorithm(t);uponPromise(n,(()=>{WritableStreamFinishInFlightWrite(s);const t=s._state;DequeueValue(e);if(!WritableStreamCloseQueuedOrInFlight(s)&&t==="writable"){const t=WritableStreamDefaultControllerGetBackpressure(e);WritableStreamUpdateBackpressure(s,t)}WritableStreamDefaultControllerAdvanceQueueIfNeeded(e)}),(t=>{if(s._state==="writable"){WritableStreamDefaultControllerClearAlgorithms(e)}WritableStreamFinishInFlightWriteWithError(s,t)}))}function WritableStreamDefaultControllerGetBackpressure(e){const t=WritableStreamDefaultControllerGetDesiredSize(e);return t<=0}function WritableStreamDefaultControllerError(e,t){const s=e._controlledWritableStream;WritableStreamDefaultControllerClearAlgorithms(e);WritableStreamStartErroring(s,t)}function streamBrandCheckException$2(e){return new TypeError(`WritableStream.prototype.${e} can only be used on a WritableStream`)}function defaultControllerBrandCheckException$2(e){return new TypeError(`WritableStreamDefaultController.prototype.${e} can only be used on a WritableStreamDefaultController`)}function defaultWriterBrandCheckException(e){return new TypeError(`WritableStreamDefaultWriter.prototype.${e} can only be used on a WritableStreamDefaultWriter`)}function defaultWriterLockException(e){return new TypeError("Cannot "+e+" a stream using a released writer")}function defaultWriterClosedPromiseInitialize(e){e._closedPromise=newPromise(((t,s)=>{e._closedPromise_resolve=t;e._closedPromise_reject=s;e._closedPromiseState="pending"}))}function defaultWriterClosedPromiseInitializeAsRejected(e,t){defaultWriterClosedPromiseInitialize(e);defaultWriterClosedPromiseReject(e,t)}function defaultWriterClosedPromiseInitializeAsResolved(e){defaultWriterClosedPromiseInitialize(e);defaultWriterClosedPromiseResolve(e)}function defaultWriterClosedPromiseReject(e,t){if(e._closedPromise_reject===undefined){return}setPromiseIsHandledToTrue(e._closedPromise);e._closedPromise_reject(t);e._closedPromise_resolve=undefined;e._closedPromise_reject=undefined;e._closedPromiseState="rejected"}function defaultWriterClosedPromiseResetToRejected(e,t){defaultWriterClosedPromiseInitializeAsRejected(e,t)}function defaultWriterClosedPromiseResolve(e){if(e._closedPromise_resolve===undefined){return}e._closedPromise_resolve(undefined);e._closedPromise_resolve=undefined;e._closedPromise_reject=undefined;e._closedPromiseState="resolved"}function defaultWriterReadyPromiseInitialize(e){e._readyPromise=newPromise(((t,s)=>{e._readyPromise_resolve=t;e._readyPromise_reject=s}));e._readyPromiseState="pending"}function defaultWriterReadyPromiseInitializeAsRejected(e,t){defaultWriterReadyPromiseInitialize(e);defaultWriterReadyPromiseReject(e,t)}function defaultWriterReadyPromiseInitializeAsResolved(e){defaultWriterReadyPromiseInitialize(e);defaultWriterReadyPromiseResolve(e)}function defaultWriterReadyPromiseReject(e,t){if(e._readyPromise_reject===undefined){return}setPromiseIsHandledToTrue(e._readyPromise);e._readyPromise_reject(t);e._readyPromise_resolve=undefined;e._readyPromise_reject=undefined;e._readyPromiseState="rejected"}function defaultWriterReadyPromiseReset(e){defaultWriterReadyPromiseInitialize(e)}function defaultWriterReadyPromiseResetToRejected(e,t){defaultWriterReadyPromiseInitializeAsRejected(e,t)}function defaultWriterReadyPromiseResolve(e){if(e._readyPromise_resolve===undefined){return}e._readyPromise_resolve(undefined);e._readyPromise_resolve=undefined;e._readyPromise_reject=undefined;e._readyPromiseState="fulfilled"}const k=typeof DOMException!=="undefined"?DOMException:undefined;function isDOMExceptionConstructor(e){if(!(typeof e==="function"||typeof e==="object")){return false}try{new e;return true}catch(e){return false}}function createDOMExceptionPolyfill(){const e=function DOMException(e,t){this.message=e||"";this.name=t||"Error";if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}};e.prototype=Object.create(Error.prototype);Object.defineProperty(e.prototype,"constructor",{value:e,writable:true,configurable:true});return e}const E=isDOMExceptionConstructor(k)?k:createDOMExceptionPolyfill();function ReadableStreamPipeTo(e,t,s,n,i,r){const o=AcquireReadableStreamDefaultReader(e);const a=AcquireWritableStreamDefaultWriter(t);e._disturbed=true;let l=false;let c=promiseResolvedWith(undefined);return newPromise(((u,d)=>{let p;if(r!==undefined){p=()=>{const s=new E("Aborted","AbortError");const r=[];if(!n){r.push((()=>{if(t._state==="writable"){return WritableStreamAbort(t,s)}return promiseResolvedWith(undefined)}))}if(!i){r.push((()=>{if(e._state==="readable"){return ReadableStreamCancel(e,s)}return promiseResolvedWith(undefined)}))}shutdownWithAction((()=>Promise.all(r.map((e=>e())))),true,s)};if(r.aborted){p();return}r.addEventListener("abort",p)}function pipeLoop(){return newPromise(((e,t)=>{function next(s){if(s){e()}else{PerformPromiseThen(pipeStep(),next,t)}}next(false)}))}function pipeStep(){if(l){return promiseResolvedWith(true)}return PerformPromiseThen(a._readyPromise,(()=>newPromise(((e,t)=>{ReadableStreamDefaultReaderRead(o,{_chunkSteps:t=>{c=PerformPromiseThen(WritableStreamDefaultWriterWrite(a,t),undefined,noop);e(false)},_closeSteps:()=>e(true),_errorSteps:t})}))))}isOrBecomesErrored(e,o._closedPromise,(e=>{if(!n){shutdownWithAction((()=>WritableStreamAbort(t,e)),true,e)}else{shutdown(true,e)}}));isOrBecomesErrored(t,a._closedPromise,(t=>{if(!i){shutdownWithAction((()=>ReadableStreamCancel(e,t)),true,t)}else{shutdown(true,t)}}));isOrBecomesClosed(e,o._closedPromise,(()=>{if(!s){shutdownWithAction((()=>WritableStreamDefaultWriterCloseWithErrorPropagation(a)))}else{shutdown()}}));if(WritableStreamCloseQueuedOrInFlight(t)||t._state==="closed"){const t=new TypeError("the destination writable stream closed before all data could be piped to it");if(!i){shutdownWithAction((()=>ReadableStreamCancel(e,t)),true,t)}else{shutdown(true,t)}}setPromiseIsHandledToTrue(pipeLoop());function waitForWritesToFinish(){const e=c;return PerformPromiseThen(c,(()=>e!==c?waitForWritesToFinish():undefined))}function isOrBecomesErrored(e,t,s){if(e._state==="errored"){s(e._storedError)}else{uponRejection(t,s)}}function isOrBecomesClosed(e,t,s){if(e._state==="closed"){s()}else{uponFulfillment(t,s)}}function shutdownWithAction(e,s,n){if(l){return}l=true;if(t._state==="writable"&&!WritableStreamCloseQueuedOrInFlight(t)){uponFulfillment(waitForWritesToFinish(),doTheRest)}else{doTheRest()}function doTheRest(){uponPromise(e(),(()=>finalize(s,n)),(e=>finalize(true,e)))}}function shutdown(e,s){if(l){return}l=true;if(t._state==="writable"&&!WritableStreamCloseQueuedOrInFlight(t)){uponFulfillment(waitForWritesToFinish(),(()=>finalize(e,s)))}else{finalize(e,s)}}function finalize(e,t){WritableStreamDefaultWriterRelease(a);ReadableStreamReaderGenericRelease(o);if(r!==undefined){r.removeEventListener("abort",p)}if(e){d(t)}else{u(undefined)}}}))}class ReadableStreamDefaultController{constructor(){throw new TypeError("Illegal constructor")}get desiredSize(){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("desiredSize")}return ReadableStreamDefaultControllerGetDesiredSize(this)}close(){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("close")}if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)){throw new TypeError("The stream is not in a state that permits close")}ReadableStreamDefaultControllerClose(this)}enqueue(e=undefined){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("enqueue")}if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)){throw new TypeError("The stream is not in a state that permits enqueue")}return ReadableStreamDefaultControllerEnqueue(this,e)}error(e=undefined){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("error")}ReadableStreamDefaultControllerError(this,e)}[p](e){ResetQueue(this);const t=this._cancelAlgorithm(e);ReadableStreamDefaultControllerClearAlgorithms(this);return t}[_](e){const t=this._controlledReadableStream;if(this._queue.length>0){const s=DequeueValue(this);if(this._closeRequested&&this._queue.length===0){ReadableStreamDefaultControllerClearAlgorithms(this);ReadableStreamClose(t)}else{ReadableStreamDefaultControllerCallPullIfNeeded(this)}e._chunkSteps(s)}else{ReadableStreamAddReadRequest(t,e);ReadableStreamDefaultControllerCallPullIfNeeded(this)}}}Object.defineProperties(ReadableStreamDefaultController.prototype,{close:{enumerable:true},enqueue:{enumerable:true},error:{enumerable:true},desiredSize:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ReadableStreamDefaultController.prototype,t.toStringTag,{value:"ReadableStreamDefaultController",configurable:true})}function IsReadableStreamDefaultController(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_controlledReadableStream")){return false}return e instanceof ReadableStreamDefaultController}function ReadableStreamDefaultControllerCallPullIfNeeded(e){const t=ReadableStreamDefaultControllerShouldCallPull(e);if(!t){return}if(e._pulling){e._pullAgain=true;return}e._pulling=true;const s=e._pullAlgorithm();uponPromise(s,(()=>{e._pulling=false;if(e._pullAgain){e._pullAgain=false;ReadableStreamDefaultControllerCallPullIfNeeded(e)}}),(t=>{ReadableStreamDefaultControllerError(e,t)}))}function ReadableStreamDefaultControllerShouldCallPull(e){const t=e._controlledReadableStream;if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(e)){return false}if(!e._started){return false}if(IsReadableStreamLocked(t)&&ReadableStreamGetNumReadRequests(t)>0){return true}const s=ReadableStreamDefaultControllerGetDesiredSize(e);if(s>0){return true}return false}function ReadableStreamDefaultControllerClearAlgorithms(e){e._pullAlgorithm=undefined;e._cancelAlgorithm=undefined;e._strategySizeAlgorithm=undefined}function ReadableStreamDefaultControllerClose(e){if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(e)){return}const t=e._controlledReadableStream;e._closeRequested=true;if(e._queue.length===0){ReadableStreamDefaultControllerClearAlgorithms(e);ReadableStreamClose(t)}}function ReadableStreamDefaultControllerEnqueue(e,t){if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(e)){return}const s=e._controlledReadableStream;if(IsReadableStreamLocked(s)&&ReadableStreamGetNumReadRequests(s)>0){ReadableStreamFulfillReadRequest(s,t,false)}else{let s;try{s=e._strategySizeAlgorithm(t)}catch(t){ReadableStreamDefaultControllerError(e,t);throw t}try{EnqueueValueWithSize(e,t,s)}catch(t){ReadableStreamDefaultControllerError(e,t);throw t}}ReadableStreamDefaultControllerCallPullIfNeeded(e)}function ReadableStreamDefaultControllerError(e,t){const s=e._controlledReadableStream;if(s._state!=="readable"){return}ResetQueue(e);ReadableStreamDefaultControllerClearAlgorithms(e);ReadableStreamError(s,t)}function ReadableStreamDefaultControllerGetDesiredSize(e){const t=e._controlledReadableStream._state;if(t==="errored"){return null}if(t==="closed"){return 0}return e._strategyHWM-e._queueTotalSize}function ReadableStreamDefaultControllerHasBackpressure(e){if(ReadableStreamDefaultControllerShouldCallPull(e)){return false}return true}function ReadableStreamDefaultControllerCanCloseOrEnqueue(e){const t=e._controlledReadableStream._state;if(!e._closeRequested&&t==="readable"){return true}return false}function SetUpReadableStreamDefaultController(e,t,s,n,i,r,o){t._controlledReadableStream=e;t._queue=undefined;t._queueTotalSize=undefined;ResetQueue(t);t._started=false;t._closeRequested=false;t._pullAgain=false;t._pulling=false;t._strategySizeAlgorithm=o;t._strategyHWM=r;t._pullAlgorithm=n;t._cancelAlgorithm=i;e._readableStreamController=t;const a=s();uponPromise(promiseResolvedWith(a),(()=>{t._started=true;ReadableStreamDefaultControllerCallPullIfNeeded(t)}),(e=>{ReadableStreamDefaultControllerError(t,e)}))}function SetUpReadableStreamDefaultControllerFromUnderlyingSource(e,t,s,n){const i=Object.create(ReadableStreamDefaultController.prototype);let startAlgorithm=()=>undefined;let pullAlgorithm=()=>promiseResolvedWith(undefined);let cancelAlgorithm=()=>promiseResolvedWith(undefined);if(t.start!==undefined){startAlgorithm=()=>t.start(i)}if(t.pull!==undefined){pullAlgorithm=()=>t.pull(i)}if(t.cancel!==undefined){cancelAlgorithm=e=>t.cancel(e)}SetUpReadableStreamDefaultController(e,i,startAlgorithm,pullAlgorithm,cancelAlgorithm,s,n)}function defaultControllerBrandCheckException$1(e){return new TypeError(`ReadableStreamDefaultController.prototype.${e} can only be used on a ReadableStreamDefaultController`)}function ReadableStreamTee(e,t){if(IsReadableByteStreamController(e._readableStreamController)){return ReadableByteStreamTee(e)}return ReadableStreamDefaultTee(e)}function ReadableStreamDefaultTee(e,t){const s=AcquireReadableStreamDefaultReader(e);let n=false;let i=false;let r=false;let o;let a;let c;let u;let d;const p=newPromise((e=>{d=e}));function pullAlgorithm(){if(n){return promiseResolvedWith(undefined)}n=true;const e={_chunkSteps:e=>{l((()=>{n=false;const t=e;const s=e;if(!i){ReadableStreamDefaultControllerEnqueue(c._readableStreamController,t)}if(!r){ReadableStreamDefaultControllerEnqueue(u._readableStreamController,s)}}))},_closeSteps:()=>{n=false;if(!i){ReadableStreamDefaultControllerClose(c._readableStreamController)}if(!r){ReadableStreamDefaultControllerClose(u._readableStreamController)}if(!i||!r){d(undefined)}},_errorSteps:()=>{n=false}};ReadableStreamDefaultReaderRead(s,e);return promiseResolvedWith(undefined)}function cancel1Algorithm(t){i=true;o=t;if(r){const t=CreateArrayFromList([o,a]);const s=ReadableStreamCancel(e,t);d(s)}return p}function cancel2Algorithm(t){r=true;a=t;if(i){const t=CreateArrayFromList([o,a]);const s=ReadableStreamCancel(e,t);d(s)}return p}function startAlgorithm(){}c=CreateReadableStream(startAlgorithm,pullAlgorithm,cancel1Algorithm);u=CreateReadableStream(startAlgorithm,pullAlgorithm,cancel2Algorithm);uponRejection(s._closedPromise,(e=>{ReadableStreamDefaultControllerError(c._readableStreamController,e);ReadableStreamDefaultControllerError(u._readableStreamController,e);if(!i||!r){d(undefined)}}));return[c,u]}function ReadableByteStreamTee(e){let t=AcquireReadableStreamDefaultReader(e);let s=false;let n=false;let i=false;let r;let o;let a;let c;let u;const d=newPromise((e=>{u=e}));function forwardReaderError(e){uponRejection(e._closedPromise,(s=>{if(e!==t){return}ReadableByteStreamControllerError(a._readableStreamController,s);ReadableByteStreamControllerError(c._readableStreamController,s);if(!n||!i){u(undefined)}}))}function pullWithDefaultReader(){if(IsReadableStreamBYOBReader(t)){ReadableStreamReaderGenericRelease(t);t=AcquireReadableStreamDefaultReader(e);forwardReaderError(t)}const r={_chunkSteps:t=>{l((()=>{s=false;const r=t;let o=t;if(!n&&!i){try{o=CloneAsUint8Array(t)}catch(t){ReadableByteStreamControllerError(a._readableStreamController,t);ReadableByteStreamControllerError(c._readableStreamController,t);u(ReadableStreamCancel(e,t));return}}if(!n){ReadableByteStreamControllerEnqueue(a._readableStreamController,r)}if(!i){ReadableByteStreamControllerEnqueue(c._readableStreamController,o)}}))},_closeSteps:()=>{s=false;if(!n){ReadableByteStreamControllerClose(a._readableStreamController)}if(!i){ReadableByteStreamControllerClose(c._readableStreamController)}if(a._readableStreamController._pendingPullIntos.length>0){ReadableByteStreamControllerRespond(a._readableStreamController,0)}if(c._readableStreamController._pendingPullIntos.length>0){ReadableByteStreamControllerRespond(c._readableStreamController,0)}if(!n||!i){u(undefined)}},_errorSteps:()=>{s=false}};ReadableStreamDefaultReaderRead(t,r)}function pullWithBYOBReader(r,o){if(IsReadableStreamDefaultReader(t)){ReadableStreamReaderGenericRelease(t);t=AcquireReadableStreamBYOBReader(e);forwardReaderError(t)}const d=o?c:a;const p=o?a:c;const _={_chunkSteps:t=>{l((()=>{s=false;const r=o?i:n;const a=o?n:i;if(!a){let s;try{s=CloneAsUint8Array(t)}catch(t){ReadableByteStreamControllerError(d._readableStreamController,t);ReadableByteStreamControllerError(p._readableStreamController,t);u(ReadableStreamCancel(e,t));return}if(!r){ReadableByteStreamControllerRespondWithNewView(d._readableStreamController,t)}ReadableByteStreamControllerEnqueue(p._readableStreamController,s)}else if(!r){ReadableByteStreamControllerRespondWithNewView(d._readableStreamController,t)}}))},_closeSteps:e=>{s=false;const t=o?i:n;const r=o?n:i;if(!t){ReadableByteStreamControllerClose(d._readableStreamController)}if(!r){ReadableByteStreamControllerClose(p._readableStreamController)}if(e!==undefined){if(!t){ReadableByteStreamControllerRespondWithNewView(d._readableStreamController,e)}if(!r&&p._readableStreamController._pendingPullIntos.length>0){ReadableByteStreamControllerRespond(p._readableStreamController,0)}}if(!t||!r){u(undefined)}},_errorSteps:()=>{s=false}};ReadableStreamBYOBReaderRead(t,r,_)}function pull1Algorithm(){if(s){return promiseResolvedWith(undefined)}s=true;const e=ReadableByteStreamControllerGetBYOBRequest(a._readableStreamController);if(e===null){pullWithDefaultReader()}else{pullWithBYOBReader(e._view,false)}return promiseResolvedWith(undefined)}function pull2Algorithm(){if(s){return promiseResolvedWith(undefined)}s=true;const e=ReadableByteStreamControllerGetBYOBRequest(c._readableStreamController);if(e===null){pullWithDefaultReader()}else{pullWithBYOBReader(e._view,true)}return promiseResolvedWith(undefined)}function cancel1Algorithm(t){n=true;r=t;if(i){const t=CreateArrayFromList([r,o]);const s=ReadableStreamCancel(e,t);u(s)}return d}function cancel2Algorithm(t){i=true;o=t;if(n){const t=CreateArrayFromList([r,o]);const s=ReadableStreamCancel(e,t);u(s)}return d}function startAlgorithm(){return}a=CreateReadableByteStream(startAlgorithm,pull1Algorithm,cancel1Algorithm);c=CreateReadableByteStream(startAlgorithm,pull2Algorithm,cancel2Algorithm);forwardReaderError(t);return[a,c]}function convertUnderlyingDefaultOrByteSource(e,t){assertDictionary(e,t);const s=e;const n=s===null||s===void 0?void 0:s.autoAllocateChunkSize;const i=s===null||s===void 0?void 0:s.cancel;const r=s===null||s===void 0?void 0:s.pull;const o=s===null||s===void 0?void 0:s.start;const a=s===null||s===void 0?void 0:s.type;return{autoAllocateChunkSize:n===undefined?undefined:convertUnsignedLongLongWithEnforceRange(n,`${t} has member 'autoAllocateChunkSize' that`),cancel:i===undefined?undefined:convertUnderlyingSourceCancelCallback(i,s,`${t} has member 'cancel' that`),pull:r===undefined?undefined:convertUnderlyingSourcePullCallback(r,s,`${t} has member 'pull' that`),start:o===undefined?undefined:convertUnderlyingSourceStartCallback(o,s,`${t} has member 'start' that`),type:a===undefined?undefined:convertReadableStreamType(a,`${t} has member 'type' that`)}}function convertUnderlyingSourceCancelCallback(e,t,s){assertFunction(e,s);return s=>promiseCall(e,t,[s])}function convertUnderlyingSourcePullCallback(e,t,s){assertFunction(e,s);return s=>promiseCall(e,t,[s])}function convertUnderlyingSourceStartCallback(e,t,s){assertFunction(e,s);return s=>reflectCall(e,t,[s])}function convertReadableStreamType(e,t){e=`${e}`;if(e!=="bytes"){throw new TypeError(`${t} '${e}' is not a valid enumeration value for ReadableStreamType`)}return e}function convertReaderOptions(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.mode;return{mode:s===undefined?undefined:convertReadableStreamReaderMode(s,`${t} has member 'mode' that`)}}function convertReadableStreamReaderMode(e,t){e=`${e}`;if(e!=="byob"){throw new TypeError(`${t} '${e}' is not a valid enumeration value for ReadableStreamReaderMode`)}return e}function convertIteratorOptions(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.preventCancel;return{preventCancel:Boolean(s)}}function convertPipeOptions(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.preventAbort;const n=e===null||e===void 0?void 0:e.preventCancel;const i=e===null||e===void 0?void 0:e.preventClose;const r=e===null||e===void 0?void 0:e.signal;if(r!==undefined){assertAbortSignal(r,`${t} has member 'signal' that`)}return{preventAbort:Boolean(s),preventCancel:Boolean(n),preventClose:Boolean(i),signal:r}}function assertAbortSignal(e,t){if(!isAbortSignal(e)){throw new TypeError(`${t} is not an AbortSignal.`)}}function convertReadableWritablePair(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.readable;assertRequiredField(s,"readable","ReadableWritablePair");assertReadableStream(s,`${t} has member 'readable' that`);const n=e===null||e===void 0?void 0:e.writable;assertRequiredField(n,"writable","ReadableWritablePair");assertWritableStream(n,`${t} has member 'writable' that`);return{readable:s,writable:n}}class ReadableStream{constructor(e={},t={}){if(e===undefined){e=null}else{assertObject(e,"First parameter")}const s=convertQueuingStrategy(t,"Second parameter");const n=convertUnderlyingDefaultOrByteSource(e,"First parameter");InitializeReadableStream(this);if(n.type==="bytes"){if(s.size!==undefined){throw new RangeError("The strategy for a byte stream cannot have a size function")}const e=ExtractHighWaterMark(s,0);SetUpReadableByteStreamControllerFromUnderlyingSource(this,n,e)}else{const e=ExtractSizeAlgorithm(s);const t=ExtractHighWaterMark(s,1);SetUpReadableStreamDefaultControllerFromUnderlyingSource(this,n,t,e)}}get locked(){if(!IsReadableStream(this)){throw streamBrandCheckException$1("locked")}return IsReadableStreamLocked(this)}cancel(e=undefined){if(!IsReadableStream(this)){return promiseRejectedWith(streamBrandCheckException$1("cancel"))}if(IsReadableStreamLocked(this)){return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"))}return ReadableStreamCancel(this,e)}getReader(e=undefined){if(!IsReadableStream(this)){throw streamBrandCheckException$1("getReader")}const t=convertReaderOptions(e,"First parameter");if(t.mode===undefined){return AcquireReadableStreamDefaultReader(this)}return AcquireReadableStreamBYOBReader(this)}pipeThrough(e,t={}){if(!IsReadableStream(this)){throw streamBrandCheckException$1("pipeThrough")}assertRequiredArgument(e,1,"pipeThrough");const s=convertReadableWritablePair(e,"First parameter");const n=convertPipeOptions(t,"Second parameter");if(IsReadableStreamLocked(this)){throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream")}if(IsWritableStreamLocked(s.writable)){throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream")}const i=ReadableStreamPipeTo(this,s.writable,n.preventClose,n.preventAbort,n.preventCancel,n.signal);setPromiseIsHandledToTrue(i);return s.readable}pipeTo(e,t={}){if(!IsReadableStream(this)){return promiseRejectedWith(streamBrandCheckException$1("pipeTo"))}if(e===undefined){return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`)}if(!IsWritableStream(e)){return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`))}let s;try{s=convertPipeOptions(t,"Second parameter")}catch(e){return promiseRejectedWith(e)}if(IsReadableStreamLocked(this)){return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"))}if(IsWritableStreamLocked(e)){return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"))}return ReadableStreamPipeTo(this,e,s.preventClose,s.preventAbort,s.preventCancel,s.signal)}tee(){if(!IsReadableStream(this)){throw streamBrandCheckException$1("tee")}const e=ReadableStreamTee(this);return CreateArrayFromList(e)}values(e=undefined){if(!IsReadableStream(this)){throw streamBrandCheckException$1("values")}const t=convertIteratorOptions(e,"First parameter");return AcquireReadableStreamAsyncIterator(this,t.preventCancel)}}Object.defineProperties(ReadableStream.prototype,{cancel:{enumerable:true},getReader:{enumerable:true},pipeThrough:{enumerable:true},pipeTo:{enumerable:true},tee:{enumerable:true},values:{enumerable:true},locked:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ReadableStream.prototype,t.toStringTag,{value:"ReadableStream",configurable:true})}if(typeof t.asyncIterator==="symbol"){Object.defineProperty(ReadableStream.prototype,t.asyncIterator,{value:ReadableStream.prototype.values,writable:true,configurable:true})}function CreateReadableStream(e,t,s,n=1,i=(()=>1)){const r=Object.create(ReadableStream.prototype);InitializeReadableStream(r);const o=Object.create(ReadableStreamDefaultController.prototype);SetUpReadableStreamDefaultController(r,o,e,t,s,n,i);return r}function CreateReadableByteStream(e,t,s){const n=Object.create(ReadableStream.prototype);InitializeReadableStream(n);const i=Object.create(ReadableByteStreamController.prototype);SetUpReadableByteStreamController(n,i,e,t,s,0,undefined);return n}function InitializeReadableStream(e){e._state="readable";e._reader=undefined;e._storedError=undefined;e._disturbed=false}function IsReadableStream(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_readableStreamController")){return false}return e instanceof ReadableStream}function IsReadableStreamLocked(e){if(e._reader===undefined){return false}return true}function ReadableStreamCancel(e,t){e._disturbed=true;if(e._state==="closed"){return promiseResolvedWith(undefined)}if(e._state==="errored"){return promiseRejectedWith(e._storedError)}ReadableStreamClose(e);const s=e._reader;if(s!==undefined&&IsReadableStreamBYOBReader(s)){s._readIntoRequests.forEach((e=>{e._closeSteps(undefined)}));s._readIntoRequests=new SimpleQueue}const n=e._readableStreamController[p](t);return transformPromiseWith(n,noop)}function ReadableStreamClose(e){e._state="closed";const t=e._reader;if(t===undefined){return}defaultReaderClosedPromiseResolve(t);if(IsReadableStreamDefaultReader(t)){t._readRequests.forEach((e=>{e._closeSteps()}));t._readRequests=new SimpleQueue}}function ReadableStreamError(e,t){e._state="errored";e._storedError=t;const s=e._reader;if(s===undefined){return}defaultReaderClosedPromiseReject(s,t);if(IsReadableStreamDefaultReader(s)){s._readRequests.forEach((e=>{e._errorSteps(t)}));s._readRequests=new SimpleQueue}else{s._readIntoRequests.forEach((e=>{e._errorSteps(t)}));s._readIntoRequests=new SimpleQueue}}function streamBrandCheckException$1(e){return new TypeError(`ReadableStream.prototype.${e} can only be used on a ReadableStream`)}function convertQueuingStrategyInit(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.highWaterMark;assertRequiredField(s,"highWaterMark","QueuingStrategyInit");return{highWaterMark:convertUnrestrictedDouble(s)}}const byteLengthSizeFunction=e=>e.byteLength;Object.defineProperty(byteLengthSizeFunction,"name",{value:"size",configurable:true});class ByteLengthQueuingStrategy{constructor(e){assertRequiredArgument(e,1,"ByteLengthQueuingStrategy");e=convertQueuingStrategyInit(e,"First parameter");this._byteLengthQueuingStrategyHighWaterMark=e.highWaterMark}get highWaterMark(){if(!IsByteLengthQueuingStrategy(this)){throw byteLengthBrandCheckException("highWaterMark")}return this._byteLengthQueuingStrategyHighWaterMark}get size(){if(!IsByteLengthQueuingStrategy(this)){throw byteLengthBrandCheckException("size")}return byteLengthSizeFunction}}Object.defineProperties(ByteLengthQueuingStrategy.prototype,{highWaterMark:{enumerable:true},size:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(ByteLengthQueuingStrategy.prototype,t.toStringTag,{value:"ByteLengthQueuingStrategy",configurable:true})}function byteLengthBrandCheckException(e){return new TypeError(`ByteLengthQueuingStrategy.prototype.${e} can only be used on a ByteLengthQueuingStrategy`)}function IsByteLengthQueuingStrategy(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_byteLengthQueuingStrategyHighWaterMark")){return false}return e instanceof ByteLengthQueuingStrategy}const countSizeFunction=()=>1;Object.defineProperty(countSizeFunction,"name",{value:"size",configurable:true});class CountQueuingStrategy{constructor(e){assertRequiredArgument(e,1,"CountQueuingStrategy");e=convertQueuingStrategyInit(e,"First parameter");this._countQueuingStrategyHighWaterMark=e.highWaterMark}get highWaterMark(){if(!IsCountQueuingStrategy(this)){throw countBrandCheckException("highWaterMark")}return this._countQueuingStrategyHighWaterMark}get size(){if(!IsCountQueuingStrategy(this)){throw countBrandCheckException("size")}return countSizeFunction}}Object.defineProperties(CountQueuingStrategy.prototype,{highWaterMark:{enumerable:true},size:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(CountQueuingStrategy.prototype,t.toStringTag,{value:"CountQueuingStrategy",configurable:true})}function countBrandCheckException(e){return new TypeError(`CountQueuingStrategy.prototype.${e} can only be used on a CountQueuingStrategy`)}function IsCountQueuingStrategy(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_countQueuingStrategyHighWaterMark")){return false}return e instanceof CountQueuingStrategy}function convertTransformer(e,t){assertDictionary(e,t);const s=e===null||e===void 0?void 0:e.flush;const n=e===null||e===void 0?void 0:e.readableType;const i=e===null||e===void 0?void 0:e.start;const r=e===null||e===void 0?void 0:e.transform;const o=e===null||e===void 0?void 0:e.writableType;return{flush:s===undefined?undefined:convertTransformerFlushCallback(s,e,`${t} has member 'flush' that`),readableType:n,start:i===undefined?undefined:convertTransformerStartCallback(i,e,`${t} has member 'start' that`),transform:r===undefined?undefined:convertTransformerTransformCallback(r,e,`${t} has member 'transform' that`),writableType:o}}function convertTransformerFlushCallback(e,t,s){assertFunction(e,s);return s=>promiseCall(e,t,[s])}function convertTransformerStartCallback(e,t,s){assertFunction(e,s);return s=>reflectCall(e,t,[s])}function convertTransformerTransformCallback(e,t,s){assertFunction(e,s);return(s,n)=>promiseCall(e,t,[s,n])}class TransformStream{constructor(e={},t={},s={}){if(e===undefined){e=null}const n=convertQueuingStrategy(t,"Second parameter");const i=convertQueuingStrategy(s,"Third parameter");const r=convertTransformer(e,"First parameter");if(r.readableType!==undefined){throw new RangeError("Invalid readableType specified")}if(r.writableType!==undefined){throw new RangeError("Invalid writableType specified")}const o=ExtractHighWaterMark(i,0);const a=ExtractSizeAlgorithm(i);const l=ExtractHighWaterMark(n,1);const c=ExtractSizeAlgorithm(n);let u;const d=newPromise((e=>{u=e}));InitializeTransformStream(this,d,l,c,o,a);SetUpTransformStreamDefaultControllerFromTransformer(this,r);if(r.start!==undefined){u(r.start(this._transformStreamController))}else{u(undefined)}}get readable(){if(!IsTransformStream(this)){throw streamBrandCheckException("readable")}return this._readable}get writable(){if(!IsTransformStream(this)){throw streamBrandCheckException("writable")}return this._writable}}Object.defineProperties(TransformStream.prototype,{readable:{enumerable:true},writable:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(TransformStream.prototype,t.toStringTag,{value:"TransformStream",configurable:true})}function InitializeTransformStream(e,t,s,n,i,r){function startAlgorithm(){return t}function writeAlgorithm(t){return TransformStreamDefaultSinkWriteAlgorithm(e,t)}function abortAlgorithm(t){return TransformStreamDefaultSinkAbortAlgorithm(e,t)}function closeAlgorithm(){return TransformStreamDefaultSinkCloseAlgorithm(e)}e._writable=CreateWritableStream(startAlgorithm,writeAlgorithm,closeAlgorithm,abortAlgorithm,s,n);function pullAlgorithm(){return TransformStreamDefaultSourcePullAlgorithm(e)}function cancelAlgorithm(t){TransformStreamErrorWritableAndUnblockWrite(e,t);return promiseResolvedWith(undefined)}e._readable=CreateReadableStream(startAlgorithm,pullAlgorithm,cancelAlgorithm,i,r);e._backpressure=undefined;e._backpressureChangePromise=undefined;e._backpressureChangePromise_resolve=undefined;TransformStreamSetBackpressure(e,true);e._transformStreamController=undefined}function IsTransformStream(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_transformStreamController")){return false}return e instanceof TransformStream}function TransformStreamError(e,t){ReadableStreamDefaultControllerError(e._readable._readableStreamController,t);TransformStreamErrorWritableAndUnblockWrite(e,t)}function TransformStreamErrorWritableAndUnblockWrite(e,t){TransformStreamDefaultControllerClearAlgorithms(e._transformStreamController);WritableStreamDefaultControllerErrorIfNeeded(e._writable._writableStreamController,t);if(e._backpressure){TransformStreamSetBackpressure(e,false)}}function TransformStreamSetBackpressure(e,t){if(e._backpressureChangePromise!==undefined){e._backpressureChangePromise_resolve()}e._backpressureChangePromise=newPromise((t=>{e._backpressureChangePromise_resolve=t}));e._backpressure=t}class TransformStreamDefaultController{constructor(){throw new TypeError("Illegal constructor")}get desiredSize(){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("desiredSize")}const e=this._controlledTransformStream._readable._readableStreamController;return ReadableStreamDefaultControllerGetDesiredSize(e)}enqueue(e=undefined){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("enqueue")}TransformStreamDefaultControllerEnqueue(this,e)}error(e=undefined){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("error")}TransformStreamDefaultControllerError(this,e)}terminate(){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("terminate")}TransformStreamDefaultControllerTerminate(this)}}Object.defineProperties(TransformStreamDefaultController.prototype,{enqueue:{enumerable:true},error:{enumerable:true},terminate:{enumerable:true},desiredSize:{enumerable:true}});if(typeof t.toStringTag==="symbol"){Object.defineProperty(TransformStreamDefaultController.prototype,t.toStringTag,{value:"TransformStreamDefaultController",configurable:true})}function IsTransformStreamDefaultController(e){if(!typeIsObject(e)){return false}if(!Object.prototype.hasOwnProperty.call(e,"_controlledTransformStream")){return false}return e instanceof TransformStreamDefaultController}function SetUpTransformStreamDefaultController(e,t,s,n){t._controlledTransformStream=e;e._transformStreamController=t;t._transformAlgorithm=s;t._flushAlgorithm=n}function SetUpTransformStreamDefaultControllerFromTransformer(e,t){const s=Object.create(TransformStreamDefaultController.prototype);let transformAlgorithm=e=>{try{TransformStreamDefaultControllerEnqueue(s,e);return promiseResolvedWith(undefined)}catch(e){return promiseRejectedWith(e)}};let flushAlgorithm=()=>promiseResolvedWith(undefined);if(t.transform!==undefined){transformAlgorithm=e=>t.transform(e,s)}if(t.flush!==undefined){flushAlgorithm=()=>t.flush(s)}SetUpTransformStreamDefaultController(e,s,transformAlgorithm,flushAlgorithm)}function TransformStreamDefaultControllerClearAlgorithms(e){e._transformAlgorithm=undefined;e._flushAlgorithm=undefined}function TransformStreamDefaultControllerEnqueue(e,t){const s=e._controlledTransformStream;const n=s._readable._readableStreamController;if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(n)){throw new TypeError("Readable side is not in a state that permits enqueue")}try{ReadableStreamDefaultControllerEnqueue(n,t)}catch(e){TransformStreamErrorWritableAndUnblockWrite(s,e);throw s._readable._storedError}const i=ReadableStreamDefaultControllerHasBackpressure(n);if(i!==s._backpressure){TransformStreamSetBackpressure(s,true)}}function TransformStreamDefaultControllerError(e,t){TransformStreamError(e._controlledTransformStream,t)}function TransformStreamDefaultControllerPerformTransform(e,t){const s=e._transformAlgorithm(t);return transformPromiseWith(s,undefined,(t=>{TransformStreamError(e._controlledTransformStream,t);throw t}))}function TransformStreamDefaultControllerTerminate(e){const t=e._controlledTransformStream;const s=t._readable._readableStreamController;ReadableStreamDefaultControllerClose(s);const n=new TypeError("TransformStream terminated");TransformStreamErrorWritableAndUnblockWrite(t,n)}function TransformStreamDefaultSinkWriteAlgorithm(e,t){const s=e._transformStreamController;if(e._backpressure){const n=e._backpressureChangePromise;return transformPromiseWith(n,(()=>{const n=e._writable;const i=n._state;if(i==="erroring"){throw n._storedError}return TransformStreamDefaultControllerPerformTransform(s,t)}))}return TransformStreamDefaultControllerPerformTransform(s,t)}function TransformStreamDefaultSinkAbortAlgorithm(e,t){TransformStreamError(e,t);return promiseResolvedWith(undefined)}function TransformStreamDefaultSinkCloseAlgorithm(e){const t=e._readable;const s=e._transformStreamController;const n=s._flushAlgorithm();TransformStreamDefaultControllerClearAlgorithms(s);return transformPromiseWith(n,(()=>{if(t._state==="errored"){throw t._storedError}ReadableStreamDefaultControllerClose(t._readableStreamController)}),(s=>{TransformStreamError(e,s);throw t._storedError}))}function TransformStreamDefaultSourcePullAlgorithm(e){TransformStreamSetBackpressure(e,false);return e._backpressureChangePromise}function defaultControllerBrandCheckException(e){return new TypeError(`TransformStreamDefaultController.prototype.${e} can only be used on a TransformStreamDefaultController`)}function streamBrandCheckException(e){return new TypeError(`TransformStream.prototype.${e} can only be used on a TransformStream`)}e.ByteLengthQueuingStrategy=ByteLengthQueuingStrategy;e.CountQueuingStrategy=CountQueuingStrategy;e.ReadableByteStreamController=ReadableByteStreamController;e.ReadableStream=ReadableStream;e.ReadableStreamBYOBReader=ReadableStreamBYOBReader;e.ReadableStreamBYOBRequest=ReadableStreamBYOBRequest;e.ReadableStreamDefaultController=ReadableStreamDefaultController;e.ReadableStreamDefaultReader=ReadableStreamDefaultReader;e.TransformStream=TransformStream;e.TransformStreamDefaultController=TransformStreamDefaultController;e.WritableStream=WritableStream;e.WritableStreamDefaultController=WritableStreamDefaultController;e.WritableStreamDefaultWriter=WritableStreamDefaultWriter;Object.defineProperty(e,"__esModule",{value:true})}))},2940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach((function(t){wrapper[t]=e[t]}));return wrapper;function wrapper(){var t=new Array(arguments.length);for(var s=0;s<t.length;s++){t[s]=arguments[s]}var n=e.apply(this,t);var i=t[t.length-1];if(typeof n==="function"&&n!==i){Object.keys(i).forEach((function(e){n[e]=i[e]}))}return n}}},2877:module=>{module.exports=eval("require")("encoding")},9081:module=>{module.exports=eval("require")("stream/web")},8010:(e,t,s)=>{const n=65536;if(!globalThis.ReadableStream){try{Object.assign(globalThis,s(9081))}catch(e){Object.assign(globalThis,s(1452))}}try{const{Blob:e}=s(4293);if(e&&!e.prototype.stream){e.prototype.stream=function name(e){let t=0;const s=this;return new ReadableStream({type:"bytes",async pull(e){const i=s.slice(t,Math.min(s.size,t+n));const r=await i.arrayBuffer();t+=r.byteLength;e.enqueue(new Uint8Array(r));if(t===s.size){e.close()}}})}}}catch(e){}},2357:e=>{"use strict";e.exports=require("assert")},4293:e=>{"use strict";e.exports=require("buffer")},8614:e=>{"use strict";e.exports=require("events")},5747:e=>{"use strict";e.exports=require("fs")},8605:e=>{"use strict";e.exports=require("http")},7211:e=>{"use strict";e.exports=require("https")},1631:e=>{"use strict";e.exports=require("net")},2087:e=>{"use strict";e.exports=require("os")},5622:e=>{"use strict";e.exports=require("path")},2413:e=>{"use strict";e.exports=require("stream")},4016:e=>{"use strict";e.exports=require("tls")},3867:e=>{"use strict";e.exports=require("tty")},8835:e=>{"use strict";e.exports=require("url")},1669:e=>{"use strict";e.exports=require("util")},8761:e=>{"use strict";e.exports=require("zlib")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var s=__webpack_module_cache__[e]={exports:{}};var n=true;try{__webpack_modules__[e].call(s.exports,s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete __webpack_module_cache__[e]}return s.exports}(()=>{__nccwpck_require__.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;__nccwpck_require__.d(t,{a:t});return t}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var s in t){if(__nccwpck_require__.o(t,s)&&!__nccwpck_require__.o(e,s)){Object.defineProperty(e,s,{enumerable:true,get:t[s]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{"use strict";__nccwpck_require__.r(__webpack_exports__);var e=__nccwpck_require__(2186);var t=__nccwpck_require__(5438);var s=__nccwpck_require__(5747);var n=__nccwpck_require__.n(s);var i=__nccwpck_require__(6904);var r=__nccwpck_require__(8605);var o=__nccwpck_require__(7211);var a=__nccwpck_require__(8761);var l=__nccwpck_require__(2413);var c=__nccwpck_require__(2371);var u=__nccwpck_require__(1669);var d=__nccwpck_require__(8010);const p=65536;async function*toIterator(e,t=true){for(let s of e){if("stream"in s){yield*s.stream()}else if(ArrayBuffer.isView(s)){if(t){let e=s.byteOffset;let t=s.byteOffset+s.byteLength;while(e!==t){const n=Math.min(t-e,p);const i=s.buffer.slice(e,e+n);e+=i.byteLength;yield new Uint8Array(i)}}else{yield s}}else{let e=0;while(e!==s.size){const t=s.slice(e,Math.min(s.size,e+p));const n=await t.arrayBuffer();e+=n.byteLength;yield new Uint8Array(n)}}}}const _=class Blob{#parts=[];#type="";#size=0;constructor(e=[],t={}){let s=0;const n=e.map((e=>{let t;if(ArrayBuffer.isView(e)){t=new Uint8Array(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength))}else if(e instanceof ArrayBuffer){t=new Uint8Array(e.slice(0))}else if(e instanceof Blob){t=e}else{t=(new TextEncoder).encode(e)}s+=ArrayBuffer.isView(t)?t.byteLength:t.size;return t}));const i=t.type===undefined?"":String(t.type);this.#type=/[^\u0020-\u007E]/.test(i)?"":i;this.#size=s;this.#parts=n}get size(){return this.#size}get type(){return this.#type}async text(){const e=new TextDecoder;let t="";for await(let s of toIterator(this.#parts,false)){t+=e.decode(s,{stream:true})}t+=e.decode();return t}async arrayBuffer(){const e=new Uint8Array(this.size);let t=0;for await(const s of toIterator(this.#parts,false)){e.set(s,t);t+=s.length}return e.buffer}stream(){const e=toIterator(this.#parts,true);return new ReadableStream({type:"bytes",async pull(t){const s=await e.next();s.done?t.close():t.enqueue(s.value)}})}slice(e=0,t=this.size,s=""){const{size:n}=this;let i=e<0?Math.max(n+e,0):Math.min(e,n);let r=t<0?Math.max(n+t,0):Math.min(t,n);const o=Math.max(r-i,0);const a=this.#parts;const l=[];let c=0;for(const e of a){if(c>=o){break}const t=ArrayBuffer.isView(e)?e.byteLength:e.size;if(i&&t<=i){i-=t;r-=t}else{let s;if(ArrayBuffer.isView(e)){s=e.subarray(i,Math.min(t,r));c+=s.byteLength}else{s=e.slice(i,Math.min(t,r));c+=s.size}l.push(s);i=0}}const u=new Blob([],{type:String(s).toLowerCase()});u.#size=o;u.#parts=l;return u}get[Symbol.toStringTag](){return"Blob"}static[Symbol.hasInstance](e){return e&&typeof e==="object"&&typeof e.constructor==="function"&&(typeof e.stream==="function"||typeof e.arrayBuffer==="function")&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}};Object.defineProperties(_.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});const m=_;const b=m;class FetchBaseError extends Error{constructor(e,t){super(e);Error.captureStackTrace(this,this.constructor);this.type=t}get name(){return this.constructor.name}get[Symbol.toStringTag](){return this.constructor.name}}class FetchError extends FetchBaseError{constructor(e,t,s){super(e,t);if(s){this.code=this.errno=s.code;this.erroredSysCall=s.syscall}}}const g=require("crypto");const h=Symbol.toStringTag;const isURLSearchParameters=e=>typeof e==="object"&&typeof e.append==="function"&&typeof e.delete==="function"&&typeof e.get==="function"&&typeof e.getAll==="function"&&typeof e.has==="function"&&typeof e.set==="function"&&typeof e.sort==="function"&&e[h]==="URLSearchParams";const isBlob=e=>typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&/^(Blob|File)$/.test(e[h]);function isFormData(e){return typeof e==="object"&&typeof e.append==="function"&&typeof e.set==="function"&&typeof e.get==="function"&&typeof e.getAll==="function"&&typeof e.delete==="function"&&typeof e.keys==="function"&&typeof e.values==="function"&&typeof e.entries==="function"&&typeof e.constructor==="function"&&e[h]==="FormData"}const isAbortSignal=e=>typeof e==="object"&&(e[h]==="AbortSignal"||e[h]==="EventTarget");const y="\r\n";const w="-".repeat(2);const x=Buffer.byteLength(y);const getFooter=e=>`${w}${e}${w}${y.repeat(2)}`;function getHeader(e,t,s){let n="";n+=`${w}${e}${y}`;n+=`Content-Disposition: form-data; name="${t}"`;if(isBlob(s)){n+=`; filename="${s.name}"${y}`;n+=`Content-Type: ${s.type||"application/octet-stream"}`}return`${n}${y.repeat(2)}`}const getBoundary=()=>(0,g.randomBytes)(8).toString("hex");async function*formDataIterator(e,t){for(const[s,n]of e){yield getHeader(t,s,n);if(isBlob(n)){yield*n.stream()}else{yield n}yield y}yield getFooter(t)}function getFormDataLength(e,t){let s=0;for(const[n,i]of e){s+=Buffer.byteLength(getHeader(t,n,i));s+=isBlob(i)?i.size:Buffer.byteLength(String(i));s+=x}s+=Buffer.byteLength(getFooter(t));return s}const k=Symbol("Body internals");class Body{constructor(e,{size:t=0}={}){let s=null;if(e===null){e=null}else if(isURLSearchParameters(e)){e=Buffer.from(e.toString())}else if(isBlob(e)){}else if(Buffer.isBuffer(e)){}else if(u.types.isAnyArrayBuffer(e)){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof l){}else if(isFormData(e)){s=`NodeFetchFormDataBoundary${getBoundary()}`;e=l.Readable.from(formDataIterator(e,s))}else{e=Buffer.from(String(e))}this[k]={body:e,boundary:s,disturbed:false,error:null};this.size=t;if(e instanceof l){e.on("error",(e=>{const t=e instanceof FetchBaseError?e:new FetchError(`Invalid response body while trying to fetch ${this.url}: ${e.message}`,"system",e);this[k].error=t}))}}get body(){return this[k].body}get bodyUsed(){return this[k].disturbed}async arrayBuffer(){const{buffer:e,byteOffset:t,byteLength:s}=await consumeBody(this);return e.slice(t,t+s)}async blob(){const e=this.headers&&this.headers.get("content-type")||this[k].body&&this[k].body.type||"";const t=await this.buffer();return new b([t],{type:e})}async json(){const e=await consumeBody(this);return JSON.parse(e.toString())}async text(){const e=await consumeBody(this);return e.toString()}buffer(){return consumeBody(this)}}Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});async function consumeBody(e){if(e[k].disturbed){throw new TypeError(`body used already for: ${e.url}`)}e[k].disturbed=true;if(e[k].error){throw e[k].error}let{body:t}=e;if(t===null){return Buffer.alloc(0)}if(isBlob(t)){t=l.Readable.from(t.stream())}if(Buffer.isBuffer(t)){return t}if(!(t instanceof l)){return Buffer.alloc(0)}const s=[];let n=0;try{for await(const i of t){if(e.size>0&&n+i.length>e.size){const s=new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size");t.destroy(s);throw s}n+=i.length;s.push(i)}}catch(t){const s=t instanceof FetchBaseError?t:new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t);throw s}if(t.readableEnded===true||t._readableState.ended===true){try{if(s.every((e=>typeof e==="string"))){return Buffer.from(s.join(""))}return Buffer.concat(s,n)}catch(t){throw new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t)}}else{throw new FetchError(`Premature close of server response while trying to fetch ${e.url}`)}}const clone=(e,t)=>{let s;let n;let{body:i}=e;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(i instanceof l&&typeof i.getBoundary!=="function"){s=new l.PassThrough({highWaterMark:t});n=new l.PassThrough({highWaterMark:t});i.pipe(s);i.pipe(n);e[k].body=s;i=n}return i};const extractContentType=(e,t)=>{if(e===null){return null}if(typeof e==="string"){return"text/plain;charset=UTF-8"}if(isURLSearchParameters(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}if(isBlob(e)){return e.type||null}if(Buffer.isBuffer(e)||u.types.isAnyArrayBuffer(e)||ArrayBuffer.isView(e)){return null}if(e&&typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}if(isFormData(e)){return`multipart/form-data; boundary=${t[k].boundary}`}if(e instanceof l){return null}return"text/plain;charset=UTF-8"};const getTotalBytes=e=>{const{body:t}=e;if(t===null){return 0}if(isBlob(t)){return t.size}if(Buffer.isBuffer(t)){return t.length}if(t&&typeof t.getLengthSync==="function"){return t.hasKnownLength&&t.hasKnownLength()?t.getLengthSync():null}if(isFormData(t)){return getFormDataLength(e[k].boundary)}return null};const writeToStream=(e,{body:t})=>{if(t===null){e.end()}else if(isBlob(t)){l.Readable.from(t.stream()).pipe(e)}else if(Buffer.isBuffer(t)){e.write(t);e.end()}else{t.pipe(e)}};const E=typeof r.validateHeaderName==="function"?r.validateHeaderName:e=>{if(!/^[\^`\-\w!#$%&'*+.|~]+$/.test(e)){const t=new TypeError(`Header name must be a valid HTTP token [${e}]`);Object.defineProperty(t,"code",{value:"ERR_INVALID_HTTP_TOKEN"});throw t}};const C=typeof r.validateHeaderValue==="function"?r.validateHeaderValue:(e,t)=>{if(/[^\t\u0020-\u007E\u0080-\u00FF]/.test(t)){const t=new TypeError(`Invalid character in header content ["${e}"]`);Object.defineProperty(t,"code",{value:"ERR_INVALID_CHAR"});throw t}};class Headers extends URLSearchParams{constructor(e){let t=[];if(e instanceof Headers){const s=e.raw();for(const[e,n]of Object.entries(s)){t.push(...n.map((t=>[e,t])))}}else if(e==null){}else if(typeof e==="object"&&!u.types.isBoxedPrimitive(e)){const s=e[Symbol.iterator];if(s==null){t.push(...Object.entries(e))}else{if(typeof s!=="function"){throw new TypeError("Header pairs must be iterable")}t=[...e].map((e=>{if(typeof e!=="object"||u.types.isBoxedPrimitive(e)){throw new TypeError("Each header pair must be an iterable object")}return[...e]})).map((e=>{if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}return[...e]}))}}else{throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)")}t=t.length>0?t.map((([e,t])=>{E(e);C(e,String(t));return[String(e).toLowerCase(),String(t)]})):undefined;super(t);return new Proxy(this,{get(e,t,s){switch(t){case"append":case"set":return(s,n)=>{E(s);C(s,String(n));return URLSearchParams.prototype[t].call(e,String(s).toLowerCase(),String(n))};case"delete":case"has":case"getAll":return s=>{E(s);return URLSearchParams.prototype[t].call(e,String(s).toLowerCase())};case"keys":return()=>{e.sort();return new Set(URLSearchParams.prototype.keys.call(e)).keys()};default:return Reflect.get(e,t,s)}}})}get[Symbol.toStringTag](){return this.constructor.name}toString(){return Object.prototype.toString.call(this)}get(e){const t=this.getAll(e);if(t.length===0){return null}let s=t.join(", ");if(/^content-encoding$/i.test(e)){s=s.toLowerCase()}return s}forEach(e,t=undefined){for(const s of this.keys()){Reflect.apply(e,t,[this.get(s),s,this])}}*values(){for(const e of this.keys()){yield this.get(e)}}*entries(){for(const e of this.keys()){yield[e,this.get(e)]}}[Symbol.iterator](){return this.entries()}raw(){return[...this.keys()].reduce(((e,t)=>{e[t]=this.getAll(t);return e}),{})}[Symbol.for("nodejs.util.inspect.custom")](){return[...this.keys()].reduce(((e,t)=>{const s=this.getAll(t);if(t==="host"){e[t]=s[0]}else{e[t]=s.length>1?s:s[0]}return e}),{})}}Object.defineProperties(Headers.prototype,["get","entries","forEach","values"].reduce(((e,t)=>{e[t]={enumerable:true};return e}),{}));function fromRawHeaders(e=[]){return new Headers(e.reduce(((e,t,s,n)=>{if(s%2===0){e.push(n.slice(s,s+2))}return e}),[]).filter((([e,t])=>{try{E(e);C(e,String(t));return true}catch{return false}})))}const v=new Set([301,302,303,307,308]);const isRedirect=e=>v.has(e);const D=Symbol("Response internals");class Response extends Body{constructor(e=null,t={}){super(e,t);const s=t.status!=null?t.status:200;const n=new Headers(t.headers);if(e!==null&&!n.has("Content-Type")){const t=extractContentType(e);if(t){n.append("Content-Type",t)}}this[D]={type:"default",url:t.url,status:s,statusText:t.statusText||"",headers:n,counter:t.counter,highWaterMark:t.highWaterMark}}get type(){return this[D].type}get url(){return this[D].url||""}get status(){return this[D].status}get ok(){return this[D].status>=200&&this[D].status<300}get redirected(){return this[D].counter>0}get statusText(){return this[D].statusText}get headers(){return this[D].headers}get highWaterMark(){return this[D].highWaterMark}clone(){return new Response(clone(this,this.highWaterMark),{type:this.type,url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected,size:this.size})}static redirect(e,t=302){if(!isRedirect(t)){throw new RangeError('Failed to execute "redirect" on "response": Invalid status code')}return new Response(null,{headers:{location:new URL(e).toString()},status:t})}static error(){const e=new Response(null,{status:0,statusText:""});e[D].type="error";return e}get[Symbol.toStringTag](){return"Response"}}Object.defineProperties(Response.prototype,{type:{enumerable:true},url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});var S=__nccwpck_require__(8835);const getSearch=e=>{if(e.search){return e.search}const t=e.href.length-1;const s=e.hash||(e.href[t]==="#"?"#":"");return e.href[t-s.length]==="?"?"?":""};const T=Symbol("Request internals");const isRequest=e=>typeof e==="object"&&typeof e[T]==="object";class Request extends Body{constructor(e,t={}){let s;if(isRequest(e)){s=new URL(e.url)}else{s=new URL(e);e={}}let n=t.method||e.method||"GET";n=n.toUpperCase();if((t.body!=null||isRequest(e))&&e.body!==null&&(n==="GET"||n==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}const i=t.body?t.body:isRequest(e)&&e.body!==null?clone(e):null;super(i,{size:t.size||e.size||0});const r=new Headers(t.headers||e.headers||{});if(i!==null&&!r.has("Content-Type")){const e=extractContentType(i,this);if(e){r.append("Content-Type",e)}}let o=isRequest(e)?e.signal:null;if("signal"in t){o=t.signal}if(o!=null&&!isAbortSignal(o)){throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget")}this[T]={method:n,redirect:t.redirect||e.redirect||"follow",headers:r,parsedURL:s,signal:o};this.follow=t.follow===undefined?e.follow===undefined?20:e.follow:t.follow;this.compress=t.compress===undefined?e.compress===undefined?true:e.compress:t.compress;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent;this.highWaterMark=t.highWaterMark||e.highWaterMark||16384;this.insecureHTTPParser=t.insecureHTTPParser||e.insecureHTTPParser||false}get method(){return this[T].method}get url(){return(0,S.format)(this[T].parsedURL)}get headers(){return this[T].headers}get redirect(){return this[T].redirect}get signal(){return this[T].signal}clone(){return new Request(this)}get[Symbol.toStringTag](){return"Request"}}Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});const getNodeRequestOptions=e=>{const{parsedURL:t}=e[T];const s=new Headers(e[T].headers);if(!s.has("Accept")){s.set("Accept","*/*")}let n=null;if(e.body===null&&/^(post|put)$/i.test(e.method)){n="0"}if(e.body!==null){const t=getTotalBytes(e);if(typeof t==="number"&&!Number.isNaN(t)){n=String(t)}}if(n){s.set("Content-Length",n)}if(!s.has("User-Agent")){s.set("User-Agent","node-fetch")}if(e.compress&&!s.has("Accept-Encoding")){s.set("Accept-Encoding","gzip,deflate,br")}let{agent:i}=e;if(typeof i==="function"){i=i(t)}if(!s.has("Connection")&&!i){s.set("Connection","close")}const r=getSearch(t);const o={path:t.pathname+r,pathname:t.pathname,hostname:t.hostname,protocol:t.protocol,port:t.port,hash:t.hash,search:t.search,query:t.query,href:t.href,method:e.method,headers:s[Symbol.for("nodejs.util.inspect.custom")](),insecureHTTPParser:e.insecureHTTPParser,agent:i};return o};class AbortError extends FetchBaseError{constructor(e,t="aborted"){super(e,t)}}const A=new Set(["data:","http:","https:"]);async function fetch(e,t){return new Promise(((s,n)=>{const i=new Request(e,t);const u=getNodeRequestOptions(i);if(!A.has(u.protocol)){throw new TypeError(`node-fetch cannot load ${e}. URL scheme "${u.protocol.replace(/:$/,"")}" is not supported.`)}if(u.protocol==="data:"){const e=c(i.url);const t=new Response(e,{headers:{"Content-Type":e.typeFull}});s(t);return}const d=(u.protocol==="https:"?o:r).request;const{signal:p}=i;let _=null;const abort=()=>{const e=new AbortError("The operation was aborted.");n(e);if(i.body&&i.body instanceof l.Readable){i.body.destroy(e)}if(!_||!_.body){return}_.body.emit("error",e)};if(p&&p.aborted){abort();return}const abortAndFinalize=()=>{abort();finalize()};const m=d(u);if(p){p.addEventListener("abort",abortAndFinalize)}const finalize=()=>{m.abort();if(p){p.removeEventListener("abort",abortAndFinalize)}};m.on("error",(e=>{n(new FetchError(`request to ${i.url} failed, reason: ${e.message}`,"system",e));finalize()}));fixResponseChunkedTransferBadEnding(m,(e=>{_.body.destroy(e)}));if(process.version<"v14"){m.on("socket",(e=>{let t;e.prependListener("end",(()=>{t=e._eventsCount}));e.prependListener("close",(s=>{if(_&&t<e._eventsCount&&!s){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";_.body.emit("error",e)}}))}))}m.on("response",(e=>{m.setTimeout(0);const r=fromRawHeaders(e.rawHeaders);if(isRedirect(e.statusCode)){const o=r.get("Location");const a=o===null?null:new URL(o,i.url);switch(i.redirect){case"error":n(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect"));finalize();return;case"manual":if(a!==null){r.set("Location",a)}break;case"follow":{if(a===null){break}if(i.counter>=i.follow){n(new FetchError(`maximum redirect reached at: ${i.url}`,"max-redirect"));finalize();return}const r={headers:new Headers(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,size:i.size};if(e.statusCode!==303&&i.body&&t.body instanceof l.Readable){n(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&i.method==="POST"){r.method="GET";r.body=undefined;r.headers.delete("content-length")}s(fetch(new Request(a,r)));finalize();return}default:return n(new TypeError(`Redirect option '${i.redirect}' is not a valid value of RequestRedirect`))}}if(p){e.once("end",(()=>{p.removeEventListener("abort",abortAndFinalize)}))}let o=(0,l.pipeline)(e,new l.PassThrough,n);if(process.version<"v12.10"){e.on("aborted",abortAndFinalize)}const c={url:i.url,status:e.statusCode,statusText:e.statusMessage,headers:r,size:i.size,counter:i.counter,highWaterMark:i.highWaterMark};const u=r.get("Content-Encoding");if(!i.compress||i.method==="HEAD"||u===null||e.statusCode===204||e.statusCode===304){_=new Response(o,c);s(_);return}const d={flush:a.Z_SYNC_FLUSH,finishFlush:a.Z_SYNC_FLUSH};if(u==="gzip"||u==="x-gzip"){o=(0,l.pipeline)(o,a.createGunzip(d),n);_=new Response(o,c);s(_);return}if(u==="deflate"||u==="x-deflate"){const t=(0,l.pipeline)(e,new l.PassThrough,n);t.once("data",(e=>{o=(e[0]&15)===8?(0,l.pipeline)(o,a.createInflate(),n):(0,l.pipeline)(o,a.createInflateRaw(),n);_=new Response(o,c);s(_)}));return}if(u==="br"){o=(0,l.pipeline)(o,a.createBrotliDecompress(),n);_=new Response(o,c);s(_);return}_=new Response(o,c);s(_)}));writeToStream(m,i)}))}function fixResponseChunkedTransferBadEnding(e,t){const s=Buffer.from("0\r\n\r\n");let n=false;let i=false;let r;e.on("response",(e=>{const{headers:t}=e;n=t["transfer-encoding"]==="chunked"&&!t["content-length"]}));e.on("socket",(o=>{const onSocketClose=()=>{if(n&&!i){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";t(e)}};o.prependListener("close",onSocketClose);e.on("abort",(()=>{o.removeListener("close",onSocketClose)}));o.on("data",(e=>{i=Buffer.compare(e.slice(-5),s)===0;if(!i&&r){i=Buffer.compare(r.slice(-3),s.slice(0,3))===0&&Buffer.compare(e.slice(-2),s.slice(3))===0}r=e}))}))}var R=__nccwpck_require__(1957);var F=__nccwpck_require__.n(R);var P=__nccwpck_require__(5622);var B=__nccwpck_require__.n(P);const O=require("child_process");const j={2.6:`AL\n  BaseHTTPServer\n  Bastion\n  CGIHTTPServer\n  Carbon.AE\n  Carbon.AH\n  Carbon.App\n  Carbon.Appearance\n  Carbon.CF\n  Carbon.CG\n  Carbon.CarbonEvents\n  Carbon.CarbonEvt\n  Carbon.Cm\n  Carbon.Components\n  Carbon.ControlAccessor\n  Carbon.Controls\n  Carbon.CoreFounation\n  Carbon.CoreGraphics\n  Carbon.Ctl\n  Carbon.Dialogs\n  Carbon.Dlg\n  Carbon.Drag\n  Carbon.Dragconst\n  Carbon.Events\n  Carbon.Evt\n  Carbon.File\n  Carbon.Files\n  Carbon.Fm\n  Carbon.Folder\n  Carbon.Folders\n  Carbon.Fonts\n  Carbon.Help\n  Carbon.IBCarbon\n  Carbon.IBCarbonRuntime\n  Carbon.Icns\n  Carbon.Icons\n  Carbon.Launch\n  Carbon.LaunchServices\n  Carbon.List\n  Carbon.Lists\n  Carbon.MacHelp\n  Carbon.MediaDescr\n  Carbon.Menu\n  Carbon.Menus\n  Carbon.Mlte\n  Carbon.OSA\n  Carbon.OSAconst\n  Carbon.QDOffscreen\n  Carbon.Qd\n  Carbon.Qdoffs\n  Carbon.Qt\n  Carbon.QuickDraw\n  Carbon.QuickTime\n  Carbon.Res\n  Carbon.Resources\n  Carbon.Scrap\n  Carbon.Snd\n  Carbon.Sound\n  Carbon.TE\n  Carbon.TextEdit\n  Carbon.Win\n  Carbon.Windows\n  ColorPicker\n  ConfigParser\n  Cookie\n  DEVICE\n  DocXMLRPCServer\n  EasyDialogs\n  FL\n  FrameWork\n  GL\n  HTMLParser\n  MacOS\n  MimeWriter\n  MiniAEFrame\n  Nav\n  PixMapWrapper\n  Queue\n  SUNAUDIODEV\n  ScrolledText\n  SimpleHTTPServer\n  SimpleXMLRPCServer\n  SocketServer\n  StringIO\n  Tix\n  Tkinter\n  UserDict\n  UserList\n  UserString\n  W\n  __builtin__\n  __future__\n  __main__\n  _winreg\n  abc\n  aepack\n  aetools\n  aetypes\n  aifc\n  al\n  anydbm\n  applesingle\n  array\n  ast\n  asynchat\n  asyncore\n  atexit\n  audioop\n  autoGIL\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  bsddb\n  buildtools\n  bz2\n  cPickle\n  cProfile\n  cStringIO\n  calendar\n  cd\n  cfmfile\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  colorsys\n  commands\n  compileall\n  compiler\n  compiler.ast\n  compiler.visitor\n  contextlib\n  cookielib\n  copy\n  copy_reg\n  crypt\n  csv\n  ctypes\n  curses\n  curses.ascii\n  curses.panel\n  curses.textpad\n  curses.wrapper\n  datetime\n  dbhash\n  dbm\n  decimal\n  difflib\n  dircache\n  dis\n  distutils\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.emxccompiler\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvccompiler\n  distutils.mwerkscompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  dl\n  doctest\n  dumbdbm\n  dummy_thread\n  dummy_threading\n  email\n  email.charset\n  email.encoders\n  email.errors\n  email.generator\n  email.header\n  email.iterators\n  email.message\n  email.mime\n  email.parser\n  email.utils\n  encodings.idna\n  encodings.utf_8_sig\n  errno\n  exceptions\n  fcntl\n  filecmp\n  fileinput\n  findertools\n  fl\n  flp\n  fm\n  fnmatch\n  formatter\n  fpectl\n  fpformat\n  fractions\n  ftplib\n  functools\n  future_builtins\n  gc\n  gdbm\n  gensuitemodule\n  getopt\n  getpass\n  gettext\n  gl\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  hotshot\n  hotshot.stats\n  htmlentitydefs\n  htmllib\n  httplib\n  ic\n  icopen\n  imageop\n  imaplib\n  imgfile\n  imghdr\n  imp\n  imputil\n  inspect\n  io\n  itertools\n  jpeg\n  json\n  keyword\n  lib2to3\n  linecache\n  locale\n  logging\n  macerrors\n  macostools\n  macpath\n  macresource\n  mailbox\n  mailcap\n  marshal\n  math\n  md5\n  mhlib\n  mimetools\n  mimetypes\n  mimify\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multifile\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.dummy\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.sharedctypes\n  mutex\n  netrc\n  new\n  nis\n  nntplib\n  numbers\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  popen2\n  poplib\n  posix\n  posixfile\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  quopri\n  random\n  re\n  readline\n  repr\n  resource\n  rexec\n  rfc822\n  rlcompleter\n  robotparser\n  runpy\n  sched\n  select\n  sets\n  sgmllib\n  sha\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  spwd\n  sqlite3\n  ssl\n  stat\n  statvfs\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  sunaudiodev\n  symbol\n  symtable\n  sys\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.test_support\n  textwrap\n  thread\n  threading\n  time\n  timeit\n  token\n  tokenize\n  trace\n  traceback\n  tty\n  turtle\n  types\n  unicodedata\n  unittest\n  urllib\n  urllib2\n  urlparse\n  user\n  uu\n  uuid\n  videoreader\n  warnings\n  wave\n  weakref\n  webbrowser\n  whichdb\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml.dom\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.etree.ElementTree\n  xml.parsers.expat\n  xml.sax\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpclib\n  zipfile\n  zipimport\n  zlib`,2.7:`AL\n  BaseHTTPServer\n  Bastion\n  CGIHTTPServer\n  Canvas\n  Carbon.AE\n  Carbon.AH\n  Carbon.App\n  Carbon.Appearance\n  Carbon.CF\n  Carbon.CG\n  Carbon.CarbonEvents\n  Carbon.CarbonEvt\n  Carbon.Cm\n  Carbon.Components\n  Carbon.ControlAccessor\n  Carbon.Controls\n  Carbon.CoreFounation\n  Carbon.CoreGraphics\n  Carbon.Ctl\n  Carbon.Dialogs\n  Carbon.Dlg\n  Carbon.Drag\n  Carbon.Dragconst\n  Carbon.Events\n  Carbon.Evt\n  Carbon.File\n  Carbon.Files\n  Carbon.Fm\n  Carbon.Folder\n  Carbon.Folders\n  Carbon.Fonts\n  Carbon.Help\n  Carbon.IBCarbon\n  Carbon.IBCarbonRuntime\n  Carbon.Icns\n  Carbon.Icons\n  Carbon.Launch\n  Carbon.LaunchServices\n  Carbon.List\n  Carbon.Lists\n  Carbon.MacHelp\n  Carbon.MediaDescr\n  Carbon.Menu\n  Carbon.Menus\n  Carbon.Mlte\n  Carbon.OSA\n  Carbon.OSAconst\n  Carbon.QDOffscreen\n  Carbon.Qd\n  Carbon.Qdoffs\n  Carbon.Qt\n  Carbon.QuickDraw\n  Carbon.QuickTime\n  Carbon.Res\n  Carbon.Resources\n  Carbon.Scrap\n  Carbon.Snd\n  Carbon.Sound\n  Carbon.TE\n  Carbon.TextEdit\n  Carbon.Win\n  Carbon.Windows\n  ColorPicker\n  ConfigParser\n  Cookie\n  DEVICE\n  Dialog\n  DocXMLRPCServer\n  EasyDialogs\n  FL\n  FileDialog\n  FixTk\n  FrameWork\n  GL\n  HTMLParser\n  MacOS\n  MimeWriter\n  MiniAEFrame\n  Nav\n  PixMapWrapper\n  Queue\n  SUNAUDIODEV\n  ScrolledText\n  SimpleDialog\n  SimpleHTTPServer\n  SimpleXMLRPCServer\n  SocketServer\n  StringIO\n  Tix\n  Tkconstants\n  Tkdnd\n  Tkinter\n  UserDict\n  UserList\n  UserString\n  W\n  _LWPCookieJar\n  _MozillaCookieJar\n  __builtin__\n  __future__\n  __main__\n  _abcoll\n  _ast\n  _bisect\n  _bsddb\n  _codecs\n  _codecs_cn\n  _codecs_hk\n  _codecs_iso2022\n  _codecs_jp\n  _codecs_kr\n  _codecs_tw\n  _collections\n  _csv\n  _ctypes\n  _ctypes_test\n  _curses\n  _curses_panel\n  _elementtree\n  _functools\n  _hashlib\n  _heapq\n  _hotshot\n  _io\n  _json\n  _locale\n  _lsprof\n  _md5\n  _multibytecodec\n  _multiprocessing\n  _osx_support\n  _pyio\n  _random\n  _sha\n  _sha256\n  _sha512\n  _socket\n  _sqlite3\n  _sre\n  _ssl\n  _strptime\n  _struct\n  _symtable\n  _sysconfigdata\n  _testcapi\n  _threading_local\n  _tkinter\n  _warnings\n  _weakref\n  _weakrefset\n  _winreg\n  abc\n  aepack\n  aetools\n  aetypes\n  aifc\n  al\n  antigravity\n  anydbm\n  applesingle\n  argparse\n  array\n  ast\n  asynchat\n  asyncore\n  atexit\n  audiodev\n  audioop\n  autoGIL\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  bsddb\n  bsddb.db\n  bsddb.dbobj\n  bsddb.dbrecio\n  bsddb.dbshelve\n  bsddb.dbtables\n  bsddb.dbutils\n  bsddb.test\n  bsddb.test.test_all\n  bsddb.test.test_associate\n  bsddb.test.test_basics\n  bsddb.test.test_compare\n  bsddb.test.test_compat\n  bsddb.test.test_cursor_pget_bug\n  bsddb.test.test_db\n  bsddb.test.test_dbenv\n  bsddb.test.test_dbobj\n  bsddb.test.test_dbshelve\n  bsddb.test.test_dbtables\n  bsddb.test.test_distributed_transactions\n  bsddb.test.test_early_close\n  bsddb.test.test_fileid\n  bsddb.test.test_get_none\n  bsddb.test.test_join\n  bsddb.test.test_lock\n  bsddb.test.test_misc\n  bsddb.test.test_pickle\n  bsddb.test.test_queue\n  bsddb.test.test_recno\n  bsddb.test.test_replication\n  bsddb.test.test_sequence\n  bsddb.test.test_thread\n  buildtools\n  bz2\n  cPickle\n  cProfile\n  cStringIO\n  calendar\n  cd\n  cfmfile\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  colorsys\n  commands\n  compileall\n  compiler\n  compiler.ast\n  compiler.consts\n  compiler.future\n  compiler.misc\n  compiler.pyassem\n  compiler.pycodegen\n  compiler.symbols\n  compiler.syntax\n  compiler.transformer\n  compiler.visitor\n  contextlib\n  cookielib\n  copy\n  copy_reg\n  crypt\n  csv\n  ctypes\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.test\n  ctypes.test.runtests\n  ctypes.test.test_anon\n  ctypes.test.test_array_in_pointer\n  ctypes.test.test_arrays\n  ctypes.test.test_as_parameter\n  ctypes.test.test_bitfields\n  ctypes.test.test_buffers\n  ctypes.test.test_byteswap\n  ctypes.test.test_callbacks\n  ctypes.test.test_cast\n  ctypes.test.test_cfuncs\n  ctypes.test.test_checkretval\n  ctypes.test.test_delattr\n  ctypes.test.test_errno\n  ctypes.test.test_find\n  ctypes.test.test_frombuffer\n  ctypes.test.test_funcptr\n  ctypes.test.test_functions\n  ctypes.test.test_incomplete\n  ctypes.test.test_init\n  ctypes.test.test_internals\n  ctypes.test.test_keeprefs\n  ctypes.test.test_libc\n  ctypes.test.test_loading\n  ctypes.test.test_macholib\n  ctypes.test.test_memfunctions\n  ctypes.test.test_numbers\n  ctypes.test.test_objects\n  ctypes.test.test_parameters\n  ctypes.test.test_pep3118\n  ctypes.test.test_pickling\n  ctypes.test.test_pointers\n  ctypes.test.test_prototypes\n  ctypes.test.test_python_api\n  ctypes.test.test_random_things\n  ctypes.test.test_refcounts\n  ctypes.test.test_repr\n  ctypes.test.test_returnfuncptrs\n  ctypes.test.test_simplesubclasses\n  ctypes.test.test_sizes\n  ctypes.test.test_slicing\n  ctypes.test.test_stringptr\n  ctypes.test.test_strings\n  ctypes.test.test_struct_fields\n  ctypes.test.test_structures\n  ctypes.test.test_unaligned_structures\n  ctypes.test.test_unicode\n  ctypes.test.test_values\n  ctypes.test.test_varsize_struct\n  ctypes.test.test_win32\n  ctypes.test.test_wintypes\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  curses.wrapper\n  datetime\n  dbhash\n  dbm\n  decimal\n  difflib\n  dircache\n  dis\n  distutils\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.emxccompiler\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.setuptools_build_ext\n  distutils.tests.setuptools_extension\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_ccompiler\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  dl\n  doctest\n  dumbdbm\n  dummy_thread\n  dummy_threading\n  email\n  email._parseaddr\n  email.base64mime\n  email.charset\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.quoprimime\n  email.test\n  email.test.test_email\n  email.test.test_email_codecs\n  email.test.test_email_codecs_renamed\n  email.test.test_email_renamed\n  email.test.test_email_torture\n  email.utils\n  encodings\n  encodings.__builtin__\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.codecs\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.encodings\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_u\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_centeuro\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.string_escape\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.unicode_internal\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip.__main__\n  ensurepip._uninstall\n  errno\n  exceptions\n  fcntl\n  filecmp\n  fileinput\n  findertools\n  fl\n  flp\n  fm\n  fnmatch\n  formatter\n  fpectl\n  fpformat\n  fractions\n  ftplib\n  functools\n  future_builtins\n  gc\n  gdbm\n  genericpath\n  gensuitemodule\n  getopt\n  getpass\n  gettext\n  gl\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  hotshot\n  hotshot.log\n  hotshot.stats\n  hotshot.stones\n  htmlentitydefs\n  htmllib\n  httplib\n  ic\n  icopen\n  idlelib\n  idlelib.AutoComplete\n  idlelib.AutoCompleteWindow\n  idlelib.AutoExpand\n  idlelib.Bindings\n  idlelib.CallTipWindow\n  idlelib.CallTips\n  idlelib.ClassBrowser\n  idlelib.CodeContext\n  idlelib.ColorDelegator\n  idlelib.Debugger\n  idlelib.Delegator\n  idlelib.EditorWindow\n  idlelib.FileList\n  idlelib.FormatParagraph\n  idlelib.GrepDialog\n  idlelib.HyperParser\n  idlelib.IOBinding\n  idlelib.IdleHistory\n  idlelib.MultiCall\n  idlelib.MultiStatusBar\n  idlelib.ObjectBrowser\n  idlelib.OutputWindow\n  idlelib.ParenMatch\n  idlelib.PathBrowser\n  idlelib.Percolator\n  idlelib.PyParse\n  idlelib.PyShell\n  idlelib.RemoteDebugger\n  idlelib.RemoteObjectBrowser\n  idlelib.ReplaceDialog\n  idlelib.RstripExtension\n  idlelib.ScriptBinding\n  idlelib.ScrolledList\n  idlelib.SearchDialog\n  idlelib.SearchDialogBase\n  idlelib.SearchEngine\n  idlelib.StackViewer\n  idlelib.ToolTip\n  idlelib.TreeWidget\n  idlelib.UndoDelegator\n  idlelib.WidgetRedirector\n  idlelib.WindowList\n  idlelib.ZoomHeight\n  idlelib.aboutDialog\n  idlelib.configDialog\n  idlelib.configHandler\n  idlelib.configHelpSourceEdit\n  idlelib.configSectionNameDialog\n  idlelib.dynOptionMenuWidget\n  idlelib.help\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_calltips\n  idlelib.idle_test.test_config_name\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editmenu\n  idlelib.idle_test.test_formatparagraph\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_helpabout\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_idlehistory\n  idlelib.idle_test.test_io\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_rstrip\n  idlelib.idle_test.test_searchdialogbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_widgetredir\n  idlelib.idlever\n  idlelib.keybindingDialog\n  idlelib.macosxSupport\n  idlelib.rpc\n  idlelib.run\n  idlelib.tabbedpages\n  idlelib.textView\n  ihooks\n  imageop\n  imaplib\n  imgfile\n  imghdr\n  imp\n  importlib\n  imputil\n  inspect\n  io\n  itertools\n  jpeg\n  json\n  json._json\n  json.decoder\n  json.encoder\n  json.json\n  json.re\n  json.scanner\n  json.struct\n  json.sys\n  json.tests\n  json.tests.test_check_circular\n  json.tests.test_decode\n  json.tests.test_default\n  json.tests.test_dump\n  json.tests.test_encode_basestring_ascii\n  json.tests.test_fail\n  json.tests.test_float\n  json.tests.test_indent\n  json.tests.test_pass1\n  json.tests.test_pass2\n  json.tests.test_pass3\n  json.tests.test_recursion\n  json.tests.test_scanstring\n  json.tests.test_separators\n  json.tests.test_speedups\n  json.tests.test_tool\n  json.tests.test_unicode\n  json.tool\n  keyword\n  lib2to3\n  lib2to3.__main__\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  linuxaudiodev\n  locale\n  logging\n  logging.config\n  logging.handlers\n  macerrors\n  macostools\n  macpath\n  macresource\n  macurl2path\n  mailbox\n  mailcap\n  markupbase\n  marshal\n  math\n  md5\n  mhlib\n  mimetools\n  mimetypes\n  mimify\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multifile\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forking\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.sharedctypes\n  multiprocessing.synchronize\n  multiprocessing.util\n  mutex\n  netrc\n  new\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  os2emxpath\n  ossaudiodev\n  parser\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  popen2\n  poplib\n  posix\n  posixfile\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  pyexpat\n  quopri\n  random\n  re\n  readline\n  repr\n  resource\n  rexec\n  rfc822\n  rlcompleter\n  robotparser\n  runpy\n  sched\n  select\n  sets\n  sgmllib\n  sha\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sqlite3.test\n  sqlite3.test.dbapi\n  sqlite3.test.dump\n  sqlite3.test.factory\n  sqlite3.test.hooks\n  sqlite3.test.py25tests\n  sqlite3.test.regression\n  sqlite3.test.transactions\n  sqlite3.test.types\n  sqlite3.test.userfunctions\n  sre\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statvfs\n  string\n  stringold\n  stringprep\n  strop\n  struct\n  subprocess\n  sunau\n  sunaudio\n  sunaudiodev\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.__main__\n  test._mock_backport\n  test.audiotests\n  test.autotest\n  test.bad_coding\n  test.bad_coding2\n  test.bad_coding3\n  test.badsyntax_future3\n  test.badsyntax_future4\n  test.badsyntax_future5\n  test.badsyntax_future6\n  test.badsyntax_future7\n  test.badsyntax_future8\n  test.badsyntax_future9\n  test.badsyntax_nocaret\n  test.bisect\n  test.bisect_cmd\n  test.curses_tests\n  test.doctest_aliases\n  test.double_const\n  test.fork_wait\n  test.gdb_sample\n  test.infinite_reload\n  test.inspect_fodder\n  test.inspect_fodder2\n  test.list_tests\n  test.lock_tests\n  test.make_ssl_certs\n  test.mapping_tests\n  test.mp_fork_bomb\n  test.multibytecodec_support\n  test.outstanding_bugs\n  test.pickletester\n  test.profilee\n  test.pyclbr_input\n  test.pydoc_mod\n  test.pydocfodder\n  test.pystone\n  test.pythoninfo\n  test.re_tests\n  test.regrtest\n  test.relimport\n  test.reperf\n  test.sample_doctest\n  test.sample_doctest_no_docstrings\n  test.sample_doctest_no_doctests\n  test.script_helper\n  test.seq_tests\n  test.sortperf\n  test.ssl_servers\n  test.ssltests\n  test.string_tests\n  test.subprocessdata.sigchild_ignore\n  test.support\n  test.support.script_helper\n  test.symlink_support\n  test.test_MimeWriter\n  test.test_SimpleHTTPServer\n  test.test_StringIO\n  test.test___all__\n  test.test___future__\n  test.test__locale\n  test.test__osx_support\n  test.test_abc\n  test.test_abstract_numbers\n  test.test_aepack\n  test.test_aifc\n  test.test_al\n  test.test_anydbm\n  test.test_applesingle\n  test.test_argparse\n  test.test_array\n  test.test_ascii_formatd\n  test.test_ast\n  test.test_asynchat\n  test.test_asyncore\n  test.test_atexit\n  test.test_audioop\n  test.test_augassign\n  test.test_base64\n  test.test_bastion\n  test.test_bdb\n  test.test_bigaddrspace\n  test.test_bigmem\n  test.test_binascii\n  test.test_binhex\n  test.test_binop\n  test.test_bisect\n  test.test_bool\n  test.test_bsddb\n  test.test_bsddb185\n  test.test_bsddb3\n  test.test_buffer\n  test.test_bufio\n  test.test_builtin\n  test.test_bytes\n  test.test_bz2\n  test.test_calendar\n  test.test_call\n  test.test_capi\n  test.test_cd\n  test.test_cfgparser\n  test.test_cgi\n  test.test_charmapcodec\n  test.test_cl\n  test.test_class\n  test.test_cmath\n  test.test_cmd\n  test.test_cmd_line\n  test.test_cmd_line_script\n  test.test_code\n  test.test_codeccallbacks\n  test.test_codecencodings_cn\n  test.test_codecencodings_hk\n  test.test_codecencodings_iso2022\n  test.test_codecencodings_jp\n  test.test_codecencodings_kr\n  test.test_codecencodings_tw\n  test.test_codecmaps_cn\n  test.test_codecmaps_hk\n  test.test_codecmaps_jp\n  test.test_codecmaps_kr\n  test.test_codecmaps_tw\n  test.test_codecs\n  test.test_codeop\n  test.test_coercion\n  test.test_collections\n  test.test_colorsys\n  test.test_commands\n  test.test_compare\n  test.test_compile\n  test.test_compileall\n  test.test_compiler\n  test.test_complex\n  test.test_complex_args\n  test.test_contains\n  test.test_contextlib\n  test.test_cookie\n  test.test_cookielib\n  test.test_copy\n  test.test_copy_reg\n  test.test_cpickle\n  test.test_cprofile\n  test.test_crypt\n  test.test_csv\n  test.test_ctypes\n  test.test_curses\n  test.test_datetime\n  test.test_dbm\n  test.test_decimal\n  test.test_decorators\n  test.test_defaultdict\n  test.test_deque\n  test.test_descr\n  test.test_descrtut\n  test.test_dict\n  test.test_dictcomps\n  test.test_dictviews\n  test.test_difflib\n  test.test_dircache\n  test.test_dis\n  test.test_distutils\n  test.test_dl\n  test.test_doctest\n  test.test_doctest2\n  test.test_docxmlrpc\n  test.test_dumbdbm\n  test.test_dummy_thread\n  test.test_dummy_threading\n  test.test_email\n  test.test_email_codecs\n  test.test_email_renamed\n  test.test_ensurepip\n  test.test_enumerate\n  test.test_eof\n  test.test_epoll\n  test.test_errno\n  test.test_exception_variations\n  test.test_exceptions\n  test.test_extcall\n  test.test_fcntl\n  test.test_file\n  test.test_file2k\n  test.test_file_eintr\n  test.test_filecmp\n  test.test_fileinput\n  test.test_fileio\n  test.test_float\n  test.test_fnmatch\n  test.test_fork1\n  test.test_format\n  test.test_fpformat\n  test.test_fractions\n  test.test_frozen\n  test.test_ftplib\n  test.test_funcattrs\n  test.test_functools\n  test.test_future\n  test.test_future1\n  test.test_future2\n  test.test_future3\n  test.test_future4\n  test.test_future5\n  test.test_future_builtins\n  test.test_gc\n  test.test_gdb\n  test.test_gdbm\n  test.test_generators\n  test.test_genericpath\n  test.test_genexps\n  test.test_getargs\n  test.test_getargs2\n  test.test_getopt\n  test.test_gettext\n  test.test_gl\n  test.test_glob\n  test.test_global\n  test.test_grammar\n  test.test_grp\n  test.test_gzip\n  test.test_hash\n  test.test_hashlib\n  test.test_heapq\n  test.test_hmac\n  test.test_hotshot\n  test.test_htmllib\n  test.test_htmlparser\n  test.test_httplib\n  test.test_httpservers\n  test.test_idle\n  test.test_imageop\n  test.test_imaplib\n  test.test_imgfile\n  test.test_imghdr\n  test.test_imp\n  test.test_import\n  test.test_import_magic\n  test.test_importhooks\n  test.test_importlib\n  test.test_index\n  test.test_inspect\n  test.test_int\n  test.test_int_literal\n  test.test_io\n  test.test_ioctl\n  test.test_isinstance\n  test.test_iter\n  test.test_iterlen\n  test.test_itertools\n  test.test_json\n  test.test_kqueue\n  test.test_largefile\n  test.test_lib2to3\n  test.test_linecache\n  test.test_linuxaudiodev\n  test.test_list\n  test.test_locale\n  test.test_logging\n  test.test_long\n  test.test_long_future\n  test.test_longexp\n  test.test_macos\n  test.test_macostools\n  test.test_macpath\n  test.test_macurl2path\n  test.test_mailbox\n  test.test_marshal\n  test.test_math\n  test.test_md5\n  test.test_memoryio\n  test.test_memoryview\n  test.test_mhlib\n  test.test_mimetools\n  test.test_mimetypes\n  test.test_minidom\n  test.test_mmap\n  test.test_module\n  test.test_modulefinder\n  test.test_msilib\n  test.test_multibytecodec\n  test.test_multifile\n  test.test_multiprocessing\n  test.test_mutants\n  test.test_mutex\n  test.test_netrc\n  test.test_new\n  test.test_nis\n  test.test_nntplib\n  test.test_normalization\n  test.test_ntpath\n  test.test_old_mailbox\n  test.test_opcodes\n  test.test_openpty\n  test.test_operator\n  test.test_optparse\n  test.test_ordered_dict\n  test.test_os\n  test.test_ossaudiodev\n  test.test_parser\n  test.test_pdb\n  test.test_peepholer\n  test.test_pep247\n  test.test_pep277\n  test.test_pep352\n  test.test_pickle\n  test.test_pickletools\n  test.test_pipes\n  test.test_pkg\n  test.test_pkgimport\n  test.test_pkgutil\n  test.test_platform\n  test.test_plistlib\n  test.test_poll\n  test.test_popen\n  test.test_popen2\n  test.test_poplib\n  test.test_posix\n  test.test_posixpath\n  test.test_pow\n  test.test_pprint\n  test.test_print\n  test.test_profile\n  test.test_property\n  test.test_pstats\n  test.test_pty\n  test.test_pwd\n  test.test_py3kwarn\n  test.test_py_compile\n  test.test_pyclbr\n  test.test_pydoc\n  test.test_pyexpat\n  test.test_queue\n  test.test_quopri\n  test.test_random\n  test.test_re\n  test.test_readline\n  test.test_regrtest\n  test.test_repr\n  test.test_resource\n  test.test_rfc822\n  test.test_richcmp\n  test.test_rlcompleter\n  test.test_robotparser\n  test.test_runpy\n  test.test_sax\n  test.test_scope\n  test.test_scriptpackages\n  test.test_select\n  test.test_set\n  test.test_setcomps\n  test.test_sets\n  test.test_sgmllib\n  test.test_sha\n  test.test_shelve\n  test.test_shlex\n  test.test_shutil\n  test.test_signal\n  test.test_site\n  test.test_slice\n  test.test_smtplib\n  test.test_smtpnet\n  test.test_socket\n  test.test_socketserver\n  test.test_softspace\n  test.test_sort\n  test.test_source_encoding\n  test.test_spwd\n  test.test_sqlite\n  test.test_ssl\n  test.test_startfile\n  test.test_stat\n  test.test_str\n  test.test_strftime\n  test.test_string\n  test.test_stringprep\n  test.test_strop\n  test.test_strptime\n  test.test_strtod\n  test.test_struct\n  test.test_structmembers\n  test.test_structseq\n  test.test_subprocess\n  test.test_sunau\n  test.test_sunaudiodev\n  test.test_sundry\n  test.test_support\n  test.test_symtable\n  test.test_syntax\n  test.test_sys\n  test.test_sys_setprofile\n  test.test_sys_settrace\n  test.test_sysconfig\n  test.test_tarfile\n  test.test_tcl\n  test.test_telnetlib\n  test.test_tempfile\n  test.test_test_support\n  test.test_textwrap\n  test.test_thread\n  test.test_threaded_import\n  test.test_threadedtempfile\n  test.test_threading\n  test.test_threading_local\n  test.test_threadsignals\n  test.test_time\n  test.test_timeit\n  test.test_timeout\n  test.test_tk\n  test.test_tokenize\n  test.test_tools\n  test.test_trace\n  test.test_traceback\n  test.test_transformer\n  test.test_ttk_guionly\n  test.test_ttk_textonly\n  test.test_tuple\n  test.test_turtle\n  test.test_typechecks\n  test.test_types\n  test.test_ucn\n  test.test_unary\n  test.test_undocumented_details\n  test.test_unicode\n  test.test_unicode_file\n  test.test_unicodedata\n  test.test_unittest\n  test.test_univnewlines\n  test.test_univnewlines2k\n  test.test_unpack\n  test.test_urllib\n  test.test_urllib2\n  test.test_urllib2_localnet\n  test.test_urllib2net\n  test.test_urllibnet\n  test.test_urlparse\n  test.test_userdict\n  test.test_userlist\n  test.test_userstring\n  test.test_uu\n  test.test_uuid\n  test.test_wait3\n  test.test_wait4\n  test.test_warnings\n  test.test_wave\n  test.test_weakref\n  test.test_weakset\n  test.test_whichdb\n  test.test_winreg\n  test.test_winsound\n  test.test_with\n  test.test_wsgiref\n  test.test_xdrlib\n  test.test_xml_etree\n  test.test_xml_etree_c\n  test.test_xmllib\n  test.test_xmlrpc\n  test.test_xpickle\n  test.test_xrange\n  test.test_zipfile\n  test.test_zipfile64\n  test.test_zipimport\n  test.test_zipimport_support\n  test.test_zlib\n  test.testall\n  test.testcodec\n  test.tf_inherit_check\n  test.threaded_import_hangers\n  test.time_hashlib\n  test.tracedmodules\n  test.tracedmodules.testmod\n  test.warning_tests\n  test.win_console_handler\n  test.xmltests\n  textwrap\n  this\n  thread\n  threading\n  time\n  timeit\n  tkColorChooser\n  tkCommonDialog\n  tkFileDialog\n  tkFont\n  tkMessageBox\n  tkSimpleDialog\n  toaiff\n  token\n  tokenize\n  trace\n  traceback\n  ttk\n  tty\n  turtle\n  types\n  unicodedata\n  unittest\n  unittest.__main__\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.test\n  unittest.test.dummy\n  unittest.test.support\n  unittest.test.test_assertions\n  unittest.test.test_break\n  unittest.test.test_case\n  unittest.test.test_discovery\n  unittest.test.test_functiontestcase\n  unittest.test.test_loader\n  unittest.test.test_program\n  unittest.test.test_result\n  unittest.test.test_runner\n  unittest.test.test_setups\n  unittest.test.test_skipping\n  unittest.test.test_suite\n  unittest.util\n  urllib\n  urllib2\n  urlparse\n  user\n  uu\n  uuid\n  videoreader\n  warnings\n  wave\n  weakref\n  webbrowser\n  whichdb\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmllib\n  xmlrpclib\n  xxsubtype\n  zipfile\n  zipimport\n  zlib`,3.2:`__future__\n  __main__\n  _dummy_thread\n  _struct\n  _thread\n  abc\n  aifc\n  argparse\n  array\n  ast\n  asynchat\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  colorsys\n  compileall\n  concurrent.futures\n  configparser\n  contextlib\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  curses\n  curses.ascii\n  curses.panel\n  curses.textpad\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.emxccompiler\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  doctest\n  dummy_threading\n  email\n  email.charset\n  email.encoders\n  email.errors\n  email.generator\n  email.header\n  email.iterators\n  email.message\n  email.mime\n  email.parser\n  email.utils\n  encodings\n  encodings.idna\n  encodings.mbcs\n  encodings.utf_8_sig\n  errno\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fpectl\n  fractions\n  ftplib\n  functools\n  gc\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib.abc\n  importlib.machinery\n  importlib.util\n  inspect\n  io\n  itertools\n  json\n  keyword\n  lib2to3\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  macpath\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.dummy\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.sharedctypes\n  netrc\n  nis\n  nntplib\n  numbers\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  select\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  ssl\n  stat\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.support\n  textwrap\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.scrolledtext\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tty\n  turtle\n  types\n  unicodedata\n  unittest\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.etree.ElementTree\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc.client\n  xmlrpc.server\n  zipfile\n  zipimport\n  zlib`,3.3:`__future__\n  __main__\n  _dummy_thread\n  _struct\n  _thread\n  abc\n  aifc\n  argparse\n  array\n  ast\n  asynchat\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.abc\n  colorsys\n  compileall\n  concurrent.futures\n  configparser\n  contextlib\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  curses\n  curses.ascii\n  curses.panel\n  curses.textpad\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.emxccompiler\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  doctest\n  dummy_threading\n  email\n  email.charset\n  email.encoders\n  email.errors\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.parser\n  email.policy\n  email.utils\n  encodings\n  encodings.idna\n  encodings.mbcs\n  encodings.utf_8_sig\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fpectl\n  fractions\n  ftplib\n  functools\n  gc\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib.abc\n  importlib.machinery\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  keyword\n  lib2to3\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  macpath\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.dummy\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.sharedctypes\n  netrc\n  nis\n  nntplib\n  numbers\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  select\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  ssl\n  stat\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.support\n  textwrap\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.scrolledtext\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tty\n  turtle\n  types\n  unicodedata\n  unittest\n  unittest.mock\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.etree.ElementTree\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc.client\n  xmlrpc.server\n  zipfile\n  zipimport\n  zlib`,3.4:`__future__\n  __main__\n  _ast\n  _bisect\n  _bootlocale\n  _bz2\n  _codecs\n  _codecs_cn\n  _codecs_hk\n  _codecs_iso2022\n  _codecs_jp\n  _codecs_kr\n  _codecs_tw\n  _collections\n  _collections_abc\n  _compat_pickle\n  _crypt\n  _csv\n  _ctypes\n  _ctypes_test\n  _curses\n  _curses_panel\n  _datetime\n  _dbm\n  _decimal\n  _dummy_thread\n  _elementtree\n  _frozen_importlib\n  _functools\n  _gdbm\n  _hashlib\n  _heapq\n  _imp\n  _io\n  _json\n  _locale\n  _lsprof\n  _lzma\n  _markupbase\n  _md5\n  _multibytecodec\n  _multiprocessing\n  _opcode\n  _operator\n  _osx_support\n  _pickle\n  _posixsubprocess\n  _pyio\n  _random\n  _sha1\n  _sha256\n  _sha512\n  _sitebuiltins\n  _socket\n  _sqlite3\n  _sre\n  _ssl\n  _stat\n  _string\n  _strptime\n  _struct\n  _symtable\n  _sysconfigdata\n  _testbuffer\n  _testcapi\n  _testimportmultiple\n  _thread\n  _threading_local\n  _tkinter\n  _tracemalloc\n  _warnings\n  _weakref\n  _weakrefset\n  abc\n  aifc\n  antigravity\n  argparse\n  array\n  ast\n  asynchat\n  asyncio\n  asyncio.base_events\n  asyncio.base_subprocess\n  asyncio.compat\n  asyncio.constants\n  asyncio.coroutines\n  asyncio.events\n  asyncio.futures\n  asyncio.locks\n  asyncio.log\n  asyncio.proactor_events\n  asyncio.protocols\n  asyncio.queues\n  asyncio.selector_events\n  asyncio.sslproto\n  asyncio.streams\n  asyncio.subprocess\n  asyncio.tasks\n  asyncio.test_utils\n  asyncio.transports\n  asyncio.unix_events\n  asyncio.windows_events\n  asyncio.windows_utils\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.__main__\n  collections.abc\n  colorsys\n  compileall\n  concurrent\n  concurrent.futures\n  concurrent.futures._base\n  concurrent.futures.process\n  concurrent.futures.thread\n  configparser\n  contextlib\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.test\n  ctypes.test.__main__\n  ctypes.test.test_anon\n  ctypes.test.test_array_in_pointer\n  ctypes.test.test_arrays\n  ctypes.test.test_as_parameter\n  ctypes.test.test_bitfields\n  ctypes.test.test_buffers\n  ctypes.test.test_bytes\n  ctypes.test.test_byteswap\n  ctypes.test.test_callbacks\n  ctypes.test.test_cast\n  ctypes.test.test_cfuncs\n  ctypes.test.test_checkretval\n  ctypes.test.test_delattr\n  ctypes.test.test_errno\n  ctypes.test.test_find\n  ctypes.test.test_frombuffer\n  ctypes.test.test_funcptr\n  ctypes.test.test_functions\n  ctypes.test.test_incomplete\n  ctypes.test.test_init\n  ctypes.test.test_internals\n  ctypes.test.test_keeprefs\n  ctypes.test.test_libc\n  ctypes.test.test_loading\n  ctypes.test.test_macholib\n  ctypes.test.test_memfunctions\n  ctypes.test.test_numbers\n  ctypes.test.test_objects\n  ctypes.test.test_parameters\n  ctypes.test.test_pep3118\n  ctypes.test.test_pickling\n  ctypes.test.test_pointers\n  ctypes.test.test_prototypes\n  ctypes.test.test_python_api\n  ctypes.test.test_random_things\n  ctypes.test.test_refcounts\n  ctypes.test.test_repr\n  ctypes.test.test_returnfuncptrs\n  ctypes.test.test_simplesubclasses\n  ctypes.test.test_sizes\n  ctypes.test.test_slicing\n  ctypes.test.test_stringptr\n  ctypes.test.test_strings\n  ctypes.test.test_struct_fields\n  ctypes.test.test_structures\n  ctypes.test.test_unaligned_structures\n  ctypes.test.test_unicode\n  ctypes.test.test_values\n  ctypes.test.test_varsize_struct\n  ctypes.test.test_win32\n  ctypes.test.test_wintypes\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_cygwinccompiler\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_extension\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_log\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  doctest\n  dummy_threading\n  email\n  email._encoded_words\n  email._header_value_parser\n  email._parseaddr\n  email._policybase\n  email.base64mime\n  email.charset\n  email.contentmanager\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.policy\n  email.quoprimime\n  email.utils\n  encodings\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1125\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp273\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp65001\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_u\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_centeuro\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.unicode_internal\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip.__main__\n  ensurepip._uninstall\n  enum\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fpectl\n  fractions\n  ftplib\n  functools\n  gc\n  genericpath\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  idlelib\n  idlelib.AutoComplete\n  idlelib.AutoCompleteWindow\n  idlelib.AutoExpand\n  idlelib.Bindings\n  idlelib.CallTipWindow\n  idlelib.CallTips\n  idlelib.ClassBrowser\n  idlelib.CodeContext\n  idlelib.ColorDelegator\n  idlelib.Debugger\n  idlelib.Delegator\n  idlelib.EditorWindow\n  idlelib.FileList\n  idlelib.FormatParagraph\n  idlelib.GrepDialog\n  idlelib.HyperParser\n  idlelib.IOBinding\n  idlelib.IdleHistory\n  idlelib.MultiCall\n  idlelib.MultiStatusBar\n  idlelib.ObjectBrowser\n  idlelib.OutputWindow\n  idlelib.ParenMatch\n  idlelib.PathBrowser\n  idlelib.Percolator\n  idlelib.PyParse\n  idlelib.PyShell\n  idlelib.RemoteDebugger\n  idlelib.RemoteObjectBrowser\n  idlelib.ReplaceDialog\n  idlelib.RstripExtension\n  idlelib.ScriptBinding\n  idlelib.ScrolledList\n  idlelib.SearchDialog\n  idlelib.SearchDialogBase\n  idlelib.SearchEngine\n  idlelib.StackViewer\n  idlelib.ToolTip\n  idlelib.TreeWidget\n  idlelib.UndoDelegator\n  idlelib.WidgetRedirector\n  idlelib.WindowList\n  idlelib.ZoomHeight\n  idlelib.__main__\n  idlelib.aboutDialog\n  idlelib.configDialog\n  idlelib.configHandler\n  idlelib.configHelpSourceEdit\n  idlelib.configSectionNameDialog\n  idlelib.dynOptionMenuWidget\n  idlelib.help\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_calltips\n  idlelib.idle_test.test_config_name\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editor\n  idlelib.idle_test.test_formatparagraph\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_idlehistory\n  idlelib.idle_test.test_io\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_rstrip\n  idlelib.idle_test.test_searchdialogbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_widgetredir\n  idlelib.idlever\n  idlelib.keybindingDialog\n  idlelib.macosxSupport\n  idlelib.rpc\n  idlelib.run\n  idlelib.tabbedpages\n  idlelib.textView\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib._bootstrap\n  importlib.abc\n  importlib.machinery\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  json.decoder\n  json.encoder\n  json.scanner\n  json.tool\n  keyword\n  lib2to3\n  lib2to3.__main__\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_callable\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_reload\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.__main__\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  macpath\n  macurl2path\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.context\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forkserver\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.popen_fork\n  multiprocessing.popen_forkserver\n  multiprocessing.popen_spawn_posix\n  multiprocessing.popen_spawn_win32\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.resource_sharer\n  multiprocessing.semaphore_tracker\n  multiprocessing.sharedctypes\n  multiprocessing.spawn\n  multiprocessing.synchronize\n  multiprocessing.util\n  netrc\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pathlib\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  pyexpat\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  select\n  selectors\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sqlite3.test\n  sqlite3.test.dbapi\n  sqlite3.test.dump\n  sqlite3.test.factory\n  sqlite3.test.hooks\n  sqlite3.test.regression\n  sqlite3.test.transactions\n  sqlite3.test.types\n  sqlite3.test.userfunctions\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statistics\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.__main__\n  test._test_multiprocessing\n  test.audiotests\n  test.autotest\n  test.bad_coding\n  test.bad_coding2\n  test.badsyntax_3131\n  test.badsyntax_future10\n  test.badsyntax_future3\n  test.badsyntax_future4\n  test.badsyntax_future5\n  test.badsyntax_future6\n  test.badsyntax_future7\n  test.badsyntax_future8\n  test.badsyntax_future9\n  test.badsyntax_pep3120\n  test.buffer_tests\n  test.bytecode_helper\n  test.coding20731\n  test.curses_tests\n  test.datetimetester\n  test.dis_module\n  test.doctest_aliases\n  test.double_const\n  test.encoded_modules\n  test.encoded_modules.module_iso_8859_1\n  test.encoded_modules.module_koi8_r\n  test.final_a\n  test.final_b\n  test.fork_wait\n  test.future_test1\n  test.future_test2\n  test.gdb_sample\n  test.inspect_fodder\n  test.inspect_fodder2\n  test.list_tests\n  test.lock_tests\n  test.make_ssl_certs\n  test.mapping_tests\n  test.memory_watchdog\n  test.mock_socket\n  test.mp_fork_bomb\n  test.multibytecodec_support\n  test.outstanding_bugs\n  test.pickletester\n  test.profilee\n  test.pyclbr_input\n  test.pydoc_mod\n  test.pydocfodder\n  test.pystone\n  test.re_tests\n  test.regrtest\n  test.relimport\n  test.reperf\n  test.sample_doctest\n  test.sample_doctest_no_docstrings\n  test.sample_doctest_no_doctests\n  test.script_helper\n  test.seq_tests\n  test.sortperf\n  test.ssl_servers\n  test.ssltests\n  test.string_tests\n  test.subprocessdata.fd_status\n  test.subprocessdata.input_reader\n  test.subprocessdata.qcat\n  test.subprocessdata.qgrep\n  test.subprocessdata.sigchild_ignore\n  test.support\n  test.test___all__\n  test.test___future__\n  test.test__locale\n  test.test__opcode\n  test.test__osx_support\n  test.test_abc\n  test.test_abstract_numbers\n  test.test_aifc\n  test.test_argparse\n  test.test_array\n  test.test_ast\n  test.test_asynchat\n  test.test_asyncio\n  test.test_asyncio.__main__\n  test.test_asyncio.echo\n  test.test_asyncio.echo2\n  test.test_asyncio.echo3\n  test.test_asyncio.test_base_events\n  test.test_asyncio.test_events\n  test.test_asyncio.test_futures\n  test.test_asyncio.test_locks\n  test.test_asyncio.test_proactor_events\n  test.test_asyncio.test_queues\n  test.test_asyncio.test_selector_events\n  test.test_asyncio.test_sslproto\n  test.test_asyncio.test_streams\n  test.test_asyncio.test_subprocess\n  test.test_asyncio.test_tasks\n  test.test_asyncio.test_transports\n  test.test_asyncio.test_unix_events\n  test.test_asyncio.test_windows_events\n  test.test_asyncio.test_windows_utils\n  test.test_asyncore\n  test.test_atexit\n  test.test_audioop\n  test.test_augassign\n  test.test_base64\n  test.test_bigaddrspace\n  test.test_bigmem\n  test.test_binascii\n  test.test_binhex\n  test.test_binop\n  test.test_bisect\n  test.test_bool\n  test.test_buffer\n  test.test_bufio\n  test.test_builtin\n  test.test_bytes\n  test.test_bz2\n  test.test_calendar\n  test.test_call\n  test.test_capi\n  test.test_cgi\n  test.test_cgitb\n  test.test_charmapcodec\n  test.test_class\n  test.test_cmath\n  test.test_cmd\n  test.test_cmd_line\n  test.test_cmd_line_script\n  test.test_code\n  test.test_code_module\n  test.test_codeccallbacks\n  test.test_codecencodings_cn\n  test.test_codecencodings_hk\n  test.test_codecencodings_iso2022\n  test.test_codecencodings_jp\n  test.test_codecencodings_kr\n  test.test_codecencodings_tw\n  test.test_codecmaps_cn\n  test.test_codecmaps_hk\n  test.test_codecmaps_jp\n  test.test_codecmaps_kr\n  test.test_codecmaps_tw\n  test.test_codecs\n  test.test_codeop\n  test.test_collections\n  test.test_colorsys\n  test.test_compare\n  test.test_compile\n  test.test_compileall\n  test.test_complex\n  test.test_concurrent_futures\n  test.test_configparser\n  test.test_contains\n  test.test_contextlib\n  test.test_copy\n  test.test_copyreg\n  test.test_cprofile\n  test.test_crashers\n  test.test_crypt\n  test.test_csv\n  test.test_ctypes\n  test.test_curses\n  test.test_datetime\n  test.test_dbm\n  test.test_dbm_dumb\n  test.test_dbm_gnu\n  test.test_dbm_ndbm\n  test.test_decimal\n  test.test_decorators\n  test.test_defaultdict\n  test.test_deque\n  test.test_descr\n  test.test_descrtut\n  test.test_devpoll\n  test.test_dict\n  test.test_dictcomps\n  test.test_dictviews\n  test.test_difflib\n  test.test_dis\n  test.test_distutils\n  test.test_doctest\n  test.test_doctest2\n  test.test_docxmlrpc\n  test.test_dummy_thread\n  test.test_dummy_threading\n  test.test_dynamic\n  test.test_dynamicclassattribute\n  test.test_email\n  test.test_email.__main__\n  test.test_email.test__encoded_words\n  test.test_email.test__header_value_parser\n  test.test_email.test_asian_codecs\n  test.test_email.test_contentmanager\n  test.test_email.test_defect_handling\n  test.test_email.test_email\n  test.test_email.test_generator\n  test.test_email.test_headerregistry\n  test.test_email.test_inversion\n  test.test_email.test_message\n  test.test_email.test_parser\n  test.test_email.test_pickleable\n  test.test_email.test_policy\n  test.test_email.test_utils\n  test.test_email.torture_test\n  test.test_ensurepip\n  test.test_enum\n  test.test_enumerate\n  test.test_eof\n  test.test_epoll\n  test.test_errno\n  test.test_exception_variations\n  test.test_exceptions\n  test.test_extcall\n  test.test_faulthandler\n  test.test_fcntl\n  test.test_file\n  test.test_file_eintr\n  test.test_filecmp\n  test.test_fileinput\n  test.test_fileio\n  test.test_finalization\n  test.test_float\n  test.test_flufl\n  test.test_fnmatch\n  test.test_fork1\n  test.test_format\n  test.test_fractions\n  test.test_frame\n  test.test_ftplib\n  test.test_funcattrs\n  test.test_functools\n  test.test_future\n  test.test_future3\n  test.test_future4\n  test.test_future5\n  test.test_gc\n  test.test_gdb\n  test.test_generators\n  test.test_genericpath\n  test.test_genexps\n  test.test_getargs2\n  test.test_getopt\n  test.test_getpass\n  test.test_gettext\n  test.test_glob\n  test.test_global\n  test.test_grammar\n  test.test_grp\n  test.test_gzip\n  test.test_hash\n  test.test_hashlib\n  test.test_heapq\n  test.test_hmac\n  test.test_html\n  test.test_htmlparser\n  test.test_http_cookiejar\n  test.test_http_cookies\n  test.test_httplib\n  test.test_httpservers\n  test.test_idle\n  test.test_imaplib\n  test.test_imghdr\n  test.test_imp\n  test.test_import\n  test.test_importlib\n  test.test_importlib.__main__\n  test.test_importlib.abc\n  test.test_importlib.builtin\n  test.test_importlib.builtin.__main__\n  test.test_importlib.builtin.test_finder\n  test.test_importlib.builtin.test_loader\n  test.test_importlib.builtin.util\n  test.test_importlib.extension\n  test.test_importlib.extension.__main__\n  test.test_importlib.extension.test_case_sensitivity\n  test.test_importlib.extension.test_finder\n  test.test_importlib.extension.test_loader\n  test.test_importlib.extension.test_path_hook\n  test.test_importlib.extension.util\n  test.test_importlib.frozen\n  test.test_importlib.frozen.__main__\n  test.test_importlib.frozen.test_finder\n  test.test_importlib.frozen.test_loader\n  test.test_importlib.import_\n  test.test_importlib.import_.__main__\n  test.test_importlib.import_.test___loader__\n  test.test_importlib.import_.test___package__\n  test.test_importlib.import_.test_api\n  test.test_importlib.import_.test_caching\n  test.test_importlib.import_.test_fromlist\n  test.test_importlib.import_.test_meta_path\n  test.test_importlib.import_.test_packages\n  test.test_importlib.import_.test_path\n  test.test_importlib.import_.test_relative_imports\n  test.test_importlib.import_.util\n  test.test_importlib.namespace_pkgs.both_portions.foo.one\n  test.test_importlib.namespace_pkgs.both_portions.foo.two\n  test.test_importlib.namespace_pkgs.module_and_namespace_package.a_test\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo.one\n  test.test_importlib.namespace_pkgs.portion1.foo.one\n  test.test_importlib.namespace_pkgs.portion2.foo.two\n  test.test_importlib.namespace_pkgs.project1.parent.child.one\n  test.test_importlib.namespace_pkgs.project2.parent.child.two\n  test.test_importlib.namespace_pkgs.project3.parent.child.three\n  test.test_importlib.regrtest\n  test.test_importlib.source\n  test.test_importlib.source.__main__\n  test.test_importlib.source.test_case_sensitivity\n  test.test_importlib.source.test_file_loader\n  test.test_importlib.source.test_finder\n  test.test_importlib.source.test_path_hook\n  test.test_importlib.source.test_source_encoding\n  test.test_importlib.source.util\n  test.test_importlib.test_abc\n  test.test_importlib.test_api\n  test.test_importlib.test_locks\n  test.test_importlib.test_namespace_pkgs\n  test.test_importlib.test_spec\n  test.test_importlib.test_util\n  test.test_importlib.test_windows\n  test.test_importlib.util\n  test.test_index\n  test.test_inspect\n  test.test_int\n  test.test_int_literal\n  test.test_io\n  test.test_ioctl\n  test.test_ipaddress\n  test.test_isinstance\n  test.test_iter\n  test.test_iterlen\n  test.test_itertools\n  test.test_json\n  test.test_json.__main__\n  test.test_json.test_decode\n  test.test_json.test_default\n  test.test_json.test_dump\n  test.test_json.test_encode_basestring_ascii\n  test.test_json.test_enum\n  test.test_json.test_fail\n  test.test_json.test_float\n  test.test_json.test_indent\n  test.test_json.test_pass1\n  test.test_json.test_pass2\n  test.test_json.test_pass3\n  test.test_json.test_recursion\n  test.test_json.test_scanstring\n  test.test_json.test_separators\n  test.test_json.test_speedups\n  test.test_json.test_tool\n  test.test_json.test_unicode\n  test.test_keyword\n  test.test_keywordonlyarg\n  test.test_kqueue\n  test.test_largefile\n  test.test_lib2to3\n  test.test_linecache\n  test.test_list\n  test.test_listcomps\n  test.test_locale\n  test.test_logging\n  test.test_long\n  test.test_longexp\n  test.test_lzma\n  test.test_macpath\n  test.test_macurl2path\n  test.test_mailbox\n  test.test_mailcap\n  test.test_marshal\n  test.test_math\n  test.test_memoryio\n  test.test_memoryview\n  test.test_metaclass\n  test.test_mimetypes\n  test.test_minidom\n  test.test_mmap\n  test.test_module\n  test.test_modulefinder\n  test.test_msilib\n  test.test_multibytecodec\n  test.test_multiprocessing_fork\n  test.test_multiprocessing_forkserver\n  test.test_multiprocessing_main_handling\n  test.test_multiprocessing_spawn\n  test.test_netrc\n  test.test_nis\n  test.test_nntplib\n  test.test_normalization\n  test.test_ntpath\n  test.test_numeric_tower\n  test.test_opcodes\n  test.test_openpty\n  test.test_operator\n  test.test_optparse\n  test.test_ordered_dict\n  test.test_os\n  test.test_ossaudiodev\n  test.test_osx_env\n  test.test_parser\n  test.test_pathlib\n  test.test_pdb\n  test.test_peepholer\n  test.test_pep247\n  test.test_pep277\n  test.test_pep292\n  test.test_pep3120\n  test.test_pep3131\n  test.test_pep3151\n  test.test_pep352\n  test.test_pep380\n  test.test_pickle\n  test.test_pickletools\n  test.test_pipes\n  test.test_pkg\n  test.test_pkgimport\n  test.test_pkgutil\n  test.test_platform\n  test.test_plistlib\n  test.test_poll\n  test.test_popen\n  test.test_poplib\n  test.test_posix\n  test.test_posixpath\n  test.test_pow\n  test.test_pprint\n  test.test_print\n  test.test_profile\n  test.test_property\n  test.test_pstats\n  test.test_pty\n  test.test_pulldom\n  test.test_pwd\n  test.test_py_compile\n  test.test_pyclbr\n  test.test_pydoc\n  test.test_pyexpat\n  test.test_queue\n  test.test_quopri\n  test.test_raise\n  test.test_random\n  test.test_range\n  test.test_re\n  test.test_readline\n  test.test_regrtest\n  test.test_reprlib\n  test.test_resource\n  test.test_richcmp\n  test.test_rlcompleter\n  test.test_robotparser\n  test.test_runpy\n  test.test_sax\n  test.test_sched\n  test.test_scope\n  test.test_script_helper\n  test.test_select\n  test.test_selectors\n  test.test_set\n  test.test_setcomps\n  test.test_shelve\n  test.test_shlex\n  test.test_shutil\n  test.test_signal\n  test.test_site\n  test.test_slice\n  test.test_smtpd\n  test.test_smtplib\n  test.test_smtpnet\n  test.test_sndhdr\n  test.test_socket\n  test.test_socketserver\n  test.test_sort\n  test.test_source_encoding\n  test.test_spwd\n  test.test_sqlite\n  test.test_ssl\n  test.test_startfile\n  test.test_stat\n  test.test_statistics\n  test.test_strftime\n  test.test_string\n  test.test_stringprep\n  test.test_strlit\n  test.test_strptime\n  test.test_strtod\n  test.test_struct\n  test.test_structmembers\n  test.test_structseq\n  test.test_subprocess\n  test.test_sunau\n  test.test_sundry\n  test.test_super\n  test.test_support\n  test.test_symtable\n  test.test_syntax\n  test.test_sys\n  test.test_sys_setprofile\n  test.test_sys_settrace\n  test.test_sysconfig\n  test.test_syslog\n  test.test_tarfile\n  test.test_tcl\n  test.test_telnetlib\n  test.test_tempfile\n  test.test_textwrap\n  test.test_thread\n  test.test_threaded_import\n  test.test_threadedtempfile\n  test.test_threading\n  test.test_threading_local\n  test.test_threadsignals\n  test.test_time\n  test.test_timeit\n  test.test_timeout\n  test.test_tk\n  test.test_tokenize\n  test.test_trace\n  test.test_traceback\n  test.test_tracemalloc\n  test.test_ttk_guionly\n  test.test_ttk_textonly\n  test.test_tuple\n  test.test_typechecks\n  test.test_types\n  test.test_ucn\n  test.test_unary\n  test.test_unicode\n  test.test_unicode_file\n  test.test_unicodedata\n  test.test_unittest\n  test.test_univnewlines\n  test.test_unpack\n  test.test_unpack_ex\n  test.test_urllib\n  test.test_urllib2\n  test.test_urllib2_localnet\n  test.test_urllib2net\n  test.test_urllib_response\n  test.test_urllibnet\n  test.test_urlparse\n  test.test_userdict\n  test.test_userlist\n  test.test_userstring\n  test.test_uu\n  test.test_uuid\n  test.test_venv\n  test.test_wait3\n  test.test_wait4\n  test.test_warnings\n  test.test_wave\n  test.test_weakref\n  test.test_weakset\n  test.test_webbrowser\n  test.test_winreg\n  test.test_winsound\n  test.test_with\n  test.test_wsgiref\n  test.test_xdrlib\n  test.test_xml_dom_minicompat\n  test.test_xml_etree\n  test.test_xml_etree_c\n  test.test_xmlrpc\n  test.test_xmlrpc_net\n  test.test_zipfile\n  test.test_zipfile64\n  test.test_zipimport\n  test.test_zipimport_support\n  test.test_zlib\n  test.testcodec\n  test.tf_inherit_check\n  test.threaded_import_hangers\n  test.time_hashlib\n  test.tracedmodules\n  test.tracedmodules.testmod\n  test.warning_tests\n  test.win_console_handler\n  test.xmltests\n  textwrap\n  this\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.__main__\n  tkinter._fix\n  tkinter.colorchooser\n  tkinter.commondialog\n  tkinter.constants\n  tkinter.dialog\n  tkinter.dnd\n  tkinter.filedialog\n  tkinter.font\n  tkinter.messagebox\n  tkinter.scrolledtext\n  tkinter.simpledialog\n  tkinter.test\n  tkinter.test.runtktests\n  tkinter.test.support\n  tkinter.test.test_tkinter\n  tkinter.test.test_tkinter.test_font\n  tkinter.test.test_tkinter.test_geometry_managers\n  tkinter.test.test_tkinter.test_images\n  tkinter.test.test_tkinter.test_loadtk\n  tkinter.test.test_tkinter.test_misc\n  tkinter.test.test_tkinter.test_text\n  tkinter.test.test_tkinter.test_variables\n  tkinter.test.test_tkinter.test_widgets\n  tkinter.test.test_ttk\n  tkinter.test.test_ttk.test_extensions\n  tkinter.test.test_ttk.test_functions\n  tkinter.test.test_ttk.test_style\n  tkinter.test.test_ttk.test_widgets\n  tkinter.test.widget_tests\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tracemalloc\n  tty\n  turtle\n  turtledemo\n  turtledemo.__main__\n  turtledemo.bytedesign\n  turtledemo.chaos\n  turtledemo.clock\n  turtledemo.colormixer\n  turtledemo.forest\n  turtledemo.fractalcurves\n  turtledemo.lindenmayer\n  turtledemo.minimal_hanoi\n  turtledemo.nim\n  turtledemo.paint\n  turtledemo.peace\n  turtledemo.penrose\n  turtledemo.planet_and_moon\n  turtledemo.round_dance\n  turtledemo.tree\n  turtledemo.two_canvases\n  turtledemo.wikipedia\n  turtledemo.yinyang\n  types\n  unicodedata\n  unittest\n  unittest.__main__\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.mock\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.test\n  unittest.test.__main__\n  unittest.test._test_warnings\n  unittest.test.dummy\n  unittest.test.support\n  unittest.test.test_assertions\n  unittest.test.test_break\n  unittest.test.test_case\n  unittest.test.test_discovery\n  unittest.test.test_functiontestcase\n  unittest.test.test_loader\n  unittest.test.test_program\n  unittest.test.test_result\n  unittest.test.test_runner\n  unittest.test.test_setups\n  unittest.test.test_skipping\n  unittest.test.test_suite\n  unittest.test.testmock\n  unittest.test.testmock.__main__\n  unittest.test.testmock.support\n  unittest.test.testmock.testcallable\n  unittest.test.testmock.testhelpers\n  unittest.test.testmock.testmagicmethods\n  unittest.test.testmock.testmock\n  unittest.test.testmock.testpatch\n  unittest.test.testmock.testsentinel\n  unittest.test.testmock.testwith\n  unittest.util\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  venv.__main__\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc\n  xmlrpc.client\n  xmlrpc.server\n  xxlimited\n  xxsubtype\n  zipfile\n  zipimport\n  zlib`,3.5:`__future__\n  __main__\n  _ast\n  _bisect\n  _bootlocale\n  _bz2\n  _codecs\n  _codecs_cn\n  _codecs_hk\n  _codecs_iso2022\n  _codecs_jp\n  _codecs_kr\n  _codecs_tw\n  _collections\n  _collections_abc\n  _compat_pickle\n  _compression\n  _crypt\n  _csv\n  _ctypes\n  _ctypes_test\n  _curses\n  _curses_panel\n  _datetime\n  _dbm\n  _decimal\n  _dummy_thread\n  _elementtree\n  _frozen_importlib\n  _frozen_importlib_external\n  _functools\n  _gdbm\n  _hashlib\n  _heapq\n  _imp\n  _io\n  _json\n  _locale\n  _lsprof\n  _lzma\n  _markupbase\n  _md5\n  _multibytecodec\n  _multiprocessing\n  _opcode\n  _operator\n  _osx_support\n  _pickle\n  _posixsubprocess\n  _pydecimal\n  _pyio\n  _random\n  _sha1\n  _sha256\n  _sha512\n  _signal\n  _sitebuiltins\n  _socket\n  _sqlite3\n  _sre\n  _ssl\n  _stat\n  _string\n  _strptime\n  _struct\n  _symtable\n  _sysconfigdata\n  _testbuffer\n  _testcapi\n  _testimportmultiple\n  _testmultiphase\n  _thread\n  _threading_local\n  _tkinter\n  _tracemalloc\n  _warnings\n  _weakref\n  _weakrefset\n  abc\n  aifc\n  antigravity\n  argparse\n  array\n  ast\n  asynchat\n  asyncio\n  asyncio.base_events\n  asyncio.base_subprocess\n  asyncio.compat\n  asyncio.constants\n  asyncio.coroutines\n  asyncio.events\n  asyncio.futures\n  asyncio.locks\n  asyncio.log\n  asyncio.proactor_events\n  asyncio.protocols\n  asyncio.queues\n  asyncio.selector_events\n  asyncio.sslproto\n  asyncio.streams\n  asyncio.subprocess\n  asyncio.tasks\n  asyncio.test_utils\n  asyncio.transports\n  asyncio.unix_events\n  asyncio.windows_events\n  asyncio.windows_utils\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.__main__\n  collections.abc\n  colorsys\n  compileall\n  concurrent\n  concurrent.futures\n  concurrent.futures._base\n  concurrent.futures.process\n  concurrent.futures.thread\n  configparser\n  contextlib\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.test\n  ctypes.test.__main__\n  ctypes.test.test_anon\n  ctypes.test.test_array_in_pointer\n  ctypes.test.test_arrays\n  ctypes.test.test_as_parameter\n  ctypes.test.test_bitfields\n  ctypes.test.test_buffers\n  ctypes.test.test_bytes\n  ctypes.test.test_byteswap\n  ctypes.test.test_callbacks\n  ctypes.test.test_cast\n  ctypes.test.test_cfuncs\n  ctypes.test.test_checkretval\n  ctypes.test.test_delattr\n  ctypes.test.test_errno\n  ctypes.test.test_find\n  ctypes.test.test_frombuffer\n  ctypes.test.test_funcptr\n  ctypes.test.test_functions\n  ctypes.test.test_incomplete\n  ctypes.test.test_init\n  ctypes.test.test_internals\n  ctypes.test.test_keeprefs\n  ctypes.test.test_libc\n  ctypes.test.test_loading\n  ctypes.test.test_macholib\n  ctypes.test.test_memfunctions\n  ctypes.test.test_numbers\n  ctypes.test.test_objects\n  ctypes.test.test_parameters\n  ctypes.test.test_pep3118\n  ctypes.test.test_pickling\n  ctypes.test.test_pointers\n  ctypes.test.test_prototypes\n  ctypes.test.test_python_api\n  ctypes.test.test_random_things\n  ctypes.test.test_refcounts\n  ctypes.test.test_repr\n  ctypes.test.test_returnfuncptrs\n  ctypes.test.test_simplesubclasses\n  ctypes.test.test_sizes\n  ctypes.test.test_slicing\n  ctypes.test.test_stringptr\n  ctypes.test.test_strings\n  ctypes.test.test_struct_fields\n  ctypes.test.test_structures\n  ctypes.test.test_unaligned_structures\n  ctypes.test.test_unicode\n  ctypes.test.test_values\n  ctypes.test.test_varsize_struct\n  ctypes.test.test_win32\n  ctypes.test.test_wintypes\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils._msvccompiler\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_cygwinccompiler\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_extension\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_log\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_msvccompiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  doctest\n  dummy_threading\n  email\n  email._encoded_words\n  email._header_value_parser\n  email._parseaddr\n  email._policybase\n  email.base64mime\n  email.charset\n  email.contentmanager\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.policy\n  email.quoprimime\n  email.utils\n  encodings\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1125\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp273\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp65001\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_t\n  encodings.koi8_u\n  encodings.kz1048\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_centeuro\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.unicode_internal\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip.__main__\n  ensurepip._uninstall\n  enum\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fpectl\n  fractions\n  ftplib\n  functools\n  gc\n  genericpath\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  idlelib\n  idlelib.AutoComplete\n  idlelib.AutoCompleteWindow\n  idlelib.AutoExpand\n  idlelib.Bindings\n  idlelib.CallTipWindow\n  idlelib.CallTips\n  idlelib.ClassBrowser\n  idlelib.CodeContext\n  idlelib.ColorDelegator\n  idlelib.Debugger\n  idlelib.Delegator\n  idlelib.EditorWindow\n  idlelib.FileList\n  idlelib.FormatParagraph\n  idlelib.GrepDialog\n  idlelib.HyperParser\n  idlelib.IOBinding\n  idlelib.IdleHistory\n  idlelib.MultiCall\n  idlelib.MultiStatusBar\n  idlelib.ObjectBrowser\n  idlelib.OutputWindow\n  idlelib.ParenMatch\n  idlelib.PathBrowser\n  idlelib.Percolator\n  idlelib.PyParse\n  idlelib.PyShell\n  idlelib.RemoteDebugger\n  idlelib.RemoteObjectBrowser\n  idlelib.ReplaceDialog\n  idlelib.RstripExtension\n  idlelib.ScriptBinding\n  idlelib.ScrolledList\n  idlelib.SearchDialog\n  idlelib.SearchDialogBase\n  idlelib.SearchEngine\n  idlelib.StackViewer\n  idlelib.ToolTip\n  idlelib.TreeWidget\n  idlelib.UndoDelegator\n  idlelib.WidgetRedirector\n  idlelib.WindowList\n  idlelib.ZoomHeight\n  idlelib.__main__\n  idlelib.aboutDialog\n  idlelib.configDialog\n  idlelib.configHandler\n  idlelib.configHelpSourceEdit\n  idlelib.configSectionNameDialog\n  idlelib.dynOptionMenuWidget\n  idlelib.help\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_calltips\n  idlelib.idle_test.test_config_help\n  idlelib.idle_test.test_config_name\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editmenu\n  idlelib.idle_test.test_editor\n  idlelib.idle_test.test_formatparagraph\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_help_about\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_idlehistory\n  idlelib.idle_test.test_io\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_percolator\n  idlelib.idle_test.test_replacedialog\n  idlelib.idle_test.test_rstrip\n  idlelib.idle_test.test_searchdialog\n  idlelib.idle_test.test_searchdialogbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_undodelegator\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_widgetredir\n  idlelib.idlever\n  idlelib.keybindingDialog\n  idlelib.macosxSupport\n  idlelib.rpc\n  idlelib.run\n  idlelib.tabbedpages\n  idlelib.textView\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib._bootstrap\n  importlib._bootstrap_external\n  importlib.abc\n  importlib.machinery\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  json.decoder\n  json.encoder\n  json.scanner\n  json.tool\n  keyword\n  lib2to3\n  lib2to3.__main__\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_reload\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.__main__\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  macpath\n  macurl2path\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.context\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forkserver\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.popen_fork\n  multiprocessing.popen_forkserver\n  multiprocessing.popen_spawn_posix\n  multiprocessing.popen_spawn_win32\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.resource_sharer\n  multiprocessing.semaphore_tracker\n  multiprocessing.sharedctypes\n  multiprocessing.spawn\n  multiprocessing.synchronize\n  multiprocessing.util\n  netrc\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pathlib\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  pyexpat\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  select\n  selectors\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sqlite3.test\n  sqlite3.test.dbapi\n  sqlite3.test.dump\n  sqlite3.test.factory\n  sqlite3.test.hooks\n  sqlite3.test.regression\n  sqlite3.test.transactions\n  sqlite3.test.types\n  sqlite3.test.userfunctions\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statistics\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.__main__\n  test._test_multiprocessing\n  test.audiotests\n  test.autotest\n  test.bad_coding\n  test.bad_coding2\n  test.badsyntax_3131\n  test.badsyntax_async1\n  test.badsyntax_async2\n  test.badsyntax_async3\n  test.badsyntax_async4\n  test.badsyntax_async5\n  test.badsyntax_async6\n  test.badsyntax_async7\n  test.badsyntax_async8\n  test.badsyntax_future10\n  test.badsyntax_future3\n  test.badsyntax_future4\n  test.badsyntax_future5\n  test.badsyntax_future6\n  test.badsyntax_future7\n  test.badsyntax_future8\n  test.badsyntax_future9\n  test.badsyntax_pep3120\n  test.bisect\n  test.bytecode_helper\n  test.coding20731\n  test.curses_tests\n  test.datetimetester\n  test.dis_module\n  test.doctest_aliases\n  test.double_const\n  test.eintrdata.eintr_tester\n  test.encoded_modules\n  test.encoded_modules.module_iso_8859_1\n  test.encoded_modules.module_koi8_r\n  test.final_a\n  test.final_b\n  test.fork_wait\n  test.future_test1\n  test.future_test2\n  test.gdb_sample\n  test.imp_dummy\n  test.inspect_fodder\n  test.inspect_fodder2\n  test.list_tests\n  test.lock_tests\n  test.make_ssl_certs\n  test.mapping_tests\n  test.memory_watchdog\n  test.mock_socket\n  test.mod_generics_cache\n  test.mp_fork_bomb\n  test.mp_preload\n  test.multibytecodec_support\n  test.outstanding_bugs\n  test.pickletester\n  test.profilee\n  test.pyclbr_input\n  test.pydoc_mod\n  test.pydocfodder\n  test.pystone\n  test.re_tests\n  test.regrtest\n  test.relimport\n  test.reperf\n  test.sample_doctest\n  test.sample_doctest_no_docstrings\n  test.sample_doctest_no_doctests\n  test.seq_tests\n  test.sortperf\n  test.ssl_servers\n  test.ssltests\n  test.string_tests\n  test.subprocessdata.fd_status\n  test.subprocessdata.input_reader\n  test.subprocessdata.qcat\n  test.subprocessdata.qgrep\n  test.subprocessdata.sigchild_ignore\n  test.support\n  test.support.script_helper\n  test.test___all__\n  test.test___future__\n  test.test__locale\n  test.test__opcode\n  test.test__osx_support\n  test.test_abc\n  test.test_abstract_numbers\n  test.test_aifc\n  test.test_argparse\n  test.test_array\n  test.test_asdl_parser\n  test.test_ast\n  test.test_asynchat\n  test.test_asyncio\n  test.test_asyncio.__main__\n  test.test_asyncio.echo\n  test.test_asyncio.echo2\n  test.test_asyncio.echo3\n  test.test_asyncio.test_base_events\n  test.test_asyncio.test_events\n  test.test_asyncio.test_futures\n  test.test_asyncio.test_locks\n  test.test_asyncio.test_pep492\n  test.test_asyncio.test_proactor_events\n  test.test_asyncio.test_queues\n  test.test_asyncio.test_selector_events\n  test.test_asyncio.test_sslproto\n  test.test_asyncio.test_streams\n  test.test_asyncio.test_subprocess\n  test.test_asyncio.test_tasks\n  test.test_asyncio.test_transports\n  test.test_asyncio.test_unix_events\n  test.test_asyncio.test_windows_events\n  test.test_asyncio.test_windows_utils\n  test.test_asyncore\n  test.test_atexit\n  test.test_audioop\n  test.test_augassign\n  test.test_base64\n  test.test_bigaddrspace\n  test.test_bigmem\n  test.test_binascii\n  test.test_binhex\n  test.test_binop\n  test.test_bisect\n  test.test_bool\n  test.test_buffer\n  test.test_bufio\n  test.test_builtin\n  test.test_bytes\n  test.test_bz2\n  test.test_calendar\n  test.test_call\n  test.test_capi\n  test.test_cgi\n  test.test_cgitb\n  test.test_charmapcodec\n  test.test_class\n  test.test_cmath\n  test.test_cmd\n  test.test_cmd_line\n  test.test_cmd_line_script\n  test.test_code\n  test.test_code_module\n  test.test_codeccallbacks\n  test.test_codecencodings_cn\n  test.test_codecencodings_hk\n  test.test_codecencodings_iso2022\n  test.test_codecencodings_jp\n  test.test_codecencodings_kr\n  test.test_codecencodings_tw\n  test.test_codecmaps_cn\n  test.test_codecmaps_hk\n  test.test_codecmaps_jp\n  test.test_codecmaps_kr\n  test.test_codecmaps_tw\n  test.test_codecs\n  test.test_codeop\n  test.test_collections\n  test.test_colorsys\n  test.test_compare\n  test.test_compile\n  test.test_compileall\n  test.test_complex\n  test.test_concurrent_futures\n  test.test_configparser\n  test.test_contains\n  test.test_contextlib\n  test.test_copy\n  test.test_copyreg\n  test.test_coroutines\n  test.test_cprofile\n  test.test_crashers\n  test.test_crypt\n  test.test_csv\n  test.test_ctypes\n  test.test_curses\n  test.test_datetime\n  test.test_dbm\n  test.test_dbm_dumb\n  test.test_dbm_gnu\n  test.test_dbm_ndbm\n  test.test_decimal\n  test.test_decorators\n  test.test_defaultdict\n  test.test_deque\n  test.test_descr\n  test.test_descrtut\n  test.test_devpoll\n  test.test_dict\n  test.test_dictcomps\n  test.test_dictviews\n  test.test_difflib\n  test.test_dis\n  test.test_distutils\n  test.test_doctest\n  test.test_doctest2\n  test.test_docxmlrpc\n  test.test_dummy_thread\n  test.test_dummy_threading\n  test.test_dynamic\n  test.test_dynamicclassattribute\n  test.test_eintr\n  test.test_email\n  test.test_email.__main__\n  test.test_email.test__encoded_words\n  test.test_email.test__header_value_parser\n  test.test_email.test_asian_codecs\n  test.test_email.test_contentmanager\n  test.test_email.test_defect_handling\n  test.test_email.test_email\n  test.test_email.test_generator\n  test.test_email.test_headerregistry\n  test.test_email.test_inversion\n  test.test_email.test_message\n  test.test_email.test_parser\n  test.test_email.test_pickleable\n  test.test_email.test_policy\n  test.test_email.test_utils\n  test.test_email.torture_test\n  test.test_ensurepip\n  test.test_enum\n  test.test_enumerate\n  test.test_eof\n  test.test_epoll\n  test.test_errno\n  test.test_exception_variations\n  test.test_exceptions\n  test.test_extcall\n  test.test_faulthandler\n  test.test_fcntl\n  test.test_file\n  test.test_file_eintr\n  test.test_filecmp\n  test.test_fileinput\n  test.test_fileio\n  test.test_finalization\n  test.test_float\n  test.test_flufl\n  test.test_fnmatch\n  test.test_fork1\n  test.test_format\n  test.test_fractions\n  test.test_frame\n  test.test_ftplib\n  test.test_funcattrs\n  test.test_functools\n  test.test_future\n  test.test_future3\n  test.test_future4\n  test.test_future5\n  test.test_gc\n  test.test_gdb\n  test.test_generators\n  test.test_genericpath\n  test.test_genexps\n  test.test_getargs2\n  test.test_getopt\n  test.test_getpass\n  test.test_gettext\n  test.test_glob\n  test.test_global\n  test.test_grammar\n  test.test_grp\n  test.test_gzip\n  test.test_hash\n  test.test_hashlib\n  test.test_heapq\n  test.test_hmac\n  test.test_html\n  test.test_htmlparser\n  test.test_http_cookiejar\n  test.test_http_cookies\n  test.test_httplib\n  test.test_httpservers\n  test.test_idle\n  test.test_imaplib\n  test.test_imghdr\n  test.test_imp\n  test.test_import\n  test.test_import.__main__\n  test.test_import.data.circular_imports.basic\n  test.test_import.data.circular_imports.basic2\n  test.test_import.data.circular_imports.indirect\n  test.test_import.data.circular_imports.rebinding\n  test.test_import.data.circular_imports.rebinding2\n  test.test_import.data.circular_imports.subpackage\n  test.test_import.data.circular_imports.subpkg.subpackage2\n  test.test_import.data.circular_imports.subpkg.util\n  test.test_import.data.circular_imports.util\n  test.test_import.data.package2.submodule1\n  test.test_import.data.package2.submodule2\n  test.test_importlib\n  test.test_importlib.__main__\n  test.test_importlib.abc\n  test.test_importlib.builtin\n  test.test_importlib.builtin.__main__\n  test.test_importlib.builtin.test_finder\n  test.test_importlib.builtin.test_loader\n  test.test_importlib.extension\n  test.test_importlib.extension.__main__\n  test.test_importlib.extension.test_case_sensitivity\n  test.test_importlib.extension.test_finder\n  test.test_importlib.extension.test_loader\n  test.test_importlib.extension.test_path_hook\n  test.test_importlib.frozen\n  test.test_importlib.frozen.__main__\n  test.test_importlib.frozen.test_finder\n  test.test_importlib.frozen.test_loader\n  test.test_importlib.import_\n  test.test_importlib.import_.__main__\n  test.test_importlib.import_.test___loader__\n  test.test_importlib.import_.test___package__\n  test.test_importlib.import_.test_api\n  test.test_importlib.import_.test_caching\n  test.test_importlib.import_.test_fromlist\n  test.test_importlib.import_.test_meta_path\n  test.test_importlib.import_.test_packages\n  test.test_importlib.import_.test_path\n  test.test_importlib.import_.test_relative_imports\n  test.test_importlib.namespace_pkgs.both_portions.foo.one\n  test.test_importlib.namespace_pkgs.both_portions.foo.two\n  test.test_importlib.namespace_pkgs.module_and_namespace_package.a_test\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo.one\n  test.test_importlib.namespace_pkgs.portion1.foo.one\n  test.test_importlib.namespace_pkgs.portion2.foo.two\n  test.test_importlib.namespace_pkgs.project1.parent.child.one\n  test.test_importlib.namespace_pkgs.project2.parent.child.two\n  test.test_importlib.namespace_pkgs.project3.parent.child.three\n  test.test_importlib.regrtest\n  test.test_importlib.source\n  test.test_importlib.source.__main__\n  test.test_importlib.source.test_case_sensitivity\n  test.test_importlib.source.test_file_loader\n  test.test_importlib.source.test_finder\n  test.test_importlib.source.test_path_hook\n  test.test_importlib.source.test_source_encoding\n  test.test_importlib.test_abc\n  test.test_importlib.test_api\n  test.test_importlib.test_lazy\n  test.test_importlib.test_locks\n  test.test_importlib.test_namespace_pkgs\n  test.test_importlib.test_spec\n  test.test_importlib.test_util\n  test.test_importlib.test_windows\n  test.test_importlib.util\n  test.test_index\n  test.test_inspect\n  test.test_int\n  test.test_int_literal\n  test.test_io\n  test.test_ioctl\n  test.test_ipaddress\n  test.test_isinstance\n  test.test_iter\n  test.test_iterlen\n  test.test_itertools\n  test.test_json\n  test.test_json.__main__\n  test.test_json.test_decode\n  test.test_json.test_default\n  test.test_json.test_dump\n  test.test_json.test_encode_basestring_ascii\n  test.test_json.test_enum\n  test.test_json.test_fail\n  test.test_json.test_float\n  test.test_json.test_indent\n  test.test_json.test_pass1\n  test.test_json.test_pass2\n  test.test_json.test_pass3\n  test.test_json.test_recursion\n  test.test_json.test_scanstring\n  test.test_json.test_separators\n  test.test_json.test_speedups\n  test.test_json.test_tool\n  test.test_json.test_unicode\n  test.test_keyword\n  test.test_keywordonlyarg\n  test.test_kqueue\n  test.test_largefile\n  test.test_lib2to3\n  test.test_linecache\n  test.test_list\n  test.test_listcomps\n  test.test_locale\n  test.test_logging\n  test.test_long\n  test.test_longexp\n  test.test_lzma\n  test.test_macpath\n  test.test_macurl2path\n  test.test_mailbox\n  test.test_mailcap\n  test.test_marshal\n  test.test_math\n  test.test_memoryio\n  test.test_memoryview\n  test.test_metaclass\n  test.test_mimetypes\n  test.test_minidom\n  test.test_mmap\n  test.test_module\n  test.test_modulefinder\n  test.test_msilib\n  test.test_multibytecodec\n  test.test_multiprocessing_fork\n  test.test_multiprocessing_forkserver\n  test.test_multiprocessing_main_handling\n  test.test_multiprocessing_spawn\n  test.test_netrc\n  test.test_nis\n  test.test_nntplib\n  test.test_normalization\n  test.test_ntpath\n  test.test_numeric_tower\n  test.test_opcodes\n  test.test_openpty\n  test.test_operator\n  test.test_optparse\n  test.test_ordered_dict\n  test.test_os\n  test.test_ossaudiodev\n  test.test_osx_env\n  test.test_parser\n  test.test_pathlib\n  test.test_pdb\n  test.test_peepholer\n  test.test_pep247\n  test.test_pep277\n  test.test_pep3120\n  test.test_pep3131\n  test.test_pep3151\n  test.test_pep352\n  test.test_pep380\n  test.test_pep479\n  test.test_pickle\n  test.test_pickletools\n  test.test_pipes\n  test.test_pkg\n  test.test_pkgimport\n  test.test_pkgutil\n  test.test_platform\n  test.test_plistlib\n  test.test_poll\n  test.test_popen\n  test.test_poplib\n  test.test_posix\n  test.test_posixpath\n  test.test_pow\n  test.test_pprint\n  test.test_print\n  test.test_profile\n  test.test_property\n  test.test_pstats\n  test.test_pty\n  test.test_pulldom\n  test.test_pwd\n  test.test_py_compile\n  test.test_pyclbr\n  test.test_pydoc\n  test.test_pyexpat\n  test.test_queue\n  test.test_quopri\n  test.test_raise\n  test.test_random\n  test.test_range\n  test.test_re\n  test.test_readline\n  test.test_regrtest\n  test.test_reprlib\n  test.test_resource\n  test.test_richcmp\n  test.test_rlcompleter\n  test.test_robotparser\n  test.test_runpy\n  test.test_sax\n  test.test_sched\n  test.test_scope\n  test.test_script_helper\n  test.test_select\n  test.test_selectors\n  test.test_set\n  test.test_setcomps\n  test.test_shelve\n  test.test_shlex\n  test.test_shutil\n  test.test_signal\n  test.test_site\n  test.test_slice\n  test.test_smtpd\n  test.test_smtplib\n  test.test_smtpnet\n  test.test_sndhdr\n  test.test_socket\n  test.test_socketserver\n  test.test_sort\n  test.test_source_encoding\n  test.test_spwd\n  test.test_sqlite\n  test.test_ssl\n  test.test_startfile\n  test.test_stat\n  test.test_statistics\n  test.test_strftime\n  test.test_string\n  test.test_stringprep\n  test.test_strlit\n  test.test_strptime\n  test.test_strtod\n  test.test_struct\n  test.test_structmembers\n  test.test_structseq\n  test.test_subprocess\n  test.test_sunau\n  test.test_sundry\n  test.test_super\n  test.test_support\n  test.test_symtable\n  test.test_syntax\n  test.test_sys\n  test.test_sys_setprofile\n  test.test_sys_settrace\n  test.test_sysconfig\n  test.test_syslog\n  test.test_tarfile\n  test.test_tcl\n  test.test_telnetlib\n  test.test_tempfile\n  test.test_textwrap\n  test.test_thread\n  test.test_threaded_import\n  test.test_threadedtempfile\n  test.test_threading\n  test.test_threading_local\n  test.test_threadsignals\n  test.test_time\n  test.test_timeit\n  test.test_timeout\n  test.test_tix\n  test.test_tk\n  test.test_tokenize\n  test.test_tools\n  test.test_tools.__main__\n  test.test_tools.test_fixcid\n  test.test_tools.test_gprof2html\n  test.test_tools.test_i18n\n  test.test_tools.test_md5sum\n  test.test_tools.test_pdeps\n  test.test_tools.test_pindent\n  test.test_tools.test_reindent\n  test.test_tools.test_sundry\n  test.test_tools.test_unparse\n  test.test_trace\n  test.test_traceback\n  test.test_tracemalloc\n  test.test_ttk_guionly\n  test.test_ttk_textonly\n  test.test_tuple\n  test.test_turtle\n  test.test_typechecks\n  test.test_types\n  test.test_typing\n  test.test_ucn\n  test.test_unary\n  test.test_unicode\n  test.test_unicode_file\n  test.test_unicodedata\n  test.test_unittest\n  test.test_univnewlines\n  test.test_unpack\n  test.test_unpack_ex\n  test.test_urllib\n  test.test_urllib2\n  test.test_urllib2_localnet\n  test.test_urllib2net\n  test.test_urllib_response\n  test.test_urllibnet\n  test.test_urlparse\n  test.test_userdict\n  test.test_userlist\n  test.test_userstring\n  test.test_uu\n  test.test_uuid\n  test.test_venv\n  test.test_wait3\n  test.test_wait4\n  test.test_warnings\n  test.test_warnings.__main__\n  test.test_warnings.data.import_warning\n  test.test_warnings.data.stacklevel\n  test.test_wave\n  test.test_weakref\n  test.test_weakset\n  test.test_webbrowser\n  test.test_winreg\n  test.test_winsound\n  test.test_with\n  test.test_wsgiref\n  test.test_xdrlib\n  test.test_xml_dom_minicompat\n  test.test_xml_etree\n  test.test_xml_etree_c\n  test.test_xmlrpc\n  test.test_xmlrpc_net\n  test.test_zipapp\n  test.test_zipfile\n  test.test_zipfile64\n  test.test_zipimport\n  test.test_zipimport_support\n  test.test_zlib\n  test.testcodec\n  test.tf_inherit_check\n  test.threaded_import_hangers\n  test.time_hashlib\n  test.tracedmodules\n  test.tracedmodules.testmod\n  test.win_console_handler\n  test.xmltests\n  textwrap\n  this\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.__main__\n  tkinter.colorchooser\n  tkinter.commondialog\n  tkinter.constants\n  tkinter.dialog\n  tkinter.dnd\n  tkinter.filedialog\n  tkinter.font\n  tkinter.messagebox\n  tkinter.scrolledtext\n  tkinter.simpledialog\n  tkinter.test\n  tkinter.test.runtktests\n  tkinter.test.support\n  tkinter.test.test_tkinter\n  tkinter.test.test_tkinter.test_font\n  tkinter.test.test_tkinter.test_geometry_managers\n  tkinter.test.test_tkinter.test_images\n  tkinter.test.test_tkinter.test_loadtk\n  tkinter.test.test_tkinter.test_misc\n  tkinter.test.test_tkinter.test_text\n  tkinter.test.test_tkinter.test_variables\n  tkinter.test.test_tkinter.test_widgets\n  tkinter.test.test_ttk\n  tkinter.test.test_ttk.test_extensions\n  tkinter.test.test_ttk.test_functions\n  tkinter.test.test_ttk.test_style\n  tkinter.test.test_ttk.test_widgets\n  tkinter.test.widget_tests\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tracemalloc\n  tty\n  turtle\n  turtledemo\n  turtledemo.__main__\n  turtledemo.bytedesign\n  turtledemo.chaos\n  turtledemo.clock\n  turtledemo.colormixer\n  turtledemo.forest\n  turtledemo.fractalcurves\n  turtledemo.lindenmayer\n  turtledemo.minimal_hanoi\n  turtledemo.nim\n  turtledemo.paint\n  turtledemo.peace\n  turtledemo.penrose\n  turtledemo.planet_and_moon\n  turtledemo.round_dance\n  turtledemo.sorting_animate\n  turtledemo.tree\n  turtledemo.two_canvases\n  turtledemo.wikipedia\n  turtledemo.yinyang\n  types\n  typing\n  unicodedata\n  unittest\n  unittest.__main__\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.mock\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.test\n  unittest.test.__main__\n  unittest.test._test_warnings\n  unittest.test.dummy\n  unittest.test.support\n  unittest.test.test_assertions\n  unittest.test.test_break\n  unittest.test.test_case\n  unittest.test.test_discovery\n  unittest.test.test_functiontestcase\n  unittest.test.test_loader\n  unittest.test.test_program\n  unittest.test.test_result\n  unittest.test.test_runner\n  unittest.test.test_setups\n  unittest.test.test_skipping\n  unittest.test.test_suite\n  unittest.test.testmock\n  unittest.test.testmock.__main__\n  unittest.test.testmock.support\n  unittest.test.testmock.testcallable\n  unittest.test.testmock.testhelpers\n  unittest.test.testmock.testmagicmethods\n  unittest.test.testmock.testmock\n  unittest.test.testmock.testpatch\n  unittest.test.testmock.testsentinel\n  unittest.test.testmock.testwith\n  unittest.util\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  venv.__main__\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc\n  xmlrpc.client\n  xmlrpc.server\n  xxlimited\n  xxsubtype\n  zipapp\n  zipfile\n  zipimport\n  zlib`,3.6:`__future__\n  __main__\n  _ast\n  _asyncio\n  _bisect\n  _blake2\n  _bootlocale\n  _bz2\n  _codecs\n  _codecs_cn\n  _codecs_hk\n  _codecs_iso2022\n  _codecs_jp\n  _codecs_kr\n  _codecs_tw\n  _collections\n  _collections_abc\n  _compat_pickle\n  _compression\n  _crypt\n  _csv\n  _ctypes\n  _ctypes_test\n  _curses\n  _curses_panel\n  _datetime\n  _dbm\n  _decimal\n  _dummy_thread\n  _elementtree\n  _frozen_importlib\n  _frozen_importlib_external\n  _functools\n  _gdbm\n  _hashlib\n  _heapq\n  _imp\n  _io\n  _json\n  _locale\n  _lsprof\n  _lzma\n  _markupbase\n  _md5\n  _multibytecodec\n  _multiprocessing\n  _opcode\n  _operator\n  _osx_support\n  _pickle\n  _posixsubprocess\n  _pydecimal\n  _pyio\n  _random\n  _sha1\n  _sha256\n  _sha3\n  _sha512\n  _signal\n  _sitebuiltins\n  _socket\n  _sqlite3\n  _sre\n  _ssl\n  _stat\n  _string\n  _strptime\n  _struct\n  _symtable\n  _testbuffer\n  _testcapi\n  _testimportmultiple\n  _testmultiphase\n  _thread\n  _threading_local\n  _tkinter\n  _tracemalloc\n  _warnings\n  _weakref\n  _weakrefset\n  abc\n  aifc\n  antigravity\n  argparse\n  array\n  ast\n  asynchat\n  asyncio\n  asyncio.base_events\n  asyncio.base_futures\n  asyncio.base_subprocess\n  asyncio.base_tasks\n  asyncio.compat\n  asyncio.constants\n  asyncio.coroutines\n  asyncio.events\n  asyncio.futures\n  asyncio.locks\n  asyncio.log\n  asyncio.proactor_events\n  asyncio.protocols\n  asyncio.queues\n  asyncio.selector_events\n  asyncio.sslproto\n  asyncio.streams\n  asyncio.subprocess\n  asyncio.tasks\n  asyncio.test_utils\n  asyncio.transports\n  asyncio.unix_events\n  asyncio.windows_events\n  asyncio.windows_utils\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.abc\n  colorsys\n  compileall\n  concurrent\n  concurrent.futures\n  concurrent.futures._base\n  concurrent.futures.process\n  concurrent.futures.thread\n  configparser\n  contextlib\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.test\n  ctypes.test.__main__\n  ctypes.test.test_anon\n  ctypes.test.test_array_in_pointer\n  ctypes.test.test_arrays\n  ctypes.test.test_as_parameter\n  ctypes.test.test_bitfields\n  ctypes.test.test_buffers\n  ctypes.test.test_bytes\n  ctypes.test.test_byteswap\n  ctypes.test.test_callbacks\n  ctypes.test.test_cast\n  ctypes.test.test_cfuncs\n  ctypes.test.test_checkretval\n  ctypes.test.test_delattr\n  ctypes.test.test_errno\n  ctypes.test.test_find\n  ctypes.test.test_frombuffer\n  ctypes.test.test_funcptr\n  ctypes.test.test_functions\n  ctypes.test.test_incomplete\n  ctypes.test.test_init\n  ctypes.test.test_internals\n  ctypes.test.test_keeprefs\n  ctypes.test.test_libc\n  ctypes.test.test_loading\n  ctypes.test.test_macholib\n  ctypes.test.test_memfunctions\n  ctypes.test.test_numbers\n  ctypes.test.test_objects\n  ctypes.test.test_parameters\n  ctypes.test.test_pep3118\n  ctypes.test.test_pickling\n  ctypes.test.test_pointers\n  ctypes.test.test_prototypes\n  ctypes.test.test_python_api\n  ctypes.test.test_random_things\n  ctypes.test.test_refcounts\n  ctypes.test.test_repr\n  ctypes.test.test_returnfuncptrs\n  ctypes.test.test_simplesubclasses\n  ctypes.test.test_sizes\n  ctypes.test.test_slicing\n  ctypes.test.test_stringptr\n  ctypes.test.test_strings\n  ctypes.test.test_struct_fields\n  ctypes.test.test_structures\n  ctypes.test.test_unaligned_structures\n  ctypes.test.test_unicode\n  ctypes.test.test_values\n  ctypes.test.test_varsize_struct\n  ctypes.test.test_win32\n  ctypes.test.test_wintypes\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils._msvccompiler\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_cygwinccompiler\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_extension\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_log\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_msvccompiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  doctest\n  dummy_threading\n  email\n  email._encoded_words\n  email._header_value_parser\n  email._parseaddr\n  email._policybase\n  email.base64mime\n  email.charset\n  email.contentmanager\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.policy\n  email.quoprimime\n  email.utils\n  encodings\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1125\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp273\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp65001\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_t\n  encodings.koi8_u\n  encodings.kz1048\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_centeuro\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.oem\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.unicode_internal\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip.__main__\n  ensurepip._uninstall\n  enum\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fpectl\n  fractions\n  ftplib\n  functools\n  gc\n  genericpath\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  idlelib\n  idlelib.__main__\n  idlelib._pyclbr\n  idlelib.autocomplete\n  idlelib.autocomplete_w\n  idlelib.autoexpand\n  idlelib.browser\n  idlelib.calltip\n  idlelib.calltip_w\n  idlelib.codecontext\n  idlelib.colorizer\n  idlelib.config\n  idlelib.config_key\n  idlelib.configdialog\n  idlelib.debugger\n  idlelib.debugger_r\n  idlelib.debugobj\n  idlelib.debugobj_r\n  idlelib.delegator\n  idlelib.dynoption\n  idlelib.editor\n  idlelib.filelist\n  idlelib.grep\n  idlelib.help\n  idlelib.help_about\n  idlelib.history\n  idlelib.hyperparser\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.template\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autocomplete_w\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_browser\n  idlelib.idle_test.test_calltip\n  idlelib.idle_test.test_calltip_w\n  idlelib.idle_test.test_codecontext\n  idlelib.idle_test.test_colorizer\n  idlelib.idle_test.test_config\n  idlelib.idle_test.test_config_key\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_debugger\n  idlelib.idle_test.test_debugger_r\n  idlelib.idle_test.test_debugobj\n  idlelib.idle_test.test_debugobj_r\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editmenu\n  idlelib.idle_test.test_editor\n  idlelib.idle_test.test_filelist\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_help\n  idlelib.idle_test.test_help_about\n  idlelib.idle_test.test_history\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_iomenu\n  idlelib.idle_test.test_macosx\n  idlelib.idle_test.test_mainmenu\n  idlelib.idle_test.test_multicall\n  idlelib.idle_test.test_outwin\n  idlelib.idle_test.test_paragraph\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_percolator\n  idlelib.idle_test.test_pyparse\n  idlelib.idle_test.test_pyshell\n  idlelib.idle_test.test_query\n  idlelib.idle_test.test_redirector\n  idlelib.idle_test.test_replace\n  idlelib.idle_test.test_rpc\n  idlelib.idle_test.test_rstrip\n  idlelib.idle_test.test_run\n  idlelib.idle_test.test_runscript\n  idlelib.idle_test.test_scrolledlist\n  idlelib.idle_test.test_search\n  idlelib.idle_test.test_searchbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_squeezer\n  idlelib.idle_test.test_stackviewer\n  idlelib.idle_test.test_statusbar\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_tooltip\n  idlelib.idle_test.test_tree\n  idlelib.idle_test.test_undo\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_window\n  idlelib.idle_test.test_zoomheight\n  idlelib.iomenu\n  idlelib.macosx\n  idlelib.mainmenu\n  idlelib.multicall\n  idlelib.outwin\n  idlelib.paragraph\n  idlelib.parenmatch\n  idlelib.pathbrowser\n  idlelib.percolator\n  idlelib.pyparse\n  idlelib.pyshell\n  idlelib.query\n  idlelib.redirector\n  idlelib.replace\n  idlelib.rpc\n  idlelib.rstrip\n  idlelib.run\n  idlelib.runscript\n  idlelib.scrolledlist\n  idlelib.search\n  idlelib.searchbase\n  idlelib.searchengine\n  idlelib.squeezer\n  idlelib.stackviewer\n  idlelib.statusbar\n  idlelib.textview\n  idlelib.tooltip\n  idlelib.tree\n  idlelib.undo\n  idlelib.window\n  idlelib.zoomheight\n  idlelib.zzdummy\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib._bootstrap\n  importlib._bootstrap_external\n  importlib.abc\n  importlib.machinery\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  json.decoder\n  json.encoder\n  json.scanner\n  json.tool\n  keyword\n  lib2to3\n  lib2to3.__main__\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_reload\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.__main__\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  macpath\n  macurl2path\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.context\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forkserver\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.popen_fork\n  multiprocessing.popen_forkserver\n  multiprocessing.popen_spawn_posix\n  multiprocessing.popen_spawn_win32\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.resource_sharer\n  multiprocessing.semaphore_tracker\n  multiprocessing.sharedctypes\n  multiprocessing.spawn\n  multiprocessing.synchronize\n  multiprocessing.util\n  netrc\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pathlib\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  pyexpat\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  secrets\n  select\n  selectors\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sqlite3.test\n  sqlite3.test.dbapi\n  sqlite3.test.dump\n  sqlite3.test.factory\n  sqlite3.test.hooks\n  sqlite3.test.regression\n  sqlite3.test.transactions\n  sqlite3.test.types\n  sqlite3.test.userfunctions\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statistics\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.__main__\n  test._test_multiprocessing\n  test.ann_module\n  test.ann_module2\n  test.ann_module3\n  test.audiotests\n  test.autotest\n  test.bad_coding\n  test.bad_coding2\n  test.badsyntax_3131\n  test.badsyntax_future10\n  test.badsyntax_future3\n  test.badsyntax_future4\n  test.badsyntax_future5\n  test.badsyntax_future6\n  test.badsyntax_future7\n  test.badsyntax_future8\n  test.badsyntax_future9\n  test.badsyntax_pep3120\n  test.bisect\n  test.bytecode_helper\n  test.coding20731\n  test.curses_tests\n  test.datetimetester\n  test.dis_module\n  test.doctest_aliases\n  test.double_const\n  test.dtracedata.call_stack\n  test.dtracedata.gc\n  test.dtracedata.instance\n  test.dtracedata.line\n  test.eintrdata.eintr_tester\n  test.encoded_modules\n  test.encoded_modules.module_iso_8859_1\n  test.encoded_modules.module_koi8_r\n  test.final_a\n  test.final_b\n  test.fork_wait\n  test.future_test1\n  test.future_test2\n  test.gdb_sample\n  test.imp_dummy\n  test.inspect_fodder\n  test.inspect_fodder2\n  test.libregrtest\n  test.libregrtest.cmdline\n  test.libregrtest.main\n  test.libregrtest.refleak\n  test.libregrtest.runtest\n  test.libregrtest.runtest_mp\n  test.libregrtest.save_env\n  test.libregrtest.setup\n  test.libregrtest.utils\n  test.list_tests\n  test.lock_tests\n  test.make_ssl_certs\n  test.mapping_tests\n  test.memory_watchdog\n  test.mock_socket\n  test.mod_generics_cache\n  test.mp_fork_bomb\n  test.mp_preload\n  test.multibytecodec_support\n  test.outstanding_bugs\n  test.pickletester\n  test.profilee\n  test.pyclbr_input\n  test.pydoc_mod\n  test.pydocfodder\n  test.pystone\n  test.pythoninfo\n  test.re_tests\n  test.regrtest\n  test.relimport\n  test.reperf\n  test.sample_doctest\n  test.sample_doctest_no_docstrings\n  test.sample_doctest_no_doctests\n  test.seq_tests\n  test.signalinterproctester\n  test.sortperf\n  test.ssl_servers\n  test.ssltests\n  test.string_tests\n  test.subprocessdata.fd_status\n  test.subprocessdata.input_reader\n  test.subprocessdata.qcat\n  test.subprocessdata.qgrep\n  test.subprocessdata.sigchild_ignore\n  test.support\n  test.support.script_helper\n  test.support.testresult\n  test.test___all__\n  test.test___future__\n  test.test__locale\n  test.test__opcode\n  test.test__osx_support\n  test.test_abc\n  test.test_abstract_numbers\n  test.test_aifc\n  test.test_argparse\n  test.test_array\n  test.test_asdl_parser\n  test.test_ast\n  test.test_asyncgen\n  test.test_asynchat\n  test.test_asyncio\n  test.test_asyncio.__main__\n  test.test_asyncio.echo\n  test.test_asyncio.echo2\n  test.test_asyncio.echo3\n  test.test_asyncio.test_base_events\n  test.test_asyncio.test_events\n  test.test_asyncio.test_futures\n  test.test_asyncio.test_locks\n  test.test_asyncio.test_pep492\n  test.test_asyncio.test_proactor_events\n  test.test_asyncio.test_queues\n  test.test_asyncio.test_selector_events\n  test.test_asyncio.test_sslproto\n  test.test_asyncio.test_streams\n  test.test_asyncio.test_subprocess\n  test.test_asyncio.test_tasks\n  test.test_asyncio.test_transports\n  test.test_asyncio.test_unix_events\n  test.test_asyncio.test_windows_events\n  test.test_asyncio.test_windows_utils\n  test.test_asyncore\n  test.test_atexit\n  test.test_audioop\n  test.test_augassign\n  test.test_base64\n  test.test_baseexception\n  test.test_bdb\n  test.test_bigaddrspace\n  test.test_bigmem\n  test.test_binascii\n  test.test_binhex\n  test.test_binop\n  test.test_bisect\n  test.test_bool\n  test.test_buffer\n  test.test_bufio\n  test.test_builtin\n  test.test_bytes\n  test.test_bz2\n  test.test_calendar\n  test.test_call\n  test.test_capi\n  test.test_cgi\n  test.test_cgitb\n  test.test_charmapcodec\n  test.test_class\n  test.test_cmath\n  test.test_cmd\n  test.test_cmd_line\n  test.test_cmd_line_script\n  test.test_code\n  test.test_code_module\n  test.test_codeccallbacks\n  test.test_codecencodings_cn\n  test.test_codecencodings_hk\n  test.test_codecencodings_iso2022\n  test.test_codecencodings_jp\n  test.test_codecencodings_kr\n  test.test_codecencodings_tw\n  test.test_codecmaps_cn\n  test.test_codecmaps_hk\n  test.test_codecmaps_jp\n  test.test_codecmaps_kr\n  test.test_codecmaps_tw\n  test.test_codecs\n  test.test_codeop\n  test.test_collections\n  test.test_colorsys\n  test.test_compare\n  test.test_compile\n  test.test_compileall\n  test.test_complex\n  test.test_concurrent_futures\n  test.test_configparser\n  test.test_contains\n  test.test_contextlib\n  test.test_copy\n  test.test_copyreg\n  test.test_coroutines\n  test.test_cprofile\n  test.test_crashers\n  test.test_crypt\n  test.test_csv\n  test.test_ctypes\n  test.test_curses\n  test.test_datetime\n  test.test_dbm\n  test.test_dbm_dumb\n  test.test_dbm_gnu\n  test.test_dbm_ndbm\n  test.test_decimal\n  test.test_decorators\n  test.test_defaultdict\n  test.test_deque\n  test.test_descr\n  test.test_descrtut\n  test.test_devpoll\n  test.test_dict\n  test.test_dict_version\n  test.test_dictcomps\n  test.test_dictviews\n  test.test_difflib\n  test.test_dis\n  test.test_distutils\n  test.test_doctest\n  test.test_doctest2\n  test.test_docxmlrpc\n  test.test_dtrace\n  test.test_dummy_thread\n  test.test_dummy_threading\n  test.test_dynamic\n  test.test_dynamicclassattribute\n  test.test_eintr\n  test.test_email\n  test.test_email.__main__\n  test.test_email.test__encoded_words\n  test.test_email.test__header_value_parser\n  test.test_email.test_asian_codecs\n  test.test_email.test_contentmanager\n  test.test_email.test_defect_handling\n  test.test_email.test_email\n  test.test_email.test_generator\n  test.test_email.test_headerregistry\n  test.test_email.test_inversion\n  test.test_email.test_message\n  test.test_email.test_parser\n  test.test_email.test_pickleable\n  test.test_email.test_policy\n  test.test_email.test_utils\n  test.test_email.torture_test\n  test.test_ensurepip\n  test.test_enum\n  test.test_enumerate\n  test.test_eof\n  test.test_epoll\n  test.test_errno\n  test.test_exception_hierarchy\n  test.test_exception_variations\n  test.test_exceptions\n  test.test_extcall\n  test.test_faulthandler\n  test.test_fcntl\n  test.test_file\n  test.test_file_eintr\n  test.test_filecmp\n  test.test_fileinput\n  test.test_fileio\n  test.test_finalization\n  test.test_float\n  test.test_flufl\n  test.test_fnmatch\n  test.test_fork1\n  test.test_format\n  test.test_fractions\n  test.test_frame\n  test.test_fstring\n  test.test_ftplib\n  test.test_funcattrs\n  test.test_functools\n  test.test_future\n  test.test_future3\n  test.test_future4\n  test.test_future5\n  test.test_gc\n  test.test_gdb\n  test.test_generator_stop\n  test.test_generators\n  test.test_genericpath\n  test.test_genexps\n  test.test_getargs2\n  test.test_getopt\n  test.test_getpass\n  test.test_gettext\n  test.test_glob\n  test.test_global\n  test.test_grammar\n  test.test_grp\n  test.test_gzip\n  test.test_hash\n  test.test_hashlib\n  test.test_heapq\n  test.test_hmac\n  test.test_html\n  test.test_htmlparser\n  test.test_http_cookiejar\n  test.test_http_cookies\n  test.test_httplib\n  test.test_httpservers\n  test.test_idle\n  test.test_imaplib\n  test.test_imghdr\n  test.test_imp\n  test.test_import\n  test.test_import.__main__\n  test.test_import.data.circular_imports.basic\n  test.test_import.data.circular_imports.basic2\n  test.test_import.data.circular_imports.indirect\n  test.test_import.data.circular_imports.rebinding\n  test.test_import.data.circular_imports.rebinding2\n  test.test_import.data.circular_imports.subpackage\n  test.test_import.data.circular_imports.subpkg.subpackage2\n  test.test_import.data.circular_imports.subpkg.util\n  test.test_import.data.circular_imports.util\n  test.test_import.data.package\n  test.test_import.data.package.submodule\n  test.test_import.data.package2.submodule1\n  test.test_import.data.package2.submodule2\n  test.test_importlib\n  test.test_importlib.__main__\n  test.test_importlib.abc\n  test.test_importlib.builtin\n  test.test_importlib.builtin.__main__\n  test.test_importlib.builtin.test_finder\n  test.test_importlib.builtin.test_loader\n  test.test_importlib.extension\n  test.test_importlib.extension.__main__\n  test.test_importlib.extension.test_case_sensitivity\n  test.test_importlib.extension.test_finder\n  test.test_importlib.extension.test_loader\n  test.test_importlib.extension.test_path_hook\n  test.test_importlib.frozen\n  test.test_importlib.frozen.__main__\n  test.test_importlib.frozen.test_finder\n  test.test_importlib.frozen.test_loader\n  test.test_importlib.import_\n  test.test_importlib.import_.__main__\n  test.test_importlib.import_.test___loader__\n  test.test_importlib.import_.test___package__\n  test.test_importlib.import_.test_api\n  test.test_importlib.import_.test_caching\n  test.test_importlib.import_.test_fromlist\n  test.test_importlib.import_.test_meta_path\n  test.test_importlib.import_.test_packages\n  test.test_importlib.import_.test_path\n  test.test_importlib.import_.test_relative_imports\n  test.test_importlib.namespace_pkgs.both_portions.foo.one\n  test.test_importlib.namespace_pkgs.both_portions.foo.two\n  test.test_importlib.namespace_pkgs.module_and_namespace_package.a_test\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo.one\n  test.test_importlib.namespace_pkgs.portion1.foo.one\n  test.test_importlib.namespace_pkgs.portion2.foo.two\n  test.test_importlib.namespace_pkgs.project1.parent.child.one\n  test.test_importlib.namespace_pkgs.project2.parent.child.two\n  test.test_importlib.namespace_pkgs.project3.parent.child.three\n  test.test_importlib.source\n  test.test_importlib.source.__main__\n  test.test_importlib.source.test_case_sensitivity\n  test.test_importlib.source.test_file_loader\n  test.test_importlib.source.test_finder\n  test.test_importlib.source.test_path_hook\n  test.test_importlib.source.test_source_encoding\n  test.test_importlib.test_abc\n  test.test_importlib.test_api\n  test.test_importlib.test_lazy\n  test.test_importlib.test_locks\n  test.test_importlib.test_namespace_pkgs\n  test.test_importlib.test_spec\n  test.test_importlib.test_util\n  test.test_importlib.test_windows\n  test.test_importlib.util\n  test.test_index\n  test.test_inspect\n  test.test_int\n  test.test_int_literal\n  test.test_io\n  test.test_ioctl\n  test.test_ipaddress\n  test.test_isinstance\n  test.test_iter\n  test.test_iterlen\n  test.test_itertools\n  test.test_json\n  test.test_json.__main__\n  test.test_json.test_decode\n  test.test_json.test_default\n  test.test_json.test_dump\n  test.test_json.test_encode_basestring_ascii\n  test.test_json.test_enum\n  test.test_json.test_fail\n  test.test_json.test_float\n  test.test_json.test_indent\n  test.test_json.test_pass1\n  test.test_json.test_pass2\n  test.test_json.test_pass3\n  test.test_json.test_recursion\n  test.test_json.test_scanstring\n  test.test_json.test_separators\n  test.test_json.test_speedups\n  test.test_json.test_tool\n  test.test_json.test_unicode\n  test.test_keyword\n  test.test_keywordonlyarg\n  test.test_kqueue\n  test.test_largefile\n  test.test_lib2to3\n  test.test_linecache\n  test.test_list\n  test.test_listcomps\n  test.test_locale\n  test.test_logging\n  test.test_long\n  test.test_longexp\n  test.test_lzma\n  test.test_macpath\n  test.test_macurl2path\n  test.test_mailbox\n  test.test_mailcap\n  test.test_marshal\n  test.test_math\n  test.test_memoryio\n  test.test_memoryview\n  test.test_metaclass\n  test.test_mimetypes\n  test.test_minidom\n  test.test_mmap\n  test.test_module\n  test.test_modulefinder\n  test.test_msilib\n  test.test_multibytecodec\n  test.test_multiprocessing_fork\n  test.test_multiprocessing_forkserver\n  test.test_multiprocessing_main_handling\n  test.test_multiprocessing_spawn\n  test.test_netrc\n  test.test_nis\n  test.test_nntplib\n  test.test_normalization\n  test.test_ntpath\n  test.test_numeric_tower\n  test.test_opcodes\n  test.test_openpty\n  test.test_operator\n  test.test_optparse\n  test.test_ordered_dict\n  test.test_os\n  test.test_ossaudiodev\n  test.test_osx_env\n  test.test_parser\n  test.test_pathlib\n  test.test_pdb\n  test.test_peepholer\n  test.test_pickle\n  test.test_pickletools\n  test.test_pipes\n  test.test_pkg\n  test.test_pkgimport\n  test.test_pkgutil\n  test.test_platform\n  test.test_plistlib\n  test.test_poll\n  test.test_popen\n  test.test_poplib\n  test.test_posix\n  test.test_posixpath\n  test.test_pow\n  test.test_pprint\n  test.test_print\n  test.test_profile\n  test.test_property\n  test.test_pstats\n  test.test_pty\n  test.test_pulldom\n  test.test_pwd\n  test.test_py_compile\n  test.test_pyclbr\n  test.test_pydoc\n  test.test_pyexpat\n  test.test_queue\n  test.test_quopri\n  test.test_raise\n  test.test_random\n  test.test_range\n  test.test_re\n  test.test_readline\n  test.test_regrtest\n  test.test_repl\n  test.test_reprlib\n  test.test_resource\n  test.test_richcmp\n  test.test_rlcompleter\n  test.test_robotparser\n  test.test_runpy\n  test.test_sax\n  test.test_sched\n  test.test_scope\n  test.test_script_helper\n  test.test_secrets\n  test.test_select\n  test.test_selectors\n  test.test_set\n  test.test_setcomps\n  test.test_shelve\n  test.test_shlex\n  test.test_shutil\n  test.test_signal\n  test.test_site\n  test.test_slice\n  test.test_smtpd\n  test.test_smtplib\n  test.test_smtpnet\n  test.test_sndhdr\n  test.test_socket\n  test.test_socketserver\n  test.test_sort\n  test.test_source_encoding\n  test.test_spwd\n  test.test_sqlite\n  test.test_ssl\n  test.test_startfile\n  test.test_stat\n  test.test_statistics\n  test.test_strftime\n  test.test_string\n  test.test_string_literals\n  test.test_stringprep\n  test.test_strptime\n  test.test_strtod\n  test.test_struct\n  test.test_structmembers\n  test.test_structseq\n  test.test_subclassinit\n  test.test_subprocess\n  test.test_sunau\n  test.test_sundry\n  test.test_super\n  test.test_support\n  test.test_symbol\n  test.test_symtable\n  test.test_syntax\n  test.test_sys\n  test.test_sys_setprofile\n  test.test_sys_settrace\n  test.test_sysconfig\n  test.test_syslog\n  test.test_tarfile\n  test.test_tcl\n  test.test_telnetlib\n  test.test_tempfile\n  test.test_textwrap\n  test.test_thread\n  test.test_threaded_import\n  test.test_threadedtempfile\n  test.test_threading\n  test.test_threading_local\n  test.test_threadsignals\n  test.test_time\n  test.test_timeit\n  test.test_timeout\n  test.test_tix\n  test.test_tk\n  test.test_tokenize\n  test.test_tools\n  test.test_tools.__main__\n  test.test_tools.test_fixcid\n  test.test_tools.test_gprof2html\n  test.test_tools.test_i18n\n  test.test_tools.test_md5sum\n  test.test_tools.test_pdeps\n  test.test_tools.test_pindent\n  test.test_tools.test_reindent\n  test.test_tools.test_sundry\n  test.test_tools.test_unparse\n  test.test_trace\n  test.test_traceback\n  test.test_tracemalloc\n  test.test_ttk_guionly\n  test.test_ttk_textonly\n  test.test_tuple\n  test.test_turtle\n  test.test_typechecks\n  test.test_types\n  test.test_typing\n  test.test_ucn\n  test.test_unary\n  test.test_unicode\n  test.test_unicode_file\n  test.test_unicode_file_functions\n  test.test_unicode_identifiers\n  test.test_unicodedata\n  test.test_unittest\n  test.test_univnewlines\n  test.test_unpack\n  test.test_unpack_ex\n  test.test_urllib\n  test.test_urllib2\n  test.test_urllib2_localnet\n  test.test_urllib2net\n  test.test_urllib_response\n  test.test_urllibnet\n  test.test_urlparse\n  test.test_userdict\n  test.test_userlist\n  test.test_userstring\n  test.test_utf8source\n  test.test_uu\n  test.test_uuid\n  test.test_venv\n  test.test_wait3\n  test.test_wait4\n  test.test_warnings\n  test.test_warnings.__main__\n  test.test_warnings.data.import_warning\n  test.test_warnings.data.stacklevel\n  test.test_wave\n  test.test_weakref\n  test.test_weakset\n  test.test_webbrowser\n  test.test_winconsoleio\n  test.test_winreg\n  test.test_winsound\n  test.test_with\n  test.test_wsgiref\n  test.test_xdrlib\n  test.test_xml_dom_minicompat\n  test.test_xml_etree\n  test.test_xml_etree_c\n  test.test_xmlrpc\n  test.test_xmlrpc_net\n  test.test_yield_from\n  test.test_zipapp\n  test.test_zipfile\n  test.test_zipfile64\n  test.test_zipimport\n  test.test_zipimport_support\n  test.test_zlib\n  test.testcodec\n  test.tf_inherit_check\n  test.threaded_import_hangers\n  test.time_hashlib\n  test.tracedmodules\n  test.tracedmodules.testmod\n  test.win_console_handler\n  test.xmltests\n  textwrap\n  this\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.__main__\n  tkinter.colorchooser\n  tkinter.commondialog\n  tkinter.constants\n  tkinter.dialog\n  tkinter.dnd\n  tkinter.filedialog\n  tkinter.font\n  tkinter.messagebox\n  tkinter.scrolledtext\n  tkinter.simpledialog\n  tkinter.test\n  tkinter.test.runtktests\n  tkinter.test.support\n  tkinter.test.test_tkinter\n  tkinter.test.test_tkinter.test_font\n  tkinter.test.test_tkinter.test_geometry_managers\n  tkinter.test.test_tkinter.test_images\n  tkinter.test.test_tkinter.test_loadtk\n  tkinter.test.test_tkinter.test_misc\n  tkinter.test.test_tkinter.test_text\n  tkinter.test.test_tkinter.test_variables\n  tkinter.test.test_tkinter.test_widgets\n  tkinter.test.test_ttk\n  tkinter.test.test_ttk.test_extensions\n  tkinter.test.test_ttk.test_functions\n  tkinter.test.test_ttk.test_style\n  tkinter.test.test_ttk.test_widgets\n  tkinter.test.widget_tests\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tracemalloc\n  tty\n  turtle\n  turtledemo\n  turtledemo.__main__\n  turtledemo.bytedesign\n  turtledemo.chaos\n  turtledemo.clock\n  turtledemo.colormixer\n  turtledemo.forest\n  turtledemo.fractalcurves\n  turtledemo.lindenmayer\n  turtledemo.minimal_hanoi\n  turtledemo.nim\n  turtledemo.paint\n  turtledemo.peace\n  turtledemo.penrose\n  turtledemo.planet_and_moon\n  turtledemo.rosette\n  turtledemo.round_dance\n  turtledemo.sorting_animate\n  turtledemo.tree\n  turtledemo.two_canvases\n  turtledemo.yinyang\n  types\n  typing\n  unicodedata\n  unittest\n  unittest.__main__\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.mock\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.test\n  unittest.test.__main__\n  unittest.test._test_warnings\n  unittest.test.dummy\n  unittest.test.support\n  unittest.test.test_assertions\n  unittest.test.test_break\n  unittest.test.test_case\n  unittest.test.test_discovery\n  unittest.test.test_functiontestcase\n  unittest.test.test_loader\n  unittest.test.test_program\n  unittest.test.test_result\n  unittest.test.test_runner\n  unittest.test.test_setups\n  unittest.test.test_skipping\n  unittest.test.test_suite\n  unittest.test.testmock\n  unittest.test.testmock.__main__\n  unittest.test.testmock.support\n  unittest.test.testmock.testcallable\n  unittest.test.testmock.testhelpers\n  unittest.test.testmock.testmagicmethods\n  unittest.test.testmock.testmock\n  unittest.test.testmock.testpatch\n  unittest.test.testmock.testsentinel\n  unittest.test.testmock.testwith\n  unittest.util\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  venv.__main__\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc\n  xmlrpc.client\n  xmlrpc.server\n  xxlimited\n  xxsubtype\n  zipapp\n  zipfile\n  zipimport\n  zlib`,3.7:`__future__\n  __main__\n  _abc\n  _ast\n  _asyncio\n  _bisect\n  _blake2\n  _bootlocale\n  _bz2\n  _codecs\n  _codecs_cn\n  _codecs_hk\n  _codecs_iso2022\n  _codecs_jp\n  _codecs_kr\n  _codecs_tw\n  _collections\n  _collections_abc\n  _compat_pickle\n  _compression\n  _contextvars\n  _crypt\n  _csv\n  _ctypes\n  _ctypes_test\n  _curses\n  _curses_panel\n  _datetime\n  _dbm\n  _decimal\n  _dummy_thread\n  _elementtree\n  _frozen_importlib\n  _frozen_importlib_external\n  _functools\n  _gdbm\n  _hashlib\n  _heapq\n  _imp\n  _io\n  _json\n  _locale\n  _lsprof\n  _lzma\n  _markupbase\n  _md5\n  _multibytecodec\n  _multiprocessing\n  _opcode\n  _operator\n  _osx_support\n  _pickle\n  _posixsubprocess\n  _py_abc\n  _pydecimal\n  _pyio\n  _queue\n  _random\n  _sha1\n  _sha256\n  _sha3\n  _sha512\n  _signal\n  _sitebuiltins\n  _socket\n  _sqlite3\n  _sre\n  _ssl\n  _stat\n  _string\n  _strptime\n  _struct\n  _symtable\n  _testbuffer\n  _testcapi\n  _testimportmultiple\n  _testmultiphase\n  _thread\n  _threading_local\n  _tkinter\n  _tracemalloc\n  _uuid\n  _warnings\n  _weakref\n  _weakrefset\n  _xxtestfuzz\n  abc\n  aifc\n  antigravity\n  argparse\n  array\n  ast\n  asynchat\n  asyncio\n  asyncio.base_events\n  asyncio.base_futures\n  asyncio.base_subprocess\n  asyncio.base_tasks\n  asyncio.constants\n  asyncio.coroutines\n  asyncio.events\n  asyncio.format_helpers\n  asyncio.futures\n  asyncio.locks\n  asyncio.log\n  asyncio.proactor_events\n  asyncio.protocols\n  asyncio.queues\n  asyncio.runners\n  asyncio.selector_events\n  asyncio.sslproto\n  asyncio.streams\n  asyncio.subprocess\n  asyncio.tasks\n  asyncio.transports\n  asyncio.unix_events\n  asyncio.windows_events\n  asyncio.windows_utils\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.abc\n  colorsys\n  compileall\n  concurrent\n  concurrent.futures\n  concurrent.futures._base\n  concurrent.futures.process\n  concurrent.futures.thread\n  configparser\n  contextlib\n  contextvars\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  ctypes._aix\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.test\n  ctypes.test.__main__\n  ctypes.test.test_anon\n  ctypes.test.test_array_in_pointer\n  ctypes.test.test_arrays\n  ctypes.test.test_as_parameter\n  ctypes.test.test_bitfields\n  ctypes.test.test_buffers\n  ctypes.test.test_bytes\n  ctypes.test.test_byteswap\n  ctypes.test.test_callbacks\n  ctypes.test.test_cast\n  ctypes.test.test_cfuncs\n  ctypes.test.test_checkretval\n  ctypes.test.test_delattr\n  ctypes.test.test_errno\n  ctypes.test.test_find\n  ctypes.test.test_frombuffer\n  ctypes.test.test_funcptr\n  ctypes.test.test_functions\n  ctypes.test.test_incomplete\n  ctypes.test.test_init\n  ctypes.test.test_internals\n  ctypes.test.test_keeprefs\n  ctypes.test.test_libc\n  ctypes.test.test_loading\n  ctypes.test.test_macholib\n  ctypes.test.test_memfunctions\n  ctypes.test.test_numbers\n  ctypes.test.test_objects\n  ctypes.test.test_parameters\n  ctypes.test.test_pep3118\n  ctypes.test.test_pickling\n  ctypes.test.test_pointers\n  ctypes.test.test_prototypes\n  ctypes.test.test_python_api\n  ctypes.test.test_random_things\n  ctypes.test.test_refcounts\n  ctypes.test.test_repr\n  ctypes.test.test_returnfuncptrs\n  ctypes.test.test_simplesubclasses\n  ctypes.test.test_sizes\n  ctypes.test.test_slicing\n  ctypes.test.test_stringptr\n  ctypes.test.test_strings\n  ctypes.test.test_struct_fields\n  ctypes.test.test_structures\n  ctypes.test.test_unaligned_structures\n  ctypes.test.test_unicode\n  ctypes.test.test_values\n  ctypes.test.test_varsize_struct\n  ctypes.test.test_win32\n  ctypes.test.test_wintypes\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  dataclasses\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils._msvccompiler\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_cygwinccompiler\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_extension\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_log\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_msvccompiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  doctest\n  dummy_threading\n  email\n  email._encoded_words\n  email._header_value_parser\n  email._parseaddr\n  email._policybase\n  email.base64mime\n  email.charset\n  email.contentmanager\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.policy\n  email.quoprimime\n  email.utils\n  encodings\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1125\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp273\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp65001\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_t\n  encodings.koi8_u\n  encodings.kz1048\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_centeuro\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.oem\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.unicode_internal\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip.__main__\n  ensurepip._uninstall\n  enum\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fractions\n  ftplib\n  functools\n  gc\n  genericpath\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  idlelib\n  idlelib.__main__\n  idlelib.autocomplete\n  idlelib.autocomplete_w\n  idlelib.autoexpand\n  idlelib.browser\n  idlelib.calltip\n  idlelib.calltip_w\n  idlelib.codecontext\n  idlelib.colorizer\n  idlelib.config\n  idlelib.config_key\n  idlelib.configdialog\n  idlelib.debugger\n  idlelib.debugger_r\n  idlelib.debugobj\n  idlelib.debugobj_r\n  idlelib.delegator\n  idlelib.dynoption\n  idlelib.editor\n  idlelib.filelist\n  idlelib.grep\n  idlelib.help\n  idlelib.help_about\n  idlelib.history\n  idlelib.hyperparser\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.template\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autocomplete_w\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_browser\n  idlelib.idle_test.test_calltip\n  idlelib.idle_test.test_calltip_w\n  idlelib.idle_test.test_codecontext\n  idlelib.idle_test.test_colorizer\n  idlelib.idle_test.test_config\n  idlelib.idle_test.test_config_key\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_debugger\n  idlelib.idle_test.test_debugger_r\n  idlelib.idle_test.test_debugobj\n  idlelib.idle_test.test_debugobj_r\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editmenu\n  idlelib.idle_test.test_editor\n  idlelib.idle_test.test_filelist\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_help\n  idlelib.idle_test.test_help_about\n  idlelib.idle_test.test_history\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_iomenu\n  idlelib.idle_test.test_macosx\n  idlelib.idle_test.test_mainmenu\n  idlelib.idle_test.test_multicall\n  idlelib.idle_test.test_outwin\n  idlelib.idle_test.test_paragraph\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_percolator\n  idlelib.idle_test.test_pyparse\n  idlelib.idle_test.test_pyshell\n  idlelib.idle_test.test_query\n  idlelib.idle_test.test_redirector\n  idlelib.idle_test.test_replace\n  idlelib.idle_test.test_rpc\n  idlelib.idle_test.test_rstrip\n  idlelib.idle_test.test_run\n  idlelib.idle_test.test_runscript\n  idlelib.idle_test.test_scrolledlist\n  idlelib.idle_test.test_search\n  idlelib.idle_test.test_searchbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_squeezer\n  idlelib.idle_test.test_stackviewer\n  idlelib.idle_test.test_statusbar\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_tooltip\n  idlelib.idle_test.test_tree\n  idlelib.idle_test.test_undo\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_window\n  idlelib.idle_test.test_zoomheight\n  idlelib.iomenu\n  idlelib.macosx\n  idlelib.mainmenu\n  idlelib.multicall\n  idlelib.outwin\n  idlelib.paragraph\n  idlelib.parenmatch\n  idlelib.pathbrowser\n  idlelib.percolator\n  idlelib.pyparse\n  idlelib.pyshell\n  idlelib.query\n  idlelib.redirector\n  idlelib.replace\n  idlelib.rpc\n  idlelib.rstrip\n  idlelib.run\n  idlelib.runscript\n  idlelib.scrolledlist\n  idlelib.search\n  idlelib.searchbase\n  idlelib.searchengine\n  idlelib.squeezer\n  idlelib.stackviewer\n  idlelib.statusbar\n  idlelib.textview\n  idlelib.tooltip\n  idlelib.tree\n  idlelib.undo\n  idlelib.window\n  idlelib.zoomheight\n  idlelib.zzdummy\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib._bootstrap\n  importlib._bootstrap_external\n  importlib.abc\n  importlib.machinery\n  importlib.resources\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  json.decoder\n  json.encoder\n  json.scanner\n  json.tool\n  keyword\n  lib2to3\n  lib2to3.__main__\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_reload\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.__main__\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  macpath\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.context\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forkserver\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.popen_fork\n  multiprocessing.popen_forkserver\n  multiprocessing.popen_spawn_posix\n  multiprocessing.popen_spawn_win32\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.resource_sharer\n  multiprocessing.semaphore_tracker\n  multiprocessing.sharedctypes\n  multiprocessing.spawn\n  multiprocessing.synchronize\n  multiprocessing.util\n  netrc\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pathlib\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  pyexpat\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  secrets\n  select\n  selectors\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sqlite3.test\n  sqlite3.test.backup\n  sqlite3.test.dbapi\n  sqlite3.test.dump\n  sqlite3.test.factory\n  sqlite3.test.hooks\n  sqlite3.test.regression\n  sqlite3.test.transactions\n  sqlite3.test.types\n  sqlite3.test.userfunctions\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statistics\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.__main__\n  test._test_multiprocessing\n  test.ann_module\n  test.ann_module2\n  test.ann_module3\n  test.audiotests\n  test.autotest\n  test.bad_coding\n  test.bad_coding2\n  test.bad_getattr\n  test.bad_getattr2\n  test.bad_getattr3\n  test.badsyntax_3131\n  test.badsyntax_future10\n  test.badsyntax_future3\n  test.badsyntax_future4\n  test.badsyntax_future5\n  test.badsyntax_future6\n  test.badsyntax_future7\n  test.badsyntax_future8\n  test.badsyntax_future9\n  test.badsyntax_pep3120\n  test.bisect\n  test.bisect_cmd\n  test.bytecode_helper\n  test.coding20731\n  test.curses_tests\n  test.dataclass_module_1\n  test.dataclass_module_1_str\n  test.dataclass_module_2\n  test.dataclass_module_2_str\n  test.datetimetester\n  test.dis_module\n  test.doctest_aliases\n  test.double_const\n  test.dtracedata.call_stack\n  test.dtracedata.gc\n  test.dtracedata.instance\n  test.dtracedata.line\n  test.eintrdata.eintr_tester\n  test.encoded_modules\n  test.encoded_modules.module_iso_8859_1\n  test.encoded_modules.module_koi8_r\n  test.final_a\n  test.final_b\n  test.fork_wait\n  test.future_test1\n  test.future_test2\n  test.gdb_sample\n  test.good_getattr\n  test.imp_dummy\n  test.inspect_fodder\n  test.inspect_fodder2\n  test.libregrtest\n  test.libregrtest.cmdline\n  test.libregrtest.main\n  test.libregrtest.refleak\n  test.libregrtest.runtest\n  test.libregrtest.runtest_mp\n  test.libregrtest.save_env\n  test.libregrtest.setup\n  test.libregrtest.utils\n  test.list_tests\n  test.lock_tests\n  test.make_ssl_certs\n  test.mapping_tests\n  test.memory_watchdog\n  test.mock_socket\n  test.mod_generics_cache\n  test.mp_fork_bomb\n  test.mp_preload\n  test.multibytecodec_support\n  test.outstanding_bugs\n  test.pickletester\n  test.profilee\n  test.pyclbr_input\n  test.pydoc_mod\n  test.pydocfodder\n  test.pythoninfo\n  test.re_tests\n  test.regrtest\n  test.relimport\n  test.reperf\n  test.sample_doctest\n  test.sample_doctest_no_docstrings\n  test.sample_doctest_no_doctests\n  test.seq_tests\n  test.signalinterproctester\n  test.sortperf\n  test.ssl_servers\n  test.ssltests\n  test.string_tests\n  test.subprocessdata.fd_status\n  test.subprocessdata.input_reader\n  test.subprocessdata.qcat\n  test.subprocessdata.qgrep\n  test.subprocessdata.sigchild_ignore\n  test.support\n  test.support.script_helper\n  test.support.testresult\n  test.test___all__\n  test.test___future__\n  test.test__locale\n  test.test__opcode\n  test.test__osx_support\n  test.test_abc\n  test.test_abstract_numbers\n  test.test_aifc\n  test.test_argparse\n  test.test_array\n  test.test_asdl_parser\n  test.test_ast\n  test.test_asyncgen\n  test.test_asynchat\n  test.test_asyncio\n  test.test_asyncio.__main__\n  test.test_asyncio.echo\n  test.test_asyncio.echo2\n  test.test_asyncio.echo3\n  test.test_asyncio.functional\n  test.test_asyncio.test_base_events\n  test.test_asyncio.test_buffered_proto\n  test.test_asyncio.test_context\n  test.test_asyncio.test_events\n  test.test_asyncio.test_futures\n  test.test_asyncio.test_locks\n  test.test_asyncio.test_pep492\n  test.test_asyncio.test_proactor_events\n  test.test_asyncio.test_queues\n  test.test_asyncio.test_runners\n  test.test_asyncio.test_selector_events\n  test.test_asyncio.test_server\n  test.test_asyncio.test_sslproto\n  test.test_asyncio.test_streams\n  test.test_asyncio.test_subprocess\n  test.test_asyncio.test_tasks\n  test.test_asyncio.test_transports\n  test.test_asyncio.test_unix_events\n  test.test_asyncio.test_windows_events\n  test.test_asyncio.test_windows_utils\n  test.test_asyncio.utils\n  test.test_asyncore\n  test.test_atexit\n  test.test_audioop\n  test.test_augassign\n  test.test_base64\n  test.test_baseexception\n  test.test_bdb\n  test.test_bigaddrspace\n  test.test_bigmem\n  test.test_binascii\n  test.test_binhex\n  test.test_binop\n  test.test_bisect\n  test.test_bool\n  test.test_buffer\n  test.test_bufio\n  test.test_builtin\n  test.test_bytes\n  test.test_bz2\n  test.test_c_locale_coercion\n  test.test_calendar\n  test.test_call\n  test.test_capi\n  test.test_cgi\n  test.test_cgitb\n  test.test_charmapcodec\n  test.test_class\n  test.test_clinic\n  test.test_cmath\n  test.test_cmd\n  test.test_cmd_line\n  test.test_cmd_line_script\n  test.test_code\n  test.test_code_module\n  test.test_codeccallbacks\n  test.test_codecencodings_cn\n  test.test_codecencodings_hk\n  test.test_codecencodings_iso2022\n  test.test_codecencodings_jp\n  test.test_codecencodings_kr\n  test.test_codecencodings_tw\n  test.test_codecmaps_cn\n  test.test_codecmaps_hk\n  test.test_codecmaps_jp\n  test.test_codecmaps_kr\n  test.test_codecmaps_tw\n  test.test_codecs\n  test.test_codeop\n  test.test_collections\n  test.test_colorsys\n  test.test_compare\n  test.test_compile\n  test.test_compileall\n  test.test_complex\n  test.test_concurrent_futures\n  test.test_configparser\n  test.test_contains\n  test.test_context\n  test.test_contextlib\n  test.test_contextlib_async\n  test.test_copy\n  test.test_copyreg\n  test.test_coroutines\n  test.test_cprofile\n  test.test_crashers\n  test.test_crypt\n  test.test_csv\n  test.test_ctypes\n  test.test_curses\n  test.test_dataclasses\n  test.test_datetime\n  test.test_dbm\n  test.test_dbm_dumb\n  test.test_dbm_gnu\n  test.test_dbm_ndbm\n  test.test_decimal\n  test.test_decorators\n  test.test_defaultdict\n  test.test_deque\n  test.test_descr\n  test.test_descrtut\n  test.test_devpoll\n  test.test_dict\n  test.test_dict_version\n  test.test_dictcomps\n  test.test_dictviews\n  test.test_difflib\n  test.test_dis\n  test.test_distutils\n  test.test_doctest\n  test.test_doctest2\n  test.test_docxmlrpc\n  test.test_dtrace\n  test.test_dummy_thread\n  test.test_dummy_threading\n  test.test_dynamic\n  test.test_dynamicclassattribute\n  test.test_eintr\n  test.test_email\n  test.test_email.__main__\n  test.test_email.test__encoded_words\n  test.test_email.test__header_value_parser\n  test.test_email.test_asian_codecs\n  test.test_email.test_contentmanager\n  test.test_email.test_defect_handling\n  test.test_email.test_email\n  test.test_email.test_generator\n  test.test_email.test_headerregistry\n  test.test_email.test_inversion\n  test.test_email.test_message\n  test.test_email.test_parser\n  test.test_email.test_pickleable\n  test.test_email.test_policy\n  test.test_email.test_utils\n  test.test_email.torture_test\n  test.test_embed\n  test.test_ensurepip\n  test.test_enum\n  test.test_enumerate\n  test.test_eof\n  test.test_epoll\n  test.test_errno\n  test.test_exception_hierarchy\n  test.test_exception_variations\n  test.test_exceptions\n  test.test_extcall\n  test.test_faulthandler\n  test.test_fcntl\n  test.test_file\n  test.test_file_eintr\n  test.test_filecmp\n  test.test_fileinput\n  test.test_fileio\n  test.test_finalization\n  test.test_float\n  test.test_flufl\n  test.test_fnmatch\n  test.test_fork1\n  test.test_format\n  test.test_fractions\n  test.test_frame\n  test.test_frozen\n  test.test_fstring\n  test.test_ftplib\n  test.test_funcattrs\n  test.test_functools\n  test.test_future\n  test.test_future3\n  test.test_future4\n  test.test_future5\n  test.test_gc\n  test.test_gdb\n  test.test_generator_stop\n  test.test_generators\n  test.test_genericclass\n  test.test_genericpath\n  test.test_genexps\n  test.test_getargs2\n  test.test_getopt\n  test.test_getpass\n  test.test_gettext\n  test.test_glob\n  test.test_global\n  test.test_grammar\n  test.test_grp\n  test.test_gzip\n  test.test_hash\n  test.test_hashlib\n  test.test_heapq\n  test.test_hmac\n  test.test_html\n  test.test_htmlparser\n  test.test_http_cookiejar\n  test.test_http_cookies\n  test.test_httplib\n  test.test_httpservers\n  test.test_idle\n  test.test_imaplib\n  test.test_imghdr\n  test.test_imp\n  test.test_import\n  test.test_import.__main__\n  test.test_import.data.circular_imports.basic\n  test.test_import.data.circular_imports.basic2\n  test.test_import.data.circular_imports.binding\n  test.test_import.data.circular_imports.binding2\n  test.test_import.data.circular_imports.indirect\n  test.test_import.data.circular_imports.rebinding\n  test.test_import.data.circular_imports.rebinding2\n  test.test_import.data.circular_imports.subpackage\n  test.test_import.data.circular_imports.subpkg.subpackage2\n  test.test_import.data.circular_imports.subpkg.util\n  test.test_import.data.circular_imports.util\n  test.test_import.data.package\n  test.test_import.data.package.submodule\n  test.test_import.data.package2.submodule1\n  test.test_import.data.package2.submodule2\n  test.test_importlib\n  test.test_importlib.__main__\n  test.test_importlib.abc\n  test.test_importlib.builtin\n  test.test_importlib.builtin.__main__\n  test.test_importlib.builtin.test_finder\n  test.test_importlib.builtin.test_loader\n  test.test_importlib.data01\n  test.test_importlib.data01.subdirectory\n  test.test_importlib.data02\n  test.test_importlib.data02.one\n  test.test_importlib.data02.two\n  test.test_importlib.data03\n  test.test_importlib.data03.namespace.portion1\n  test.test_importlib.data03.namespace.portion2\n  test.test_importlib.extension\n  test.test_importlib.extension.__main__\n  test.test_importlib.extension.test_case_sensitivity\n  test.test_importlib.extension.test_finder\n  test.test_importlib.extension.test_loader\n  test.test_importlib.extension.test_path_hook\n  test.test_importlib.frozen\n  test.test_importlib.frozen.__main__\n  test.test_importlib.frozen.test_finder\n  test.test_importlib.frozen.test_loader\n  test.test_importlib.import_\n  test.test_importlib.import_.__main__\n  test.test_importlib.import_.test___loader__\n  test.test_importlib.import_.test___package__\n  test.test_importlib.import_.test_api\n  test.test_importlib.import_.test_caching\n  test.test_importlib.import_.test_fromlist\n  test.test_importlib.import_.test_meta_path\n  test.test_importlib.import_.test_packages\n  test.test_importlib.import_.test_path\n  test.test_importlib.import_.test_relative_imports\n  test.test_importlib.namespace_pkgs.both_portions.foo.one\n  test.test_importlib.namespace_pkgs.both_portions.foo.two\n  test.test_importlib.namespace_pkgs.module_and_namespace_package.a_test\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo.one\n  test.test_importlib.namespace_pkgs.portion1.foo.one\n  test.test_importlib.namespace_pkgs.portion2.foo.two\n  test.test_importlib.namespace_pkgs.project1.parent.child.one\n  test.test_importlib.namespace_pkgs.project2.parent.child.two\n  test.test_importlib.namespace_pkgs.project3.parent.child.three\n  test.test_importlib.source\n  test.test_importlib.source.__main__\n  test.test_importlib.source.test_case_sensitivity\n  test.test_importlib.source.test_file_loader\n  test.test_importlib.source.test_finder\n  test.test_importlib.source.test_path_hook\n  test.test_importlib.source.test_source_encoding\n  test.test_importlib.test_abc\n  test.test_importlib.test_api\n  test.test_importlib.test_lazy\n  test.test_importlib.test_locks\n  test.test_importlib.test_namespace_pkgs\n  test.test_importlib.test_open\n  test.test_importlib.test_path\n  test.test_importlib.test_read\n  test.test_importlib.test_resource\n  test.test_importlib.test_spec\n  test.test_importlib.test_util\n  test.test_importlib.test_windows\n  test.test_importlib.util\n  test.test_importlib.zipdata01\n  test.test_importlib.zipdata02\n  test.test_index\n  test.test_inspect\n  test.test_int\n  test.test_int_literal\n  test.test_io\n  test.test_ioctl\n  test.test_ipaddress\n  test.test_isinstance\n  test.test_iter\n  test.test_iterlen\n  test.test_itertools\n  test.test_json\n  test.test_json.__main__\n  test.test_json.test_decode\n  test.test_json.test_default\n  test.test_json.test_dump\n  test.test_json.test_encode_basestring_ascii\n  test.test_json.test_enum\n  test.test_json.test_fail\n  test.test_json.test_float\n  test.test_json.test_indent\n  test.test_json.test_pass1\n  test.test_json.test_pass2\n  test.test_json.test_pass3\n  test.test_json.test_recursion\n  test.test_json.test_scanstring\n  test.test_json.test_separators\n  test.test_json.test_speedups\n  test.test_json.test_tool\n  test.test_json.test_unicode\n  test.test_keyword\n  test.test_keywordonlyarg\n  test.test_kqueue\n  test.test_largefile\n  test.test_lib2to3\n  test.test_linecache\n  test.test_list\n  test.test_listcomps\n  test.test_locale\n  test.test_logging\n  test.test_long\n  test.test_longexp\n  test.test_lzma\n  test.test_macpath\n  test.test_mailbox\n  test.test_mailcap\n  test.test_marshal\n  test.test_math\n  test.test_memoryio\n  test.test_memoryview\n  test.test_metaclass\n  test.test_mimetypes\n  test.test_minidom\n  test.test_mmap\n  test.test_module\n  test.test_modulefinder\n  test.test_msilib\n  test.test_multibytecodec\n  test.test_multiprocessing_fork\n  test.test_multiprocessing_forkserver\n  test.test_multiprocessing_main_handling\n  test.test_multiprocessing_spawn\n  test.test_netrc\n  test.test_nis\n  test.test_nntplib\n  test.test_normalization\n  test.test_ntpath\n  test.test_numeric_tower\n  test.test_opcodes\n  test.test_openpty\n  test.test_operator\n  test.test_optparse\n  test.test_ordered_dict\n  test.test_os\n  test.test_ossaudiodev\n  test.test_osx_env\n  test.test_parser\n  test.test_pathlib\n  test.test_pdb\n  test.test_peepholer\n  test.test_pickle\n  test.test_pickletools\n  test.test_pipes\n  test.test_pkg\n  test.test_pkgimport\n  test.test_pkgutil\n  test.test_platform\n  test.test_plistlib\n  test.test_poll\n  test.test_popen\n  test.test_poplib\n  test.test_posix\n  test.test_posixpath\n  test.test_pow\n  test.test_pprint\n  test.test_print\n  test.test_profile\n  test.test_property\n  test.test_pstats\n  test.test_pty\n  test.test_pulldom\n  test.test_pwd\n  test.test_py_compile\n  test.test_pyclbr\n  test.test_pydoc\n  test.test_pyexpat\n  test.test_queue\n  test.test_quopri\n  test.test_raise\n  test.test_random\n  test.test_range\n  test.test_re\n  test.test_readline\n  test.test_regrtest\n  test.test_repl\n  test.test_reprlib\n  test.test_resource\n  test.test_richcmp\n  test.test_rlcompleter\n  test.test_robotparser\n  test.test_runpy\n  test.test_sax\n  test.test_sched\n  test.test_scope\n  test.test_script_helper\n  test.test_secrets\n  test.test_select\n  test.test_selectors\n  test.test_set\n  test.test_setcomps\n  test.test_shelve\n  test.test_shlex\n  test.test_shutil\n  test.test_signal\n  test.test_site\n  test.test_slice\n  test.test_smtpd\n  test.test_smtplib\n  test.test_smtpnet\n  test.test_sndhdr\n  test.test_socket\n  test.test_socketserver\n  test.test_sort\n  test.test_source_encoding\n  test.test_spwd\n  test.test_sqlite\n  test.test_ssl\n  test.test_startfile\n  test.test_stat\n  test.test_statistics\n  test.test_strftime\n  test.test_string\n  test.test_string_literals\n  test.test_stringprep\n  test.test_strptime\n  test.test_strtod\n  test.test_struct\n  test.test_structmembers\n  test.test_structseq\n  test.test_subclassinit\n  test.test_subprocess\n  test.test_sunau\n  test.test_sundry\n  test.test_super\n  test.test_support\n  test.test_symbol\n  test.test_symtable\n  test.test_syntax\n  test.test_sys\n  test.test_sys_setprofile\n  test.test_sys_settrace\n  test.test_sysconfig\n  test.test_syslog\n  test.test_tarfile\n  test.test_tcl\n  test.test_telnetlib\n  test.test_tempfile\n  test.test_textwrap\n  test.test_thread\n  test.test_threaded_import\n  test.test_threadedtempfile\n  test.test_threading\n  test.test_threading_local\n  test.test_threadsignals\n  test.test_time\n  test.test_timeit\n  test.test_timeout\n  test.test_tix\n  test.test_tk\n  test.test_tokenize\n  test.test_tools\n  test.test_tools.__main__\n  test.test_tools.test_fixcid\n  test.test_tools.test_gprof2html\n  test.test_tools.test_i18n\n  test.test_tools.test_md5sum\n  test.test_tools.test_pdeps\n  test.test_tools.test_pindent\n  test.test_tools.test_reindent\n  test.test_tools.test_sundry\n  test.test_tools.test_unparse\n  test.test_trace\n  test.test_traceback\n  test.test_tracemalloc\n  test.test_ttk_guionly\n  test.test_ttk_textonly\n  test.test_tuple\n  test.test_turtle\n  test.test_typechecks\n  test.test_types\n  test.test_typing\n  test.test_ucn\n  test.test_unary\n  test.test_unicode\n  test.test_unicode_file\n  test.test_unicode_file_functions\n  test.test_unicode_identifiers\n  test.test_unicodedata\n  test.test_unittest\n  test.test_univnewlines\n  test.test_unpack\n  test.test_unpack_ex\n  test.test_urllib\n  test.test_urllib2\n  test.test_urllib2_localnet\n  test.test_urllib2net\n  test.test_urllib_response\n  test.test_urllibnet\n  test.test_urlparse\n  test.test_userdict\n  test.test_userlist\n  test.test_userstring\n  test.test_utf8_mode\n  test.test_utf8source\n  test.test_uu\n  test.test_uuid\n  test.test_venv\n  test.test_wait3\n  test.test_wait4\n  test.test_warnings\n  test.test_warnings.__main__\n  test.test_warnings.data.import_warning\n  test.test_warnings.data.stacklevel\n  test.test_wave\n  test.test_weakref\n  test.test_weakset\n  test.test_webbrowser\n  test.test_winconsoleio\n  test.test_winreg\n  test.test_winsound\n  test.test_with\n  test.test_wsgiref\n  test.test_xdrlib\n  test.test_xml_dom_minicompat\n  test.test_xml_etree\n  test.test_xml_etree_c\n  test.test_xmlrpc\n  test.test_xmlrpc_net\n  test.test_xxtestfuzz\n  test.test_yield_from\n  test.test_zipapp\n  test.test_zipfile\n  test.test_zipfile64\n  test.test_zipimport\n  test.test_zipimport_support\n  test.test_zlib\n  test.testcodec\n  test.tf_inherit_check\n  test.threaded_import_hangers\n  test.time_hashlib\n  test.tracedmodules\n  test.tracedmodules.testmod\n  test.win_console_handler\n  test.xmltests\n  textwrap\n  this\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.__main__\n  tkinter.colorchooser\n  tkinter.commondialog\n  tkinter.constants\n  tkinter.dialog\n  tkinter.dnd\n  tkinter.filedialog\n  tkinter.font\n  tkinter.messagebox\n  tkinter.scrolledtext\n  tkinter.simpledialog\n  tkinter.test\n  tkinter.test.runtktests\n  tkinter.test.support\n  tkinter.test.test_tkinter\n  tkinter.test.test_tkinter.test_font\n  tkinter.test.test_tkinter.test_geometry_managers\n  tkinter.test.test_tkinter.test_images\n  tkinter.test.test_tkinter.test_loadtk\n  tkinter.test.test_tkinter.test_misc\n  tkinter.test.test_tkinter.test_text\n  tkinter.test.test_tkinter.test_variables\n  tkinter.test.test_tkinter.test_widgets\n  tkinter.test.test_ttk\n  tkinter.test.test_ttk.test_extensions\n  tkinter.test.test_ttk.test_functions\n  tkinter.test.test_ttk.test_style\n  tkinter.test.test_ttk.test_widgets\n  tkinter.test.widget_tests\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tracemalloc\n  tty\n  turtle\n  turtledemo\n  turtledemo.__main__\n  turtledemo.bytedesign\n  turtledemo.chaos\n  turtledemo.clock\n  turtledemo.colormixer\n  turtledemo.forest\n  turtledemo.fractalcurves\n  turtledemo.lindenmayer\n  turtledemo.minimal_hanoi\n  turtledemo.nim\n  turtledemo.paint\n  turtledemo.peace\n  turtledemo.penrose\n  turtledemo.planet_and_moon\n  turtledemo.rosette\n  turtledemo.round_dance\n  turtledemo.sorting_animate\n  turtledemo.tree\n  turtledemo.two_canvases\n  turtledemo.yinyang\n  types\n  typing\n  unicodedata\n  unittest\n  unittest.__main__\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.mock\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.test\n  unittest.test.__main__\n  unittest.test._test_warnings\n  unittest.test.dummy\n  unittest.test.support\n  unittest.test.test_assertions\n  unittest.test.test_break\n  unittest.test.test_case\n  unittest.test.test_discovery\n  unittest.test.test_functiontestcase\n  unittest.test.test_loader\n  unittest.test.test_program\n  unittest.test.test_result\n  unittest.test.test_runner\n  unittest.test.test_setups\n  unittest.test.test_skipping\n  unittest.test.test_suite\n  unittest.test.testmock\n  unittest.test.testmock.__main__\n  unittest.test.testmock.support\n  unittest.test.testmock.testcallable\n  unittest.test.testmock.testhelpers\n  unittest.test.testmock.testmagicmethods\n  unittest.test.testmock.testmock\n  unittest.test.testmock.testpatch\n  unittest.test.testmock.testsealable\n  unittest.test.testmock.testsentinel\n  unittest.test.testmock.testwith\n  unittest.util\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  venv.__main__\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc\n  xmlrpc.client\n  xmlrpc.server\n  xxlimited\n  xxsubtype\n  zipapp\n  zipfile\n  zipimport\n  zlib`,3.8:`__future__\n  __main__\n  _abc\n  _ast\n  _asyncio\n  _bisect\n  _blake2\n  _bootlocale\n  _bz2\n  _codecs\n  _codecs_cn\n  _codecs_hk\n  _codecs_iso2022\n  _codecs_jp\n  _codecs_kr\n  _codecs_tw\n  _collections\n  _collections_abc\n  _compat_pickle\n  _compression\n  _contextvars\n  _crypt\n  _csv\n  _ctypes\n  _ctypes_test\n  _curses\n  _curses_panel\n  _datetime\n  _dbm\n  _decimal\n  _dummy_thread\n  _elementtree\n  _frozen_importlib\n  _frozen_importlib_external\n  _functools\n  _gdbm\n  _hashlib\n  _heapq\n  _imp\n  _io\n  _json\n  _locale\n  _lsprof\n  _lzma\n  _markupbase\n  _md5\n  _multibytecodec\n  _multiprocessing\n  _opcode\n  _operator\n  _osx_support\n  _pickle\n  _posixshmem\n  _posixsubprocess\n  _py_abc\n  _pydecimal\n  _pyio\n  _queue\n  _random\n  _sha1\n  _sha256\n  _sha3\n  _sha512\n  _signal\n  _sitebuiltins\n  _socket\n  _sqlite3\n  _sre\n  _ssl\n  _stat\n  _statistics\n  _string\n  _strptime\n  _struct\n  _symtable\n  _testbuffer\n  _testcapi\n  _testimportmultiple\n  _testinternalcapi\n  _testmultiphase\n  _thread\n  _threading_local\n  _tkinter\n  _tracemalloc\n  _uuid\n  _warnings\n  _weakref\n  _weakrefset\n  _xxsubinterpreters\n  _xxtestfuzz\n  abc\n  aifc\n  antigravity\n  argparse\n  array\n  ast\n  asynchat\n  asyncio\n  asyncio.__main__\n  asyncio.base_events\n  asyncio.base_futures\n  asyncio.base_subprocess\n  asyncio.base_tasks\n  asyncio.constants\n  asyncio.coroutines\n  asyncio.events\n  asyncio.exceptions\n  asyncio.format_helpers\n  asyncio.futures\n  asyncio.locks\n  asyncio.log\n  asyncio.proactor_events\n  asyncio.protocols\n  asyncio.queues\n  asyncio.runners\n  asyncio.selector_events\n  asyncio.sslproto\n  asyncio.staggered\n  asyncio.streams\n  asyncio.subprocess\n  asyncio.tasks\n  asyncio.transports\n  asyncio.trsock\n  asyncio.unix_events\n  asyncio.windows_events\n  asyncio.windows_utils\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.abc\n  colorsys\n  compileall\n  concurrent\n  concurrent.futures\n  concurrent.futures._base\n  concurrent.futures.process\n  concurrent.futures.thread\n  configparser\n  contextlib\n  contextvars\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  ctypes._aix\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.test\n  ctypes.test.__main__\n  ctypes.test.test_anon\n  ctypes.test.test_array_in_pointer\n  ctypes.test.test_arrays\n  ctypes.test.test_as_parameter\n  ctypes.test.test_bitfields\n  ctypes.test.test_buffers\n  ctypes.test.test_bytes\n  ctypes.test.test_byteswap\n  ctypes.test.test_callbacks\n  ctypes.test.test_cast\n  ctypes.test.test_cfuncs\n  ctypes.test.test_checkretval\n  ctypes.test.test_delattr\n  ctypes.test.test_errno\n  ctypes.test.test_find\n  ctypes.test.test_frombuffer\n  ctypes.test.test_funcptr\n  ctypes.test.test_functions\n  ctypes.test.test_incomplete\n  ctypes.test.test_init\n  ctypes.test.test_internals\n  ctypes.test.test_keeprefs\n  ctypes.test.test_libc\n  ctypes.test.test_loading\n  ctypes.test.test_macholib\n  ctypes.test.test_memfunctions\n  ctypes.test.test_numbers\n  ctypes.test.test_objects\n  ctypes.test.test_parameters\n  ctypes.test.test_pep3118\n  ctypes.test.test_pickling\n  ctypes.test.test_pointers\n  ctypes.test.test_prototypes\n  ctypes.test.test_python_api\n  ctypes.test.test_random_things\n  ctypes.test.test_refcounts\n  ctypes.test.test_repr\n  ctypes.test.test_returnfuncptrs\n  ctypes.test.test_simplesubclasses\n  ctypes.test.test_sizes\n  ctypes.test.test_slicing\n  ctypes.test.test_stringptr\n  ctypes.test.test_strings\n  ctypes.test.test_struct_fields\n  ctypes.test.test_structures\n  ctypes.test.test_unaligned_structures\n  ctypes.test.test_unicode\n  ctypes.test.test_values\n  ctypes.test.test_varsize_struct\n  ctypes.test.test_win32\n  ctypes.test.test_wintypes\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  dataclasses\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils._msvccompiler\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_cygwinccompiler\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_extension\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_log\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_msvccompiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  doctest\n  dummy_threading\n  email\n  email._encoded_words\n  email._header_value_parser\n  email._parseaddr\n  email._policybase\n  email.base64mime\n  email.charset\n  email.contentmanager\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.policy\n  email.quoprimime\n  email.utils\n  encodings\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1125\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp273\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_t\n  encodings.koi8_u\n  encodings.kz1048\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_centeuro\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.oem\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip.__main__\n  ensurepip._uninstall\n  enum\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fractions\n  ftplib\n  functools\n  gc\n  genericpath\n  getopt\n  getpass\n  gettext\n  glob\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  idlelib\n  idlelib.__main__\n  idlelib.autocomplete\n  idlelib.autocomplete_w\n  idlelib.autoexpand\n  idlelib.browser\n  idlelib.calltip\n  idlelib.calltip_w\n  idlelib.codecontext\n  idlelib.colorizer\n  idlelib.config\n  idlelib.config_key\n  idlelib.configdialog\n  idlelib.debugger\n  idlelib.debugger_r\n  idlelib.debugobj\n  idlelib.debugobj_r\n  idlelib.delegator\n  idlelib.dynoption\n  idlelib.editor\n  idlelib.filelist\n  idlelib.format\n  idlelib.grep\n  idlelib.help\n  idlelib.help_about\n  idlelib.history\n  idlelib.hyperparser\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.template\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autocomplete_w\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_browser\n  idlelib.idle_test.test_calltip\n  idlelib.idle_test.test_calltip_w\n  idlelib.idle_test.test_codecontext\n  idlelib.idle_test.test_colorizer\n  idlelib.idle_test.test_config\n  idlelib.idle_test.test_config_key\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_debugger\n  idlelib.idle_test.test_debugger_r\n  idlelib.idle_test.test_debugobj\n  idlelib.idle_test.test_debugobj_r\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editmenu\n  idlelib.idle_test.test_editor\n  idlelib.idle_test.test_filelist\n  idlelib.idle_test.test_format\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_help\n  idlelib.idle_test.test_help_about\n  idlelib.idle_test.test_history\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_iomenu\n  idlelib.idle_test.test_macosx\n  idlelib.idle_test.test_mainmenu\n  idlelib.idle_test.test_multicall\n  idlelib.idle_test.test_outwin\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_percolator\n  idlelib.idle_test.test_pyparse\n  idlelib.idle_test.test_pyshell\n  idlelib.idle_test.test_query\n  idlelib.idle_test.test_redirector\n  idlelib.idle_test.test_replace\n  idlelib.idle_test.test_rpc\n  idlelib.idle_test.test_run\n  idlelib.idle_test.test_runscript\n  idlelib.idle_test.test_scrolledlist\n  idlelib.idle_test.test_search\n  idlelib.idle_test.test_searchbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_sidebar\n  idlelib.idle_test.test_squeezer\n  idlelib.idle_test.test_stackviewer\n  idlelib.idle_test.test_statusbar\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_tooltip\n  idlelib.idle_test.test_tree\n  idlelib.idle_test.test_undo\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_window\n  idlelib.idle_test.test_zoomheight\n  idlelib.iomenu\n  idlelib.macosx\n  idlelib.mainmenu\n  idlelib.multicall\n  idlelib.outwin\n  idlelib.parenmatch\n  idlelib.pathbrowser\n  idlelib.percolator\n  idlelib.pyparse\n  idlelib.pyshell\n  idlelib.query\n  idlelib.redirector\n  idlelib.replace\n  idlelib.rpc\n  idlelib.run\n  idlelib.runscript\n  idlelib.scrolledlist\n  idlelib.search\n  idlelib.searchbase\n  idlelib.searchengine\n  idlelib.sidebar\n  idlelib.squeezer\n  idlelib.stackviewer\n  idlelib.statusbar\n  idlelib.textview\n  idlelib.tooltip\n  idlelib.tree\n  idlelib.undo\n  idlelib.window\n  idlelib.zoomheight\n  idlelib.zzdummy\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib._bootstrap\n  importlib._bootstrap_external\n  importlib.abc\n  importlib.machinery\n  importlib.metadata\n  importlib.resources\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  json.decoder\n  json.encoder\n  json.scanner\n  json.tool\n  keyword\n  lib2to3\n  lib2to3.__main__\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_reload\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.__main__\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.context\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forkserver\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.popen_fork\n  multiprocessing.popen_forkserver\n  multiprocessing.popen_spawn_posix\n  multiprocessing.popen_spawn_win32\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.resource_sharer\n  multiprocessing.resource_tracker\n  multiprocessing.shared_memory\n  multiprocessing.sharedctypes\n  multiprocessing.spawn\n  multiprocessing.synchronize\n  multiprocessing.util\n  netrc\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pathlib\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  pyexpat\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  secrets\n  select\n  selectors\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sqlite3.test\n  sqlite3.test.backup\n  sqlite3.test.dbapi\n  sqlite3.test.dump\n  sqlite3.test.factory\n  sqlite3.test.hooks\n  sqlite3.test.regression\n  sqlite3.test.transactions\n  sqlite3.test.types\n  sqlite3.test.userfunctions\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statistics\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.__main__\n  test._test_multiprocessing\n  test.ann_module\n  test.ann_module2\n  test.ann_module3\n  test.audiotests\n  test.autotest\n  test.bad_coding\n  test.bad_coding2\n  test.bad_getattr\n  test.bad_getattr2\n  test.bad_getattr3\n  test.badsyntax_3131\n  test.badsyntax_future10\n  test.badsyntax_future3\n  test.badsyntax_future4\n  test.badsyntax_future5\n  test.badsyntax_future6\n  test.badsyntax_future7\n  test.badsyntax_future8\n  test.badsyntax_future9\n  test.badsyntax_pep3120\n  test.bisect_cmd\n  test.bytecode_helper\n  test.coding20731\n  test.curses_tests\n  test.dataclass_module_1\n  test.dataclass_module_1_str\n  test.dataclass_module_2\n  test.dataclass_module_2_str\n  test.datetimetester\n  test.dis_module\n  test.doctest_aliases\n  test.double_const\n  test.dtracedata.call_stack\n  test.dtracedata.gc\n  test.dtracedata.instance\n  test.dtracedata.line\n  test.eintrdata.eintr_tester\n  test.encoded_modules\n  test.encoded_modules.module_iso_8859_1\n  test.encoded_modules.module_koi8_r\n  test.final_a\n  test.final_b\n  test.fork_wait\n  test.future_test1\n  test.future_test2\n  test.gdb_sample\n  test.good_getattr\n  test.imp_dummy\n  test.inspect_fodder\n  test.inspect_fodder2\n  test.libregrtest\n  test.libregrtest.cmdline\n  test.libregrtest.main\n  test.libregrtest.pgo\n  test.libregrtest.refleak\n  test.libregrtest.runtest\n  test.libregrtest.runtest_mp\n  test.libregrtest.save_env\n  test.libregrtest.setup\n  test.libregrtest.utils\n  test.libregrtest.win_utils\n  test.list_tests\n  test.lock_tests\n  test.make_ssl_certs\n  test.mapping_tests\n  test.memory_watchdog\n  test.mock_socket\n  test.mod_generics_cache\n  test.mp_fork_bomb\n  test.mp_preload\n  test.multibytecodec_support\n  test.outstanding_bugs\n  test.pickletester\n  test.profilee\n  test.pyclbr_input\n  test.pydoc_mod\n  test.pydocfodder\n  test.pythoninfo\n  test.re_tests\n  test.regrtest\n  test.relimport\n  test.reperf\n  test.sample_doctest\n  test.sample_doctest_no_docstrings\n  test.sample_doctest_no_doctests\n  test.seq_tests\n  test.signalinterproctester\n  test.sortperf\n  test.ssl_servers\n  test.ssltests\n  test.string_tests\n  test.subprocessdata.fd_status\n  test.subprocessdata.input_reader\n  test.subprocessdata.qcat\n  test.subprocessdata.qgrep\n  test.subprocessdata.sigchild_ignore\n  test.support\n  test.support.script_helper\n  test.support.testresult\n  test.test___all__\n  test.test___future__\n  test.test__locale\n  test.test__opcode\n  test.test__osx_support\n  test.test__xxsubinterpreters\n  test.test_abc\n  test.test_abstract_numbers\n  test.test_aifc\n  test.test_argparse\n  test.test_array\n  test.test_asdl_parser\n  test.test_ast\n  test.test_asyncgen\n  test.test_asynchat\n  test.test_asyncio\n  test.test_asyncio.__main__\n  test.test_asyncio.echo\n  test.test_asyncio.echo2\n  test.test_asyncio.echo3\n  test.test_asyncio.functional\n  test.test_asyncio.test_base_events\n  test.test_asyncio.test_buffered_proto\n  test.test_asyncio.test_context\n  test.test_asyncio.test_events\n  test.test_asyncio.test_futures\n  test.test_asyncio.test_locks\n  test.test_asyncio.test_pep492\n  test.test_asyncio.test_proactor_events\n  test.test_asyncio.test_protocols\n  test.test_asyncio.test_queues\n  test.test_asyncio.test_runners\n  test.test_asyncio.test_selector_events\n  test.test_asyncio.test_sendfile\n  test.test_asyncio.test_server\n  test.test_asyncio.test_sock_lowlevel\n  test.test_asyncio.test_sslproto\n  test.test_asyncio.test_streams\n  test.test_asyncio.test_subprocess\n  test.test_asyncio.test_tasks\n  test.test_asyncio.test_transports\n  test.test_asyncio.test_unix_events\n  test.test_asyncio.test_windows_events\n  test.test_asyncio.test_windows_utils\n  test.test_asyncio.utils\n  test.test_asyncore\n  test.test_atexit\n  test.test_audioop\n  test.test_audit\n  test.test_augassign\n  test.test_base64\n  test.test_baseexception\n  test.test_bdb\n  test.test_bigaddrspace\n  test.test_bigmem\n  test.test_binascii\n  test.test_binhex\n  test.test_binop\n  test.test_bisect\n  test.test_bool\n  test.test_buffer\n  test.test_bufio\n  test.test_builtin\n  test.test_bytes\n  test.test_bz2\n  test.test_c_locale_coercion\n  test.test_calendar\n  test.test_call\n  test.test_capi\n  test.test_cgi\n  test.test_cgitb\n  test.test_charmapcodec\n  test.test_class\n  test.test_clinic\n  test.test_cmath\n  test.test_cmd\n  test.test_cmd_line\n  test.test_cmd_line_script\n  test.test_code\n  test.test_code_module\n  test.test_codeccallbacks\n  test.test_codecencodings_cn\n  test.test_codecencodings_hk\n  test.test_codecencodings_iso2022\n  test.test_codecencodings_jp\n  test.test_codecencodings_kr\n  test.test_codecencodings_tw\n  test.test_codecmaps_cn\n  test.test_codecmaps_hk\n  test.test_codecmaps_jp\n  test.test_codecmaps_kr\n  test.test_codecmaps_tw\n  test.test_codecs\n  test.test_codeop\n  test.test_collections\n  test.test_colorsys\n  test.test_compare\n  test.test_compile\n  test.test_compileall\n  test.test_complex\n  test.test_concurrent_futures\n  test.test_configparser\n  test.test_contains\n  test.test_context\n  test.test_contextlib\n  test.test_contextlib_async\n  test.test_copy\n  test.test_copyreg\n  test.test_coroutines\n  test.test_cprofile\n  test.test_crashers\n  test.test_crypt\n  test.test_csv\n  test.test_ctypes\n  test.test_curses\n  test.test_dataclasses\n  test.test_datetime\n  test.test_dbm\n  test.test_dbm_dumb\n  test.test_dbm_gnu\n  test.test_dbm_ndbm\n  test.test_decimal\n  test.test_decorators\n  test.test_defaultdict\n  test.test_deque\n  test.test_descr\n  test.test_descrtut\n  test.test_devpoll\n  test.test_dict\n  test.test_dict_version\n  test.test_dictcomps\n  test.test_dictviews\n  test.test_difflib\n  test.test_dis\n  test.test_distutils\n  test.test_doctest\n  test.test_doctest2\n  test.test_docxmlrpc\n  test.test_dtrace\n  test.test_dummy_thread\n  test.test_dummy_threading\n  test.test_dynamic\n  test.test_dynamicclassattribute\n  test.test_eintr\n  test.test_email\n  test.test_email.__main__\n  test.test_email.test__encoded_words\n  test.test_email.test__header_value_parser\n  test.test_email.test_asian_codecs\n  test.test_email.test_contentmanager\n  test.test_email.test_defect_handling\n  test.test_email.test_email\n  test.test_email.test_generator\n  test.test_email.test_headerregistry\n  test.test_email.test_inversion\n  test.test_email.test_message\n  test.test_email.test_parser\n  test.test_email.test_pickleable\n  test.test_email.test_policy\n  test.test_email.test_utils\n  test.test_email.torture_test\n  test.test_embed\n  test.test_ensurepip\n  test.test_enum\n  test.test_enumerate\n  test.test_eof\n  test.test_epoll\n  test.test_errno\n  test.test_exception_hierarchy\n  test.test_exception_variations\n  test.test_exceptions\n  test.test_extcall\n  test.test_faulthandler\n  test.test_fcntl\n  test.test_file\n  test.test_file_eintr\n  test.test_filecmp\n  test.test_fileinput\n  test.test_fileio\n  test.test_finalization\n  test.test_float\n  test.test_flufl\n  test.test_fnmatch\n  test.test_fork1\n  test.test_format\n  test.test_fractions\n  test.test_frame\n  test.test_frozen\n  test.test_fstring\n  test.test_ftplib\n  test.test_funcattrs\n  test.test_functools\n  test.test_future\n  test.test_future3\n  test.test_future4\n  test.test_future5\n  test.test_gc\n  test.test_gdb\n  test.test_generator_stop\n  test.test_generators\n  test.test_genericclass\n  test.test_genericpath\n  test.test_genexps\n  test.test_getargs2\n  test.test_getopt\n  test.test_getpass\n  test.test_gettext\n  test.test_glob\n  test.test_global\n  test.test_grammar\n  test.test_grp\n  test.test_gzip\n  test.test_hash\n  test.test_hashlib\n  test.test_heapq\n  test.test_hmac\n  test.test_html\n  test.test_htmlparser\n  test.test_http_cookiejar\n  test.test_http_cookies\n  test.test_httplib\n  test.test_httpservers\n  test.test_idle\n  test.test_imaplib\n  test.test_imghdr\n  test.test_imp\n  test.test_import\n  test.test_import.__main__\n  test.test_import.data.circular_imports.basic\n  test.test_import.data.circular_imports.basic2\n  test.test_import.data.circular_imports.binding\n  test.test_import.data.circular_imports.binding2\n  test.test_import.data.circular_imports.from_cycle1\n  test.test_import.data.circular_imports.from_cycle2\n  test.test_import.data.circular_imports.indirect\n  test.test_import.data.circular_imports.rebinding\n  test.test_import.data.circular_imports.rebinding2\n  test.test_import.data.circular_imports.source\n  test.test_import.data.circular_imports.subpackage\n  test.test_import.data.circular_imports.subpkg.subpackage2\n  test.test_import.data.circular_imports.subpkg.util\n  test.test_import.data.circular_imports.use\n  test.test_import.data.circular_imports.util\n  test.test_import.data.package\n  test.test_import.data.package.submodule\n  test.test_import.data.package2.submodule1\n  test.test_import.data.package2.submodule2\n  test.test_importlib\n  test.test_importlib.__main__\n  test.test_importlib.abc\n  test.test_importlib.builtin\n  test.test_importlib.builtin.__main__\n  test.test_importlib.builtin.test_finder\n  test.test_importlib.builtin.test_loader\n  test.test_importlib.data\n  test.test_importlib.data01\n  test.test_importlib.data01.subdirectory\n  test.test_importlib.data02\n  test.test_importlib.data02.one\n  test.test_importlib.data02.two\n  test.test_importlib.data03\n  test.test_importlib.data03.namespace.portion1\n  test.test_importlib.data03.namespace.portion2\n  test.test_importlib.extension\n  test.test_importlib.extension.__main__\n  test.test_importlib.extension.test_case_sensitivity\n  test.test_importlib.extension.test_finder\n  test.test_importlib.extension.test_loader\n  test.test_importlib.extension.test_path_hook\n  test.test_importlib.fixtures\n  test.test_importlib.frozen\n  test.test_importlib.frozen.__main__\n  test.test_importlib.frozen.test_finder\n  test.test_importlib.frozen.test_loader\n  test.test_importlib.import_\n  test.test_importlib.import_.__main__\n  test.test_importlib.import_.test___loader__\n  test.test_importlib.import_.test___package__\n  test.test_importlib.import_.test_api\n  test.test_importlib.import_.test_caching\n  test.test_importlib.import_.test_fromlist\n  test.test_importlib.import_.test_meta_path\n  test.test_importlib.import_.test_packages\n  test.test_importlib.import_.test_path\n  test.test_importlib.import_.test_relative_imports\n  test.test_importlib.namespace_pkgs.both_portions.foo.one\n  test.test_importlib.namespace_pkgs.both_portions.foo.two\n  test.test_importlib.namespace_pkgs.module_and_namespace_package.a_test\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo\n  test.test_importlib.namespace_pkgs.not_a_namespace_pkg.foo.one\n  test.test_importlib.namespace_pkgs.portion1.foo.one\n  test.test_importlib.namespace_pkgs.portion2.foo.two\n  test.test_importlib.namespace_pkgs.project1.parent.child.one\n  test.test_importlib.namespace_pkgs.project2.parent.child.two\n  test.test_importlib.namespace_pkgs.project3.parent.child.three\n  test.test_importlib.source\n  test.test_importlib.source.__main__\n  test.test_importlib.source.test_case_sensitivity\n  test.test_importlib.source.test_file_loader\n  test.test_importlib.source.test_finder\n  test.test_importlib.source.test_path_hook\n  test.test_importlib.source.test_source_encoding\n  test.test_importlib.test_abc\n  test.test_importlib.test_api\n  test.test_importlib.test_lazy\n  test.test_importlib.test_locks\n  test.test_importlib.test_main\n  test.test_importlib.test_metadata_api\n  test.test_importlib.test_namespace_pkgs\n  test.test_importlib.test_open\n  test.test_importlib.test_path\n  test.test_importlib.test_read\n  test.test_importlib.test_resource\n  test.test_importlib.test_spec\n  test.test_importlib.test_util\n  test.test_importlib.test_windows\n  test.test_importlib.test_zip\n  test.test_importlib.util\n  test.test_importlib.zipdata01\n  test.test_importlib.zipdata02\n  test.test_index\n  test.test_inspect\n  test.test_int\n  test.test_int_literal\n  test.test_io\n  test.test_ioctl\n  test.test_ipaddress\n  test.test_isinstance\n  test.test_iter\n  test.test_iterlen\n  test.test_itertools\n  test.test_json\n  test.test_json.__main__\n  test.test_json.test_decode\n  test.test_json.test_default\n  test.test_json.test_dump\n  test.test_json.test_encode_basestring_ascii\n  test.test_json.test_enum\n  test.test_json.test_fail\n  test.test_json.test_float\n  test.test_json.test_indent\n  test.test_json.test_pass1\n  test.test_json.test_pass2\n  test.test_json.test_pass3\n  test.test_json.test_recursion\n  test.test_json.test_scanstring\n  test.test_json.test_separators\n  test.test_json.test_speedups\n  test.test_json.test_tool\n  test.test_json.test_unicode\n  test.test_keyword\n  test.test_keywordonlyarg\n  test.test_kqueue\n  test.test_largefile\n  test.test_lib2to3\n  test.test_linecache\n  test.test_list\n  test.test_listcomps\n  test.test_lltrace\n  test.test_locale\n  test.test_logging\n  test.test_long\n  test.test_longexp\n  test.test_lzma\n  test.test_mailbox\n  test.test_mailcap\n  test.test_marshal\n  test.test_math\n  test.test_memoryio\n  test.test_memoryview\n  test.test_metaclass\n  test.test_mimetypes\n  test.test_minidom\n  test.test_mmap\n  test.test_module\n  test.test_modulefinder\n  test.test_msilib\n  test.test_multibytecodec\n  test.test_multiprocessing_fork\n  test.test_multiprocessing_forkserver\n  test.test_multiprocessing_main_handling\n  test.test_multiprocessing_spawn\n  test.test_named_expressions\n  test.test_netrc\n  test.test_nis\n  test.test_nntplib\n  test.test_normalization\n  test.test_ntpath\n  test.test_numeric_tower\n  test.test_opcodes\n  test.test_openpty\n  test.test_operator\n  test.test_optparse\n  test.test_ordered_dict\n  test.test_os\n  test.test_ossaudiodev\n  test.test_osx_env\n  test.test_parser\n  test.test_pathlib\n  test.test_pdb\n  test.test_peepholer\n  test.test_pickle\n  test.test_picklebuffer\n  test.test_pickletools\n  test.test_pipes\n  test.test_pkg\n  test.test_pkgimport\n  test.test_pkgutil\n  test.test_platform\n  test.test_plistlib\n  test.test_poll\n  test.test_popen\n  test.test_poplib\n  test.test_positional_only_arg\n  test.test_posix\n  test.test_posixpath\n  test.test_pow\n  test.test_pprint\n  test.test_print\n  test.test_profile\n  test.test_property\n  test.test_pstats\n  test.test_pty\n  test.test_pulldom\n  test.test_pwd\n  test.test_py_compile\n  test.test_pyclbr\n  test.test_pydoc\n  test.test_pyexpat\n  test.test_queue\n  test.test_quopri\n  test.test_raise\n  test.test_random\n  test.test_range\n  test.test_re\n  test.test_readline\n  test.test_regrtest\n  test.test_repl\n  test.test_reprlib\n  test.test_resource\n  test.test_richcmp\n  test.test_rlcompleter\n  test.test_robotparser\n  test.test_runpy\n  test.test_sax\n  test.test_sched\n  test.test_scope\n  test.test_script_helper\n  test.test_secrets\n  test.test_select\n  test.test_selectors\n  test.test_set\n  test.test_setcomps\n  test.test_shelve\n  test.test_shlex\n  test.test_shutil\n  test.test_signal\n  test.test_site\n  test.test_slice\n  test.test_smtpd\n  test.test_smtplib\n  test.test_smtpnet\n  test.test_sndhdr\n  test.test_socket\n  test.test_socketserver\n  test.test_sort\n  test.test_source_encoding\n  test.test_spwd\n  test.test_sqlite\n  test.test_ssl\n  test.test_startfile\n  test.test_stat\n  test.test_statistics\n  test.test_strftime\n  test.test_string\n  test.test_string_literals\n  test.test_stringprep\n  test.test_strptime\n  test.test_strtod\n  test.test_struct\n  test.test_structmembers\n  test.test_structseq\n  test.test_subclassinit\n  test.test_subprocess\n  test.test_sunau\n  test.test_sundry\n  test.test_super\n  test.test_support\n  test.test_symbol\n  test.test_symtable\n  test.test_syntax\n  test.test_sys\n  test.test_sys_setprofile\n  test.test_sys_settrace\n  test.test_sysconfig\n  test.test_syslog\n  test.test_tabnanny\n  test.test_tarfile\n  test.test_tcl\n  test.test_telnetlib\n  test.test_tempfile\n  test.test_textwrap\n  test.test_thread\n  test.test_threaded_import\n  test.test_threadedtempfile\n  test.test_threading\n  test.test_threading_local\n  test.test_threadsignals\n  test.test_time\n  test.test_timeit\n  test.test_timeout\n  test.test_tix\n  test.test_tk\n  test.test_tokenize\n  test.test_tools\n  test.test_tools.__main__\n  test.test_tools.test_fixcid\n  test.test_tools.test_gprof2html\n  test.test_tools.test_i18n\n  test.test_tools.test_lll\n  test.test_tools.test_md5sum\n  test.test_tools.test_pathfix\n  test.test_tools.test_pdeps\n  test.test_tools.test_pindent\n  test.test_tools.test_reindent\n  test.test_tools.test_sundry\n  test.test_tools.test_unparse\n  test.test_trace\n  test.test_traceback\n  test.test_tracemalloc\n  test.test_ttk_guionly\n  test.test_ttk_textonly\n  test.test_tuple\n  test.test_turtle\n  test.test_type_comments\n  test.test_typechecks\n  test.test_types\n  test.test_typing\n  test.test_ucn\n  test.test_unary\n  test.test_unicode\n  test.test_unicode_file\n  test.test_unicode_file_functions\n  test.test_unicode_identifiers\n  test.test_unicodedata\n  test.test_unittest\n  test.test_univnewlines\n  test.test_unpack\n  test.test_unpack_ex\n  test.test_urllib\n  test.test_urllib2\n  test.test_urllib2_localnet\n  test.test_urllib2net\n  test.test_urllib_response\n  test.test_urllibnet\n  test.test_urlparse\n  test.test_userdict\n  test.test_userlist\n  test.test_userstring\n  test.test_utf8_mode\n  test.test_utf8source\n  test.test_uu\n  test.test_uuid\n  test.test_venv\n  test.test_wait3\n  test.test_wait4\n  test.test_warnings\n  test.test_warnings.__main__\n  test.test_warnings.data.import_warning\n  test.test_warnings.data.stacklevel\n  test.test_wave\n  test.test_weakref\n  test.test_weakset\n  test.test_webbrowser\n  test.test_winconsoleio\n  test.test_winreg\n  test.test_winsound\n  test.test_with\n  test.test_wsgiref\n  test.test_xdrlib\n  test.test_xml_dom_minicompat\n  test.test_xml_etree\n  test.test_xml_etree_c\n  test.test_xmlrpc\n  test.test_xmlrpc_net\n  test.test_xxtestfuzz\n  test.test_yield_from\n  test.test_zipapp\n  test.test_zipfile\n  test.test_zipfile64\n  test.test_zipimport\n  test.test_zipimport_support\n  test.test_zlib\n  test.testcodec\n  test.tf_inherit_check\n  test.threaded_import_hangers\n  test.time_hashlib\n  test.tracedmodules\n  test.tracedmodules.testmod\n  test.win_console_handler\n  test.xmltests\n  test.ziptestdata.testdata_module_inside_zip\n  textwrap\n  this\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.__main__\n  tkinter.colorchooser\n  tkinter.commondialog\n  tkinter.constants\n  tkinter.dialog\n  tkinter.dnd\n  tkinter.filedialog\n  tkinter.font\n  tkinter.messagebox\n  tkinter.scrolledtext\n  tkinter.simpledialog\n  tkinter.test\n  tkinter.test.runtktests\n  tkinter.test.support\n  tkinter.test.test_tkinter\n  tkinter.test.test_tkinter.test_font\n  tkinter.test.test_tkinter.test_geometry_managers\n  tkinter.test.test_tkinter.test_images\n  tkinter.test.test_tkinter.test_loadtk\n  tkinter.test.test_tkinter.test_misc\n  tkinter.test.test_tkinter.test_text\n  tkinter.test.test_tkinter.test_variables\n  tkinter.test.test_tkinter.test_widgets\n  tkinter.test.test_ttk\n  tkinter.test.test_ttk.test_extensions\n  tkinter.test.test_ttk.test_functions\n  tkinter.test.test_ttk.test_style\n  tkinter.test.test_ttk.test_widgets\n  tkinter.test.widget_tests\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tracemalloc\n  tty\n  turtle\n  turtledemo\n  turtledemo.__main__\n  turtledemo.bytedesign\n  turtledemo.chaos\n  turtledemo.clock\n  turtledemo.colormixer\n  turtledemo.forest\n  turtledemo.fractalcurves\n  turtledemo.lindenmayer\n  turtledemo.minimal_hanoi\n  turtledemo.nim\n  turtledemo.paint\n  turtledemo.peace\n  turtledemo.penrose\n  turtledemo.planet_and_moon\n  turtledemo.rosette\n  turtledemo.round_dance\n  turtledemo.sorting_animate\n  turtledemo.tree\n  turtledemo.two_canvases\n  turtledemo.yinyang\n  types\n  typing\n  typing.io\n  typing.re\n  unicodedata\n  unittest\n  unittest.__main__\n  unittest.async_case\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.mock\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.test\n  unittest.test.__main__\n  unittest.test._test_warnings\n  unittest.test.dummy\n  unittest.test.support\n  unittest.test.test_assertions\n  unittest.test.test_async_case\n  unittest.test.test_break\n  unittest.test.test_case\n  unittest.test.test_discovery\n  unittest.test.test_functiontestcase\n  unittest.test.test_loader\n  unittest.test.test_program\n  unittest.test.test_result\n  unittest.test.test_runner\n  unittest.test.test_setups\n  unittest.test.test_skipping\n  unittest.test.test_suite\n  unittest.test.testmock\n  unittest.test.testmock.__main__\n  unittest.test.testmock.support\n  unittest.test.testmock.testasync\n  unittest.test.testmock.testcallable\n  unittest.test.testmock.testhelpers\n  unittest.test.testmock.testmagicmethods\n  unittest.test.testmock.testmock\n  unittest.test.testmock.testpatch\n  unittest.test.testmock.testsealable\n  unittest.test.testmock.testsentinel\n  unittest.test.testmock.testwith\n  unittest.util\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  venv.__main__\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc\n  xmlrpc.client\n  xmlrpc.server\n  xxlimited\n  xxsubtype\n  zipapp\n  zipfile\n  zipimport\n  zlib`,3.9:`__future__\n  __main__\n  __phello__.foo\n  _aix_support\n  _bootlocale\n  _bootsubprocess\n  _collections_abc\n  _compat_pickle\n  _compression\n  _markupbase\n  _osx_support\n  _py_abc\n  _pydecimal\n  _pyio\n  _sitebuiltins\n  _strptime\n  _sysconfigdata_x86_64_conda_cos6_linux_gnu\n  _sysconfigdata_x86_64_conda_linux_gnu\n  _thread\n  _threading_local\n  _weakrefset\n  abc\n  aifc\n  antigravity\n  argparse\n  array\n  ast\n  asynchat\n  asyncio\n  asyncio.base_events\n  asyncio.base_futures\n  asyncio.base_subprocess\n  asyncio.base_tasks\n  asyncio.constants\n  asyncio.coroutines\n  asyncio.events\n  asyncio.exceptions\n  asyncio.format_helpers\n  asyncio.futures\n  asyncio.locks\n  asyncio.log\n  asyncio.proactor_events\n  asyncio.protocols\n  asyncio.queues\n  asyncio.runners\n  asyncio.selector_events\n  asyncio.sslproto\n  asyncio.staggered\n  asyncio.streams\n  asyncio.subprocess\n  asyncio.tasks\n  asyncio.threads\n  asyncio.transports\n  asyncio.trsock\n  asyncio.unix_events\n  asyncio.windows_events\n  asyncio.windows_utils\n  asyncore\n  atexit\n  audioop\n  base64\n  bdb\n  binascii\n  binhex\n  bisect\n  builtins\n  bz2\n  cProfile\n  calendar\n  cgi\n  cgitb\n  chunk\n  cmath\n  cmd\n  code\n  codecs\n  codeop\n  collections\n  collections.abc\n  colorsys\n  compileall\n  concurrent\n  concurrent.futures\n  concurrent.futures._base\n  concurrent.futures.process\n  concurrent.futures.thread\n  configparser\n  contextlib\n  contextvars\n  copy\n  copyreg\n  crypt\n  csv\n  ctypes\n  ctypes._aix\n  ctypes._endian\n  ctypes.macholib\n  ctypes.macholib.dyld\n  ctypes.macholib.dylib\n  ctypes.macholib.framework\n  ctypes.util\n  ctypes.wintypes\n  curses\n  curses.ascii\n  curses.has_key\n  curses.panel\n  curses.textpad\n  dataclasses\n  datetime\n  dbm\n  dbm.dumb\n  dbm.gnu\n  dbm.ndbm\n  decimal\n  difflib\n  dis\n  distutils\n  distutils._msvccompiler\n  distutils.archive_util\n  distutils.bcppcompiler\n  distutils.ccompiler\n  distutils.cmd\n  distutils.command\n  distutils.command.bdist\n  distutils.command.bdist_dumb\n  distutils.command.bdist_msi\n  distutils.command.bdist_packager\n  distutils.command.bdist_rpm\n  distutils.command.bdist_wininst\n  distutils.command.build\n  distutils.command.build_clib\n  distutils.command.build_ext\n  distutils.command.build_py\n  distutils.command.build_scripts\n  distutils.command.check\n  distutils.command.clean\n  distutils.command.config\n  distutils.command.install\n  distutils.command.install_data\n  distutils.command.install_egg_info\n  distutils.command.install_headers\n  distutils.command.install_lib\n  distutils.command.install_scripts\n  distutils.command.register\n  distutils.command.sdist\n  distutils.command.upload\n  distutils.config\n  distutils.core\n  distutils.cygwinccompiler\n  distutils.debug\n  distutils.dep_util\n  distutils.dir_util\n  distutils.dist\n  distutils.errors\n  distutils.extension\n  distutils.fancy_getopt\n  distutils.file_util\n  distutils.filelist\n  distutils.log\n  distutils.msvc9compiler\n  distutils.msvccompiler\n  distutils.spawn\n  distutils.sysconfig\n  distutils.tests\n  distutils.tests.support\n  distutils.tests.test_archive_util\n  distutils.tests.test_bdist\n  distutils.tests.test_bdist_dumb\n  distutils.tests.test_bdist_msi\n  distutils.tests.test_bdist_rpm\n  distutils.tests.test_bdist_wininst\n  distutils.tests.test_build\n  distutils.tests.test_build_clib\n  distutils.tests.test_build_ext\n  distutils.tests.test_build_py\n  distutils.tests.test_build_scripts\n  distutils.tests.test_check\n  distutils.tests.test_clean\n  distutils.tests.test_cmd\n  distutils.tests.test_config\n  distutils.tests.test_config_cmd\n  distutils.tests.test_core\n  distutils.tests.test_cygwinccompiler\n  distutils.tests.test_dep_util\n  distutils.tests.test_dir_util\n  distutils.tests.test_dist\n  distutils.tests.test_extension\n  distutils.tests.test_file_util\n  distutils.tests.test_filelist\n  distutils.tests.test_install\n  distutils.tests.test_install_data\n  distutils.tests.test_install_headers\n  distutils.tests.test_install_lib\n  distutils.tests.test_install_scripts\n  distutils.tests.test_log\n  distutils.tests.test_msvc9compiler\n  distutils.tests.test_msvccompiler\n  distutils.tests.test_register\n  distutils.tests.test_sdist\n  distutils.tests.test_spawn\n  distutils.tests.test_sysconfig\n  distutils.tests.test_text_file\n  distutils.tests.test_unixccompiler\n  distutils.tests.test_upload\n  distutils.tests.test_util\n  distutils.tests.test_version\n  distutils.tests.test_versionpredicate\n  distutils.text_file\n  distutils.unixccompiler\n  distutils.util\n  distutils.version\n  distutils.versionpredicate\n  doctest\n  email\n  email._encoded_words\n  email._header_value_parser\n  email._parseaddr\n  email._policybase\n  email.base64mime\n  email.charset\n  email.contentmanager\n  email.encoders\n  email.errors\n  email.feedparser\n  email.generator\n  email.header\n  email.headerregistry\n  email.iterators\n  email.message\n  email.mime\n  email.mime.application\n  email.mime.audio\n  email.mime.base\n  email.mime.image\n  email.mime.message\n  email.mime.multipart\n  email.mime.nonmultipart\n  email.mime.text\n  email.parser\n  email.policy\n  email.quoprimime\n  email.utils\n  encodings\n  encodings.aliases\n  encodings.ascii\n  encodings.base64_codec\n  encodings.big5\n  encodings.big5hkscs\n  encodings.bz2_codec\n  encodings.charmap\n  encodings.cp037\n  encodings.cp1006\n  encodings.cp1026\n  encodings.cp1125\n  encodings.cp1140\n  encodings.cp1250\n  encodings.cp1251\n  encodings.cp1252\n  encodings.cp1253\n  encodings.cp1254\n  encodings.cp1255\n  encodings.cp1256\n  encodings.cp1257\n  encodings.cp1258\n  encodings.cp273\n  encodings.cp424\n  encodings.cp437\n  encodings.cp500\n  encodings.cp720\n  encodings.cp737\n  encodings.cp775\n  encodings.cp850\n  encodings.cp852\n  encodings.cp855\n  encodings.cp856\n  encodings.cp857\n  encodings.cp858\n  encodings.cp860\n  encodings.cp861\n  encodings.cp862\n  encodings.cp863\n  encodings.cp864\n  encodings.cp865\n  encodings.cp866\n  encodings.cp869\n  encodings.cp874\n  encodings.cp875\n  encodings.cp932\n  encodings.cp949\n  encodings.cp950\n  encodings.euc_jis_2004\n  encodings.euc_jisx0213\n  encodings.euc_jp\n  encodings.euc_kr\n  encodings.gb18030\n  encodings.gb2312\n  encodings.gbk\n  encodings.hex_codec\n  encodings.hp_roman8\n  encodings.hz\n  encodings.idna\n  encodings.iso2022_jp\n  encodings.iso2022_jp_1\n  encodings.iso2022_jp_2\n  encodings.iso2022_jp_2004\n  encodings.iso2022_jp_3\n  encodings.iso2022_jp_ext\n  encodings.iso2022_kr\n  encodings.iso8859_1\n  encodings.iso8859_10\n  encodings.iso8859_11\n  encodings.iso8859_13\n  encodings.iso8859_14\n  encodings.iso8859_15\n  encodings.iso8859_16\n  encodings.iso8859_2\n  encodings.iso8859_3\n  encodings.iso8859_4\n  encodings.iso8859_5\n  encodings.iso8859_6\n  encodings.iso8859_7\n  encodings.iso8859_8\n  encodings.iso8859_9\n  encodings.johab\n  encodings.koi8_r\n  encodings.koi8_t\n  encodings.koi8_u\n  encodings.kz1048\n  encodings.latin_1\n  encodings.mac_arabic\n  encodings.mac_croatian\n  encodings.mac_cyrillic\n  encodings.mac_farsi\n  encodings.mac_greek\n  encodings.mac_iceland\n  encodings.mac_latin2\n  encodings.mac_roman\n  encodings.mac_romanian\n  encodings.mac_turkish\n  encodings.mbcs\n  encodings.oem\n  encodings.palmos\n  encodings.ptcp154\n  encodings.punycode\n  encodings.quopri_codec\n  encodings.raw_unicode_escape\n  encodings.rot_13\n  encodings.shift_jis\n  encodings.shift_jis_2004\n  encodings.shift_jisx0213\n  encodings.tis_620\n  encodings.undefined\n  encodings.unicode_escape\n  encodings.utf_16\n  encodings.utf_16_be\n  encodings.utf_16_le\n  encodings.utf_32\n  encodings.utf_32_be\n  encodings.utf_32_le\n  encodings.utf_7\n  encodings.utf_8\n  encodings.utf_8_sig\n  encodings.uu_codec\n  encodings.zlib_codec\n  ensurepip\n  ensurepip._bundled\n  ensurepip._uninstall\n  enum\n  errno\n  faulthandler\n  fcntl\n  filecmp\n  fileinput\n  fnmatch\n  formatter\n  fractions\n  ftplib\n  functools\n  gc\n  genericpath\n  getopt\n  getpass\n  gettext\n  glob\n  graphlib\n  grp\n  gzip\n  hashlib\n  heapq\n  hmac\n  html\n  html.entities\n  html.parser\n  http\n  http.client\n  http.cookiejar\n  http.cookies\n  http.server\n  idlelib\n  idlelib.autocomplete\n  idlelib.autocomplete_w\n  idlelib.autoexpand\n  idlelib.browser\n  idlelib.calltip\n  idlelib.calltip_w\n  idlelib.codecontext\n  idlelib.colorizer\n  idlelib.config\n  idlelib.config_key\n  idlelib.configdialog\n  idlelib.debugger\n  idlelib.debugger_r\n  idlelib.debugobj\n  idlelib.debugobj_r\n  idlelib.delegator\n  idlelib.dynoption\n  idlelib.editor\n  idlelib.filelist\n  idlelib.format\n  idlelib.grep\n  idlelib.help\n  idlelib.help_about\n  idlelib.history\n  idlelib.hyperparser\n  idlelib.idle\n  idlelib.idle_test\n  idlelib.idle_test.htest\n  idlelib.idle_test.mock_idle\n  idlelib.idle_test.mock_tk\n  idlelib.idle_test.template\n  idlelib.idle_test.test_autocomplete\n  idlelib.idle_test.test_autocomplete_w\n  idlelib.idle_test.test_autoexpand\n  idlelib.idle_test.test_browser\n  idlelib.idle_test.test_calltip\n  idlelib.idle_test.test_calltip_w\n  idlelib.idle_test.test_codecontext\n  idlelib.idle_test.test_colorizer\n  idlelib.idle_test.test_config\n  idlelib.idle_test.test_config_key\n  idlelib.idle_test.test_configdialog\n  idlelib.idle_test.test_debugger\n  idlelib.idle_test.test_debugger_r\n  idlelib.idle_test.test_debugobj\n  idlelib.idle_test.test_debugobj_r\n  idlelib.idle_test.test_delegator\n  idlelib.idle_test.test_editmenu\n  idlelib.idle_test.test_editor\n  idlelib.idle_test.test_filelist\n  idlelib.idle_test.test_format\n  idlelib.idle_test.test_grep\n  idlelib.idle_test.test_help\n  idlelib.idle_test.test_help_about\n  idlelib.idle_test.test_history\n  idlelib.idle_test.test_hyperparser\n  idlelib.idle_test.test_iomenu\n  idlelib.idle_test.test_macosx\n  idlelib.idle_test.test_mainmenu\n  idlelib.idle_test.test_multicall\n  idlelib.idle_test.test_outwin\n  idlelib.idle_test.test_parenmatch\n  idlelib.idle_test.test_pathbrowser\n  idlelib.idle_test.test_percolator\n  idlelib.idle_test.test_pyparse\n  idlelib.idle_test.test_pyshell\n  idlelib.idle_test.test_query\n  idlelib.idle_test.test_redirector\n  idlelib.idle_test.test_replace\n  idlelib.idle_test.test_rpc\n  idlelib.idle_test.test_run\n  idlelib.idle_test.test_runscript\n  idlelib.idle_test.test_scrolledlist\n  idlelib.idle_test.test_search\n  idlelib.idle_test.test_searchbase\n  idlelib.idle_test.test_searchengine\n  idlelib.idle_test.test_sidebar\n  idlelib.idle_test.test_squeezer\n  idlelib.idle_test.test_stackviewer\n  idlelib.idle_test.test_statusbar\n  idlelib.idle_test.test_text\n  idlelib.idle_test.test_textview\n  idlelib.idle_test.test_tooltip\n  idlelib.idle_test.test_tree\n  idlelib.idle_test.test_undo\n  idlelib.idle_test.test_warning\n  idlelib.idle_test.test_window\n  idlelib.idle_test.test_zoomheight\n  idlelib.iomenu\n  idlelib.macosx\n  idlelib.mainmenu\n  idlelib.multicall\n  idlelib.outwin\n  idlelib.parenmatch\n  idlelib.pathbrowser\n  idlelib.percolator\n  idlelib.pyparse\n  idlelib.pyshell\n  idlelib.query\n  idlelib.redirector\n  idlelib.replace\n  idlelib.rpc\n  idlelib.run\n  idlelib.runscript\n  idlelib.scrolledlist\n  idlelib.search\n  idlelib.searchbase\n  idlelib.searchengine\n  idlelib.sidebar\n  idlelib.squeezer\n  idlelib.stackviewer\n  idlelib.statusbar\n  idlelib.textview\n  idlelib.tooltip\n  idlelib.tree\n  idlelib.undo\n  idlelib.window\n  idlelib.zoomheight\n  idlelib.zzdummy\n  imaplib\n  imghdr\n  imp\n  importlib\n  importlib._bootstrap\n  importlib._bootstrap_external\n  importlib._common\n  importlib.abc\n  importlib.machinery\n  importlib.metadata\n  importlib.resources\n  importlib.util\n  inspect\n  io\n  ipaddress\n  itertools\n  json\n  json.decoder\n  json.encoder\n  json.scanner\n  json.tool\n  keyword\n  lib.libpython3\n  lib2to3\n  lib2to3.btm_matcher\n  lib2to3.btm_utils\n  lib2to3.fixer_base\n  lib2to3.fixer_util\n  lib2to3.fixes\n  lib2to3.fixes.fix_apply\n  lib2to3.fixes.fix_asserts\n  lib2to3.fixes.fix_basestring\n  lib2to3.fixes.fix_buffer\n  lib2to3.fixes.fix_dict\n  lib2to3.fixes.fix_except\n  lib2to3.fixes.fix_exec\n  lib2to3.fixes.fix_execfile\n  lib2to3.fixes.fix_exitfunc\n  lib2to3.fixes.fix_filter\n  lib2to3.fixes.fix_funcattrs\n  lib2to3.fixes.fix_future\n  lib2to3.fixes.fix_getcwdu\n  lib2to3.fixes.fix_has_key\n  lib2to3.fixes.fix_idioms\n  lib2to3.fixes.fix_import\n  lib2to3.fixes.fix_imports\n  lib2to3.fixes.fix_imports2\n  lib2to3.fixes.fix_input\n  lib2to3.fixes.fix_intern\n  lib2to3.fixes.fix_isinstance\n  lib2to3.fixes.fix_itertools\n  lib2to3.fixes.fix_itertools_imports\n  lib2to3.fixes.fix_long\n  lib2to3.fixes.fix_map\n  lib2to3.fixes.fix_metaclass\n  lib2to3.fixes.fix_methodattrs\n  lib2to3.fixes.fix_ne\n  lib2to3.fixes.fix_next\n  lib2to3.fixes.fix_nonzero\n  lib2to3.fixes.fix_numliterals\n  lib2to3.fixes.fix_operator\n  lib2to3.fixes.fix_paren\n  lib2to3.fixes.fix_print\n  lib2to3.fixes.fix_raise\n  lib2to3.fixes.fix_raw_input\n  lib2to3.fixes.fix_reduce\n  lib2to3.fixes.fix_reload\n  lib2to3.fixes.fix_renames\n  lib2to3.fixes.fix_repr\n  lib2to3.fixes.fix_set_literal\n  lib2to3.fixes.fix_standarderror\n  lib2to3.fixes.fix_sys_exc\n  lib2to3.fixes.fix_throw\n  lib2to3.fixes.fix_tuple_params\n  lib2to3.fixes.fix_types\n  lib2to3.fixes.fix_unicode\n  lib2to3.fixes.fix_urllib\n  lib2to3.fixes.fix_ws_comma\n  lib2to3.fixes.fix_xrange\n  lib2to3.fixes.fix_xreadlines\n  lib2to3.fixes.fix_zip\n  lib2to3.main\n  lib2to3.patcomp\n  lib2to3.pgen2\n  lib2to3.pgen2.conv\n  lib2to3.pgen2.driver\n  lib2to3.pgen2.grammar\n  lib2to3.pgen2.literals\n  lib2to3.pgen2.parse\n  lib2to3.pgen2.pgen\n  lib2to3.pgen2.token\n  lib2to3.pgen2.tokenize\n  lib2to3.pygram\n  lib2to3.pytree\n  lib2to3.refactor\n  lib2to3.tests\n  lib2to3.tests.data.bom\n  lib2to3.tests.data.crlf\n  lib2to3.tests.data.different_encoding\n  lib2to3.tests.data.false_encoding\n  lib2to3.tests.data.fixers.bad_order\n  lib2to3.tests.data.fixers.myfixes\n  lib2to3.tests.data.fixers.myfixes.fix_explicit\n  lib2to3.tests.data.fixers.myfixes.fix_first\n  lib2to3.tests.data.fixers.myfixes.fix_last\n  lib2to3.tests.data.fixers.myfixes.fix_parrot\n  lib2to3.tests.data.fixers.myfixes.fix_preorder\n  lib2to3.tests.data.fixers.no_fixer_cls\n  lib2to3.tests.data.fixers.parrot_example\n  lib2to3.tests.data.infinite_recursion\n  lib2to3.tests.data.py2_test_grammar\n  lib2to3.tests.data.py3_test_grammar\n  lib2to3.tests.pytree_idempotency\n  lib2to3.tests.support\n  lib2to3.tests.test_all_fixers\n  lib2to3.tests.test_fixers\n  lib2to3.tests.test_main\n  lib2to3.tests.test_parser\n  lib2to3.tests.test_pytree\n  lib2to3.tests.test_refactor\n  lib2to3.tests.test_util\n  linecache\n  locale\n  logging\n  logging.config\n  logging.handlers\n  lzma\n  mailbox\n  mailcap\n  marshal\n  math\n  mimetypes\n  mmap\n  modulefinder\n  msilib\n  msvcrt\n  multiprocessing\n  multiprocessing.connection\n  multiprocessing.context\n  multiprocessing.dummy\n  multiprocessing.dummy.connection\n  multiprocessing.forkserver\n  multiprocessing.heap\n  multiprocessing.managers\n  multiprocessing.pool\n  multiprocessing.popen_fork\n  multiprocessing.popen_forkserver\n  multiprocessing.popen_spawn_posix\n  multiprocessing.popen_spawn_win32\n  multiprocessing.process\n  multiprocessing.queues\n  multiprocessing.reduction\n  multiprocessing.resource_sharer\n  multiprocessing.resource_tracker\n  multiprocessing.shared_memory\n  multiprocessing.sharedctypes\n  multiprocessing.spawn\n  multiprocessing.synchronize\n  multiprocessing.util\n  netrc\n  nis\n  nntplib\n  ntpath\n  nturl2path\n  numbers\n  opcode\n  operator\n  optparse\n  os\n  os.path\n  ossaudiodev\n  parser\n  pathlib\n  pdb\n  pickle\n  pickletools\n  pipes\n  pkgutil\n  platform\n  plistlib\n  poplib\n  posix\n  posixpath\n  pprint\n  profile\n  pstats\n  pty\n  pwd\n  py_compile\n  pyclbr\n  pydoc\n  pydoc_data\n  pydoc_data.topics\n  queue\n  quopri\n  random\n  re\n  readline\n  reprlib\n  resource\n  rlcompleter\n  runpy\n  sched\n  secrets\n  select\n  selectors\n  shelve\n  shlex\n  shutil\n  signal\n  site\n  smtpd\n  smtplib\n  sndhdr\n  socket\n  socketserver\n  spwd\n  sqlite3\n  sqlite3.dbapi2\n  sqlite3.dump\n  sre_compile\n  sre_constants\n  sre_parse\n  ssl\n  stat\n  statistics\n  string\n  stringprep\n  struct\n  subprocess\n  sunau\n  symbol\n  symtable\n  sys\n  sysconfig\n  syslog\n  tabnanny\n  tarfile\n  telnetlib\n  tempfile\n  termios\n  test\n  test.support\n  test.support.bytecode_helper\n  test.support.hashlib_helper\n  test.support.logging_helper\n  test.support.script_helper\n  test.support.socket_helper\n  test.support.testresult\n  test.test_script_helper\n  test.test_support\n  textwrap\n  this\n  threading\n  time\n  timeit\n  tkinter\n  tkinter.colorchooser\n  tkinter.commondialog\n  tkinter.constants\n  tkinter.dialog\n  tkinter.dnd\n  tkinter.filedialog\n  tkinter.font\n  tkinter.messagebox\n  tkinter.scrolledtext\n  tkinter.simpledialog\n  tkinter.tix\n  tkinter.ttk\n  token\n  tokenize\n  trace\n  traceback\n  tracemalloc\n  tty\n  turtle\n  turtledemo\n  turtledemo.bytedesign\n  turtledemo.chaos\n  turtledemo.clock\n  turtledemo.colormixer\n  turtledemo.forest\n  turtledemo.fractalcurves\n  turtledemo.lindenmayer\n  turtledemo.minimal_hanoi\n  turtledemo.nim\n  turtledemo.paint\n  turtledemo.peace\n  turtledemo.penrose\n  turtledemo.planet_and_moon\n  turtledemo.rosette\n  turtledemo.round_dance\n  turtledemo.sorting_animate\n  turtledemo.tree\n  turtledemo.two_canvases\n  turtledemo.yinyang\n  types\n  typing\n  unicodedata\n  unittest\n  unittest._log\n  unittest.async_case\n  unittest.case\n  unittest.loader\n  unittest.main\n  unittest.mock\n  unittest.result\n  unittest.runner\n  unittest.signals\n  unittest.suite\n  unittest.util\n  urllib\n  urllib.error\n  urllib.parse\n  urllib.request\n  urllib.response\n  urllib.robotparser\n  uu\n  uuid\n  venv\n  warnings\n  wave\n  weakref\n  webbrowser\n  winreg\n  winsound\n  wsgiref\n  wsgiref.handlers\n  wsgiref.headers\n  wsgiref.simple_server\n  wsgiref.util\n  wsgiref.validate\n  xdrlib\n  xml\n  xml.dom\n  xml.dom.NodeFilter\n  xml.dom.domreg\n  xml.dom.expatbuilder\n  xml.dom.minicompat\n  xml.dom.minidom\n  xml.dom.pulldom\n  xml.dom.xmlbuilder\n  xml.etree\n  xml.etree.ElementInclude\n  xml.etree.ElementPath\n  xml.etree.ElementTree\n  xml.etree.cElementTree\n  xml.parsers\n  xml.parsers.expat\n  xml.parsers.expat.errors\n  xml.parsers.expat.model\n  xml.sax\n  xml.sax._exceptions\n  xml.sax.expatreader\n  xml.sax.handler\n  xml.sax.saxutils\n  xml.sax.xmlreader\n  xmlrpc\n  xmlrpc.client\n  xmlrpc.server\n  zipapp\n  zipfile\n  zipimport\n  zlib\n  zoneinfo\n  zoneinfo._common\n  zoneinfo._tzpath\n  zoneinfo._zoneinfo`};function pythonStdLibList(e){return j[e].split("\n").map((e=>e.trim()))}const q=pythonStdLibList;const G=(0,e.getInput)("category");const I=process.env.GITHUB_REPOSITORY;const W=I.split("/")[1];const z=process.env.DEFAULT_PYTHON||3.8;function getManifest(){if(typeof getManifest.manifest==="undefined"){const e=F().sync("**/manifest.json");if(e.length===1){const t=e[0];const s=n().readFileSync(t);getManifest.manifest=(0,i.parse)(s)}else{getManifest.manifest=false}}return getManifest.manifest}function getRequirements(){if(getManifest()){if("requirements"in getManifest()){return getManifest().requirements}return false}return false}function getHacsConfig(){if(typeof getHacsConfig.hacsConfig==="undefined"){if(n().existsSync("hacs.json")){getHacsConfig.hacsConfig=(0,i.parse)(n().readFileSync("hacs.json"))}else{getHacsConfig.hacsConfig=false}}return getHacsConfig.hacsConfig}function checkURL(t){return fetch(t,{method:"HEAD"}).catch((s=>{(0,e.setFailed)(`Failed checking ${t}: ${s.message}`);return false})).then((e=>{if("ok"in e){return e.ok}return false}))}function checkFileExistsCaseInsensitive(e){const t=n().readdirSync(B().dirname(e));const s=B().basename(e).toLowerCase();return t.find((e=>e.toLowerCase()===s))}function whichInfoFile(){if(typeof whichInfoFile.infoFile==="undefined"){if(getHacsConfig()&&"render_readme"in getHacsConfig()&&getHacsConfig().render_readme){whichInfoFile.infoFile=checkFileExistsCaseInsensitive("README.md")||checkFileExistsCaseInsensitive("README")}else{whichInfoFile.infoFile=checkFileExistsCaseInsensitive("INFO.md")||checkFileExistsCaseInsensitive("INFO")}}return whichInfoFile.infoFile}const L=[{group:"repo",description:"Repository checks",checks:[{name:"description",description:"The repository has a description",canSkip:true,ignore:()=>false,check:e=>e.description!=="",url:"https://hacs.xyz/docs/publish/include#check-repository"},{name:"archived",description:"The repository is not archived",canSkip:true,ignore:()=>false,check:e=>!e.archived||"The repository is archived",url:"https://hacs.xyz/docs/publish/include#check-archived"},{name:"topics",description:"The repository has topics",canSkip:true,ignore:()=>false,check:e=>"topics"in e&&e.topics.length!==0||"The repository is missing topics",url:"https://hacs.xyz/docs/publish/include#check-repository"},{name:"issues",description:"The repository has issues enabled",canSkip:true,ignore:()=>false,check:e=>e.has_issues||"The repository does not have issues enabled",url:"https://hacs.xyz/docs/publish/include#check-repository"},{name:"fork",description:"The repository is not a fork",canSkip:true,neutral:true,ignore:()=>I!=="hacs/default",check:e=>!e.fork||"The repository is a fork",url:"https://hacs.xyz/docs/publish/include#check-repository"}]},{group:"file",description:"File existence checks",checks:[{name:"information",description:"Information file exists",canSkip:true,ignore:()=>false,check:()=>{if(whichInfoFile()!==undefined){return{pass:true,message:`${whichInfoFile()} exists`}}return"Missing information file"},url:"https://hacs.xyz/docs/publish/include#check-info"},{name:"images",description:"Information file has images",canSkip:true,ignore:()=>!["plugin","theme"].includes(G),check:()=>{if(whichInfoFile()!==undefined){const e=n().readFileSync(whichInfoFile()).match(/<img[^>]+>|!\[[^\]]+\]/gi);const t=["-shield","img.shields.io","buymeacoffee.com"];return e.length&&!e.every((e=>t.find((t=>e.includes(t)))!==undefined))||"There should be images to show the user what they get"}return"There should be images to show the user what they get"},url:"https://hacs.xyz/docs/publish/include#check-images"}]},{group:"json",description:"JSON contents checks",checks:[{name:"manifest",description:"All required keys are present in manifest.json",canSkip:false,ignore:()=>false,check:()=>{const e=getManifest();if(e){const t=["issue_tracker","domain","documentation","codeowners","version"];const s=t.filter((t=>!Object.keys(e).includes(t)));if(s.length>0){return`manifest.json is missing the key(s): ${s.join(", ")}`}return true}return"manifest.json file not found"},url:"https://hacs.xyz/docs/publish/include#check-manifest"},{name:"hacsjson",description:"hacs.json has the 'name' key set",canSkip:true,ignore:()=>false,check:()=>{if(getHacsConfig()){return"name"in getHacsConfig()&&getHacsConfig().name!==""||"Missing 'name' from hacs.json"}return"hacs.json file not found in the root of the repository"},url:"https://hacs.xyz/docs/publish/include#check-hacs-manifest"},{name:"requirements",description:"Requirements validation",canSkip:true,ignore:()=>G!=="integration"||!getRequirements()||!getRequirements().length,check:()=>{const t=/^(--.+\s)?([-_.\w\d]+.*(?:==|>=|<=|~=|!=|<|>|===)?.*$)/;let s=[];getRequirements().forEach((n=>{const i=n.match(t);if(!i){s.push(n);return}const r=i[1]||"";const o=i[2];try{(0,O.execSync)(`pip --disable-pip-version-check install --quiet --no-warn-script-location --index https://wheels.home-assistant.io/alpine-3.12/amd64 --extra-index-url https://pypi.python.org/simple ${r} ${o}`)}catch(t){(0,e.setFailed)(`pip failed with: ${t}`);s.push(n)}}));if(s.length!==0){return`These requirement(s) failed to parse or install: ${s.join(", ")}`}(0,O.execSync)("pip install pipdeptree");s=[];const n=/^(?:--.+\s)?([-_.\w\d]+).*(?:==|>=|<=|~=|!=|<|>|===)?.*$/;const r=getRequirements().map((e=>{const t=e.match(n);if(!t){s.push(e);return false}return t[1].toLowerCase().replace("_","-")}));if(s.length!==0){return`These requirement(s) string(s) failed to parse: ${s.join(", ")}`}if(r.length>0){const e=q(z);const t=(0,i.parse)((0,O.execSync)(`pipdeptree -w silence --packages ${r.join(",")} --json`).toString());s=t.filter((t=>e.includes(t)))}else{return"Something went wrong while checking requirements"}if(s.length!==0){return`Packages: ${s.join(", ")} are not compatible with Python standard libraries`}return true},url:"https://hacs.xyz/docs/publish/include#check-requirements"}]},{group:"external",description:"External repo checks",checks:[{name:"brands",description:`${I} is added to https://github.com/home-assistant/brands NICE!`,canSkip:true,ignore:()=>G!=="integration",check:async()=>{const e=getManifest();if(e){if(Object.keys(e).includes("domain")){return checkURL(`https://github.com/home-assistant/brands/tree/master/custom_integrations/${e.domain}`).then((t=>t||`${e.domain} is not added to the custom_integration directory in https://github.com/home-assistant/brands`))}return"domain missing from manifest.json, cannot check brands"}return"manifest.json file not found, cannot check brands"},url:"https://hacs.xyz/docs/publish/include#check-brands"},{name:"wheels",description:"Python wheels",canSkip:true,ignore:()=>G!=="integration"||!getRequirements()||!getRequirements.length,check:async()=>{const e=getManifest();if(e){if(Object.keys(e).includes("domain")){return checkURL(`https://raw.githubusercontent.com/home-assistant/wheels-custom-integrations/master/components/${e.domain}.json`).then((e=>e||"Python Wheels"))}return"domain missing from manifest.json, cannot check wheels"}return"manifest.json file not found, cannot check wheels"},url:"https://hacs.xyz/docs/publish/include#check-wheels"}]},{group:"functionality",description:"Functionality checks",checks:[{name:"hacs",description:"HACS load-ability check (does not try to load)",canSkip:true,ignore:()=>false,check:()=>{let e=[];switch(G){case"appdaemon":e=F().sync("*.py");if(e.length>0){return"Should not be any python files in the root of the repository"}e=F().sync("apps/*.py");if(e.length>0){return"Should not be any python files in the apps directory of the repository"}e=F().sync("apps/*/");if(e.length!==1){return"Should only be one app in the apps directory of the repository"}e=F().sync("apps/*/*.py");if(e.length===0){return"The application python files are not present in the apps/APP_NAME/ directory of the repository"}return true;case"integration":e=F().sync("*.py");if(e.length>0){return"Should not be any python files in the root of the repository"}e=F().sync("custom_components/*.py");if(e.length>0){return"Should not be any python files in the custom_components directory of the repository"}e=F().sync("custom_components/*/");if(e.length!==1){return"Should only be one app in the apps directory of the repository"}e=F().sync("custom_components/*/*.py");if(e.length===0){return"The application python files are not present in the apps/APP_NAME/ directory of the repository"}return true;case"netdaemon":e=F().sync("*.cs");if(e.length>0){return"Should not be any cs files in the root of the repository"}e=F().sync("apps/*.cs");if(e.length>0){return"Should not be any cs files in the apps directory of the repository"}e=F().sync("apps/*/");if(e.length!==1){return"Should only be one app in the apps directory of the repository"}e=F().sync("apps/*/*.cs");if(e.length===0){return"The application cs files are not present in the apps/APP_NAME/ directory of the repository"}return true;case"plugin":e=F().sync(`?(dist/)?(lovelace-)${W}.js)`);if(e.length!==1){return"The plugin should follow the rules at https://hacs.xyz/docs/publish/plugin"}return true;case"python_script":e=F().sync("*.py");if(e.length>0){return"Should not be any python files in the root of the repository"}e=F().sync("python_scripts/*.py");if(e.length!==1){return"Should only be one python file in the python_scripts directory of the repository"}return true;case"themes":e=F().sync("*.py");if(e.length>0){return"Should not be any python files in the root of the repository"}e=F().sync("themes/*.yaml");if(e.length!==1){return"Should only be one yaml file in the themes directory of the repository"}return true;default:return"Invalid category for HACS"}},url:"https://hacs.xyz/docs/publish/include#check-hacs"}]}];const U=L;const H=(0,e.getInput)("ignore").split(" ")||[];const M=(0,e.getInput)("github-token");const $=(0,e.getBooleanInput)("comment");const{Octokit:N}=__nccwpck_require__(1231);const V=new N({auth:M});const Q=process.env.GITHUB_REPOSITORY;const[Y,K]=Q.split("/");const J="✅";const Z="❌";const X="⚪";const ee="\x3c!-- Faster HACS action comment --\x3e";(0,e.info)(`Firing from ${t.context.eventName} on ${t.context.ref}`);const te=[ee,"🎉 **Faster HACS repository validator action summary** 🎉\n"];function setPassMessage(t){const s=`${J} ${t}`;(0,e.info)(s);te.push(s)}function setFailMessage(t,s){const n=`${Z} ${t} (more-info: ${s})`;(0,e.setFailed)(n);te.push(n)}function setNeutralMessage(t,s){const n=`${X} ${t} (more-info: ${s})`;(0,e.info)(n);te.push(n)}function setIgnoreMessage(t){const s=`${X} ${t}`;(0,e.info)(s);te.push(s)}async function runChecks(t,s=null){const n=t.checks.map((t=>new Promise((n=>{if(H.includes(t.name)&&t.canSkip){setIgnoreMessage(`Ignored check: ${t.name}`);n()}else if(!t.ignore()){Promise.resolve(t.check(s)).then((s=>{switch(typeof s){case"boolean":if(s){setPassMessage(t.description)}else{setFailMessage(t.description,t.url)}break;case"string":if(t.neutral){setNeutralMessage(s,t.url)}else{setFailMessage(s,t.url)}break;case"object":if(s.pass){setPassMessage(s.message)}else if(t.neutral){setNeutralMessage(s.message,t.url)}else{setFailMessage(s.message,t.url)}break;default:(0,e.setFailed)("Unknown check response type");break}n()}))}else{n()}}))));return Promise.all(n)}async function runCheckGroups(t){return new Promise((s=>{switch(t.group){case"repo":V.request("GET /repos/{owner}/{repo}",{headers:{accept:"application/vnd.github.mercy-preview+json"},owner:Y,repo:K}).catch((e=>{throw e.message})).then((e=>{runChecks(t,e.data).then(s())})).catch((t=>{(0,e.setFailed)(`Failed to process repo check: ${t.message}`)}));break;case"file":case"json":case"external":case"functionality":runChecks(t).then(s());break;default:(0,e.setFailed)(`Unknown check group ${t.group}`);break}}))}const se=U.map((t=>runCheckGroups(t).catch((s=>(0,e.setFailed)(`Something went wrong when processing the ${t.description}: ${s.message}`)))));Promise.all(se).then((()=>{if(t.context.payload.pull_request!=null&&$){te.push("\nThis check was completed with https://github.com/TheRealWaldo/faster-hacs-action which is designed to rapidly assess your HACS addon.  If this is a release, we still recommend you use the official https://github.com/hacs/action/ action!");const s=t.context.payload.pull_request.number;V.paginate(V.rest.issues.listComments,{owner:Y,repo:K,issue_number:s}).catch((t=>{(0,e.setFailed)(`Listing pull request comments failed with ${t}`)})).then((t=>{const n=t.find((e=>e.body.includes(ee)));if(n){V.issues.updateComment({owner:Y,repo:K,comment_id:n.id,body:te.join("\n")}).catch((t=>{(0,e.setFailed)(`Updating a pull request comment failed with ${t}`)}))}else{V.issues.createComment({owner:Y,repo:K,issue_number:s,body:te.join("\n")}).catch((t=>{(0,e.setFailed)(`Posting pull request comment failed with ${t}`)}))}}))}}))})();module.exports=__webpack_exports__})();